/***************************************************************************
                          MSLane.icc  -  The place where Vehicles
                          operate. 
                             -------------------
    begin                : Mon, 12 Mar 2001
    copyright            : (C) 2001 by ZAIK http://www.zaik.uni-koeln.de/AFS
    author               : Christian Roessel
    email                : roessel@zpr.uni-koeln.de
 ***************************************************************************/


/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

// $Log$
// Revision 1.1  2002/10/16 14:48:26  dkrajzew
// ROOT/sumo moved to ROOT/src
//
// Revision 1.2  2002/06/06 07:18:41  croessel
// added #include <cassert>
//
// Revision 1.1  2002/05/29 17:09:21  croessel
// Initial commit.
//

/**************** INCLUDE HEADER FILES HERE ********************************/
#include <cassert>


/**************** DO NOT INCLUDE ANYTHING AFTER THIS POINT *****************/
#ifdef DISABLE_INLINE
#define inline
#endif

/**************** DEFINE INLINE FUNCTIONS HERE *****************************/

inline
bool
MSLane::empty() const
{
    assert( myVehBuffer == 0 );
    return myVehicles.empty();
}

/////////////////////////////////////////////////////////////////////////////

inline
MSLane&
MSLane::requestLane() const
{
    return *myRequestLane;
}

/////////////////////////////////////////////////////////////////////////////

inline
double
MSLane::maxSpeed() const
{
    return myMaxSpeed;
}

/////////////////////////////////////////////////////////////////////////////

inline
double
MSLane::length() const
{
    return myLength;
}

/////////////////////////////////////////////////////////////////////////////

inline
const MSEdge&
MSLane::edge() const                   
{
    return *myEdge;
}

/////////////////////////////////////////////////////////////////////////////


#ifdef DISABLE_INLINE
#undef inline
#endif

// Local Variables:
// mode:C++
// End:
