/****************************************************************************/
/// @file    MSDetectorFileOutput.h
/// @author  Christian Roessel
/// @date    2004-11-23
/// @version $Id$
///
// * @author Christian Roessel
/****************************************************************************/
// SUMO, Simulation of Urban MObility; see http://sumo.sourceforge.net/
// copyright : (C) 2001-2007
//  by DLR (http://www.dlr.de/) and ZAIK (http://www.zaik.uni-koeln.de/AFS)
/****************************************************************************/
//
//   This program is free software; you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation; either version 2 of the License, or
//   (at your option) any later version.
//
/****************************************************************************/
#ifndef MSDetectorFileOutput_h
#define MSDetectorFileOutput_h
// ===========================================================================
// compiler pragmas
// ===========================================================================
#ifdef _MSC_VER
#pragma warning(disable: 4786)
#endif


// ===========================================================================
// included modules
// ===========================================================================
#ifdef WIN32
#include <windows_config.h>
#else
#include <config.h>
#endif

#include <string>
#include <microsim/MSUnit.h>
#include <utils/common/SUMOTime.h>
#include <utils/iodevices/OutputDevice.h>


// ===========================================================================
// class definitions
// ===========================================================================
/**
 * Pure virtual base class for classes (e.g. MSLaneState and
 * MSInductLoop) that should produce XML-output via the
 * MSDetector2File or MSTravelcostDetector singletons.
 *
 * @see MSDetector2File
 * @see MSTravelcostDetector
 * @see MSLaneState
 * @see MSInductLoop
 */
class MSDetectorFileOutput
{
public:
    /// (virtual) destructor
    virtual ~MSDetectorFileOutput()
    { }

    /**
     * Get a header for file output which shall contain some
     * explanation of the output generated by getXMLOutput.
     */
    virtual void writeXMLHeader(OutputDevice &dev) const = 0;

    /**
     * Get the XML-formatted output of the concrete detector.
     *
     * @param lastNTimesteps Generate data out of the interval
     * (now-lastNTimesteps, now].
     */
    virtual void writeXMLOutput(OutputDevice &dev,
                                SUMOTime startTime, SUMOTime stopTime) = 0;

    /**
     * Get an opening XML-element containing information about the detector.
     */
    virtual void writeXMLDetectorInfoStart(OutputDevice &dev) const = 0;

    /**
     * Get a closing XML-element to getXMLDetectorInfoStart.
     */
    virtual void writeXMLDetectorInfoEnd(OutputDevice &dev) const = 0;

};


#endif

/****************************************************************************/

