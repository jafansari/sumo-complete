#ifndef MSDetectorFileOutput_H
#define MSDetectorFileOutput_H

/**
 * @file   MSDetectorFileOutput.h
 * @author Christian Roessel
 * @date   Thu Jul 31 12:28:19 2003
 * @version $Id$
 * @brief  Declaration of pure virtual base class MSDetectorFileOutput
 *
 */

/* Copyright (C) 2003 by German Aerospace Center (http://www.dlr.de) */

//---------------------------------------------------------------------------//
//
//   This program is free software; you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation; either version 2 of the License, or
//   (at your option) any later version.
//
//---------------------------------------------------------------------------//

// $Id$
// $Log$
// Revision 1.2  2005/02/01 10:10:43  dkrajzew
// got rid of MSNet::Time
//
//
/* =========================================================================
 * included modules
 * ======================================================================= */
#include <string>
#include <microsim/MSUnit.h>
#include <utils/iodevices/XMLDevice.h>
#include <utils/common/SUMOTime.h>


/* =========================================================================
 * class definitions
 * ======================================================================= */
/**
 * Pure virtual base class for classes (e.g. MSLaneState and
 * MSInductLoop) that should produce XML-output via the
 * MSDetector2File or MSTravelcostDetector singletons.
 *
 * @see MSDetector2File
 * @see MSTravelcostDetector
 * @see MSLaneState
 * @see MSInductLoop
 */
class MSDetectorFileOutput
{
public:
    /**
     * Returns a string indentifying an object of this class. Used for
     * distinct filenames.
     */
    virtual std::string  getNamePrefix( void ) const = 0;
    /**
     * Get a header for file output which shall contain some
     * explanation of the output generated by getXMLOutput.
     */
    virtual void writeXMLHeader( XMLDevice &dev ) const = 0;
    /**
     * Get the XML-formatted output of the concrete detector.
     *
     * @param lastNTimesteps Generate data out of the interval
     * (now-lastNTimesteps, now].
     */
    virtual void writeXMLOutput( XMLDevice &dev,
        SUMOTime startTime, SUMOTime stopTime ) = 0;
    /**
     * Get an opening XML-element containing information about the detector.
     */
    virtual void writeXMLDetectorInfoStart( XMLDevice &dev ) const = 0;
    /**
     * Get a closing XML-element to getXMLDetectorInfoStart.
     */
    virtual void writeXMLDetectorInfoEnd( XMLDevice &dev ) const = 0;

    /**
     * Get the data-clean up interval in timesteps.
     */
    virtual MSUnit::IntSteps getDataCleanUpSteps( void ) const = 0;

};

/**************** DO NOT DEFINE ANYTHING AFTER THE INCLUDE *****************/

#endif

// Local Variables:
// mode:C++
// End:

