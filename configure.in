dnl Process this file with autoconf to produce a configure script.
AC_INIT(sumo, 0.9.6)
AC_CONFIG_SRCDIR(src/sumo_main.cpp)
AC_CANONICAL_SYSTEM

dnl create an config-header
AM_CONFIG_HEADER(src/config.h)

dnl enable automake-support
AM_INIT_AUTOMAKE([gnu dist-zip tar-ustar])

AC_PREFIX_DEFAULT(/usr/local)
if test "x$prefix" = "xNONE"; then
  prefix=$ac_default_prefix
  ac_configure_args="$ac_configure_args --prefix $prefix"
fi

dnl Checks for programs.
AC_PROG_INSTALL

dnl enable libtool-support
AM_PROG_LIBTOOL


dnl Check for enable-features that shall go into config.h
AC_ARG_ENABLE([geomcheck], [AS_HELP_STRING([--enable-geomcheck],[enable compilation of geometry checks [default=no].])],
              [AC_DEFINE(CHECK_UNIQUE_POINTS_GEOMETRY, 1, [Define to 1 in order to enable geometry checking.])])
AM_CONDITIONAL(CHECK_UNIQUE_POINTS_GEOMETRY, test x$enable_geomcheck = xyes)

AC_ARG_ENABLE([memcheck], [AS_HELP_STRING([--enable-memcheck],[enable compilation of memory leak checks [default=no].])],
              [AC_DEFINE(CHECK_MEMORY_LEAKS, 1, [Define to 1 in order to enable memory checks.])])
AM_CONDITIONAL(CHECK_MEMORY_LEAKS, test x$enable_memcheck = xyes)

AC_ARG_ENABLE([debug], [AS_HELP_STRING([--enable-debug],[enable sumo debugging code [default=no].])],
              [AC_DEFINE(_DEBUG, 1, [Define to 1 in order to enable sumo debugging code.])], [CXXFLAGS="-O2"])
AC_PROG_CXX

AC_ARG_ENABLE([speedcheck], [AS_HELP_STRING([--enable-speedcheck],[enable sumo speedchecking code [default=no].])],
              [AC_DEFINE(_SPEEDCHECK, 1, [Define to 1 in order to enable simulation-speed checking.])])

AC_ARG_ENABLE([internal-lanes], [AS_HELP_STRING([--disable-internal-lanes],[Disable junction internal lanes.])],
              [],[AC_DEFINE(HAVE_INTERNAL_LANES, 1, [Define to 1 if you want junction internal lanes])])

AC_ARG_ENABLE([double-precision], [AS_HELP_STRING([--enable-double-precision],[Use "double" instead of "float" for calculations.])],
              [AC_DEFINE([SUMOReal], [double], [defines the precision of floats])],
	      [AC_DEFINE([SUMOReal], [float], [defines the precision of floats])])

AC_DEFINE([POSITION_EPS], [0.1], [defines the epsilon to use on position comparison])
AC_DEFINE([OUTPUT_ACCURACY], [2], [defines the number of digits after the comma in output])



dnl ---------------------------------------------
dnl check for libraries...
dnl - - - - - - - - - - - - - - - - - - - - - - -

dnl  ... for xerces
AC_ARG_WITH([xerces], [AS_HELP_STRING([--with-xerces=DIR],[where Xerces-C is installed (libraries in DIR/lib, headers in DIR/include).])])
if test x"$with_xerces" != x; then
   if test x"$with_xerces_libraries" = x; then
      with_xerces_libraries=$with_xerces/lib
   fi
   if test x"$with_xerces_includes" = x; then
      with_xerces_includes=$with_xerces/include
   fi
fi

dnl   ... for libs
LIB_XERCES="xerces-c"
AC_ARG_WITH([xerces-libraries], [AS_HELP_STRING([--with-xerces-libraries=DIR],[where the Xerces-C library is installed.])])
if test x"$with_xerces_libraries" = x; then
   AC_CHECK_LIB([$LIB_XERCES], [main], [true], [AC_MSG_ERROR([xerces-lib not found. Specify path with option --with-xerces-libraries=DIR.])])
else
   save_ldflags=$LDFLAGS
   LDFLAGS="-L$with_xerces_libraries"
   export LDFLAGS
   AC_CHECK_LIB([$LIB_XERCES], [main], [XERCES_LDFLAGS=$LDFLAGS], [AC_MSG_ERROR([xerces-lib not found in "$with_xerces_libraries".])])
   LDFLAGS=$save_ldflags
   AC_SUBST(XERCES_LDFLAGS)
fi
AC_SUBST(LIB_XERCES)

dnl   ... for includes
AC_ARG_WITH([xerces-includes], [AS_HELP_STRING([--with-xerces-includes=DIR],[where the Xerces-C includes are.])])
if test x"$with_xerces_includes" = x; then
   AC_CHECK_HEADER([xercesc/util/XercesVersion.hpp], [], [AC_MSG_ERROR([xerces-includes not found. Specify path with option --with-xerces-includes=DIR.])])
else
   save_cppflags=$CPPFLAGS
   CPPFLAGS="-I$with_xerces_includes"
   export CPPFLAGS
   AC_CHECK_HEADER([xercesc/util/XercesVersion.hpp], [XERCES_INCLUDES="$with_xerces_includes"], [AC_MSG_ERROR([xerces-includes not found in "$with_xerces_includes".])])
   CPPFLAGS=$save_cppflags
   AC_SUBST(XERCES_INCLUDES)
fi



dnl - - - - - - - - - - - - - - - - - - - - - - -
dnl  ... for proj and gdal
AC_ARG_WITH([proj-gdal], [AS_HELP_STRING([--with-proj-gdal=DIR],[where PROJ and GDAL are installed (libraries in DIR/lib, headers in DIR/include).])])
if test x"$with_proj_gdal" != x; then
   if test x"$with_proj_libraries" = x; then
      with_proj_libraries=$with_proj_gdal/lib
   fi
   if test x"$with_proj_includes" = x; then
      with_proj_includes=$with_proj_gdal/include
   fi
   if test x"$with_gdal_libraries" = x; then
      with_gdal_libraries=$with_proj_gdal/lib
   fi
   if test x"$with_gdal_includes" = x; then
      with_gdal_includes=$with_proj_gdal/include
   fi
fi

dnl  ... for proj.4
dnl   ... for libs
LIB_PROJ="proj"
AC_ARG_WITH([proj-libraries], [AS_HELP_STRING([--with-proj-libraries=DIR],[where the PROJ library is installed (overrides previous settings).])])
if test x"$with_proj_libraries" = x; then
   AC_CHECK_LIB([$LIB_PROJ], [main], [true], [AC_MSG_ERROR([proj-lib not found. Specify path with option --with-proj-libraries=DIR.])])
else
   save_ldflags=$LDFLAGS
   LDFLAGS="-L$with_proj_libraries"
   export LDFLAGS
   AC_CHECK_LIB([$LIB_PROJ], [main], [PROJ_LDFLAGS=$LDFLAGS], [AC_MSG_ERROR([proj-lib not found in "$with_proj_libraries".])])
   LDFLAGS=$save_ldflags
   AC_SUBST(PROJ_LDFLAGS)
fi
AC_SUBST(LIB_PROJ)

dnl   ... for includes
AC_ARG_WITH([proj-includes], [AS_HELP_STRING([--with-proj-includes=DIR],[where the PROJ includes are (overrides previous settings).])])
if test x"$with_proj_includes" = x; then
   AC_CHECK_HEADER([proj_api.h], [], [AC_MSG_ERROR([proj-includes not found. Specify path with option --with-proj-includes=DIR.])])
else
   save_cppflags=$CPPFLAGS
   CPPFLAGS="-I$with_proj_includes"
   export CPPFLAGS
   AC_CHECK_HEADER([proj_api.h], [PROJ_INCLUDES="$with_proj_includes"], [AC_MSG_ERROR([proj-includes not found in "$with_proj_includes".])])
   CPPFLAGS=$save_cppflags
   AC_SUBST(PROJ_INCLUDES)
fi


dnl - - - - - - - - - - - - - - - - - - - - - - -
dnl  ... for gdal
dnl   ... for libs
LIB_GDAL="gdal"
AC_ARG_WITH([gdal-libraries], [AS_HELP_STRING([--with-gdal-libraries=DIR],[where the GDAL library is installed (overrides previous settings).])])
if test x"$with_gdal_libraries" = x; then
   AC_CHECK_LIB([$LIB_GDAL], [main], [true], [AC_MSG_ERROR([gdal-lib not found. Specify path with option --with-gdal-libraries=DIR.])])
else
   save_ldflags=$LDFLAGS
   LDFLAGS="-L$with_gdal_libraries"
   export LDFLAGS
   AC_CHECK_LIB([$LIB_GDAL], [main], [GDAL_LDFLAGS=$LDFLAGS], [AC_MSG_ERROR([gdal-lib not found in "$with_gdal_libraries".])])
   LDFLAGS=$save_ldflags
   AC_SUBST(GDAL_LDFLAGS)
fi
AC_SUBST(LIB_GDAL)

dnl   ... for includes
AC_ARG_WITH([gdal-includes], [AS_HELP_STRING([--with-gdal-includes=DIR],[where the GDAL includes are (overrides previous settings).])])
if test x"$with_gdal_includes" = x; then
   AC_CHECK_HEADER([ogr_api.h], [], [AC_MSG_ERROR([gdal-includes not found. Specify path with option --with-gdal-includes=DIR.])])
else
   save_cppflags=$CPPFLAGS
   CPPFLAGS="-I$with_gdal_includes"
   export CPPFLAGS
   AC_CHECK_HEADER([ogr_api.h], [GDAL_INCLUDES="$with_gdal_includes"], [AC_MSG_ERROR([gdal-includes not found in "$with_gdal_includes".])])
   CPPFLAGS=$save_cppflags
   AC_SUBST(GDAL_INCLUDES)
fi


dnl - - - - - - - - - - - - - - - - - - - - - - -
dnl  ... for fox
fox_include_prefix="fox-1.4"
AC_ARG_WITH([fox], [AS_HELP_STRING([--with-fox=DIR],[where Fox is installed (libraries in DIR/lib, headers in DIR/include/fox-1.4).])])
if test x"$with_fox" != x; then
   if test x"$with_fox_libraries" = x; then
      with_fox_libraries=$with_fox/lib
   fi
   if test x"$with_fox_includes" = x; then
      with_fox_includes=$with_fox/include/$fox_include_prefix
   fi
fi

dnl   ... for libs
LIB_FOX="FOX-1.4"
AC_ARG_WITH([fox-libraries], [AS_HELP_STRING([--with-fox-libraries=DIR],[where the Fox library is installed.])])
if test x"$with_fox_libraries" = x; then
   AC_CHECK_LIB([$LIB_FOX], [main], [true], [AC_MSG_RESULT([fox-lib not found. Specify path with option --with-fox-libraries=DIR for gui applications.])])
else
   save_ldflags=$LDFLAGS
   LDFLAGS="-L$with_fox_libraries"
   export LDFLAGS
   AC_CHECK_LIB([$LIB_FOX], [main], [FOX_LDFLAGS=$LDFLAGS], [AC_MSG_ERROR([fox-lib not found in "$with_fox_libraries".])])
   LDFLAGS=$save_ldflags
   AC_SUBST(FOX_LDFLAGS)
fi
AC_SUBST(LIB_FOX)

dnl   ... for includes
AC_ARG_WITH([fox-includes], [AS_HELP_STRING([--with-fox-includes=DIR],[where the Fox includes are.])])
if test x"$with_fox_includes" = x; then
   AC_CHECK_HEADER([$fox_include_prefix/fxver.h], [], [
      AC_MSG_RESULT([---------------------------])
      AC_MSG_RESULT([fox-includes not found.])
      AC_MSG_RESULT([Specify path with option --with-fox-includes=DIR for gui-enabled applications.])
      AC_MSG_RESULT([---------------------------])
   ])
else
   save_cppflags=$CPPFLAGS
   CPPFLAGS="-I$with_fox_includes"
   export CPPFLAGS
   AC_CHECK_HEADER([fxver.h], [FOX_INCLUDES="$with_fox_includes"], [AC_MSG_ERROR([fox-includes not found in "$with_fox_includes".])])
   CPPFLAGS=$save_cppflags
   AC_SUBST(FOX_INCLUDES)
fi
AM_CONDITIONAL([WITH_GUI], [test x"$with_fox_includes" != x && test x"$with_fox_libraries" != x])

dnl - - - - - - - - - - - - - - - - - - - - - - -
dnl  ... for XmlRpc++
AC_ARG_WITH([xmlrpc],
            [AS_HELP_STRING([--with-xmlrpc=DIR],[where XmlRpc is installed (libraries in DIR/lib, headers in DIR/include).])],
            [ac_xmlrpc="$withval"])
if test x"$ac_xmlrpc" != x; then
   if test x"$ac_xmlrpc" != xyes; then
      if test x"$ac_xmlrpc_libraries" = x; then
         ac_xmlrpc_libraries=$ac_xmlrpc/lib
      fi
      if test x"$ac_xmlrpc_includes" = x; then
         ac_xmlrpc_includes=$ac_xmlrpc/include
      fi
   fi
   AC_DEFINE(_RPC, 1, [Define to 1 in order to enable rpc features.])
fi
AM_CONDITIONAL([WITH_XMLRPC], [test x"$ac_xmlrpc" != x])
dnl   ... for libs
AC_ARG_WITH(xmlrpc-libraries,
    [  --with-xmlrpc-libraries=DIR where the XmlRpc++ library is installed.],
    [  ac_xmlrpc_libraries="$withval"
    ])

AC_MSG_CHECKING([for xmlrpc-libraries])
if test x"$ac_xmlrpc_libraries" = x; then
   AC_CHECK_LIB([XmlRpc], [main], [ac_xmlrpc_libraries=true], [AC_MSG_RESULT([xmlrpc-lib not found. Specify path with option --with-xmlrpc-libraries=DIR to enable XML-RPC.])])
else
   save_ldflags=$LDFLAGS
   LDFLAGS="-L$ac_xmlrpc_libraries"
   export LDFLAGS
   AC_CHECK_LIB([XmlRpc], [main], [XMLRPC_LDFLAGS=$LDFLAGS], [AC_MSG_ERROR([xmlrpc-lib not found in "$ac_xmlrpc_libraries".])])
   LDFLAGS=$save_ldflags
   AC_SUBST(XMLRPC_LDFLAGS)
fi
LIB_XMLRPC="XmlRpc"
AC_SUBST(LIB_XMLRPC)

dnl   ... for includes
AC_ARG_WITH(xmlrpc-includes,
    [  --with-xmlrpc-includes=DIR  where the XmlRpc++ includes are. ],
    [
       ac_xmlrpc_includes="$withval"
    ])
AC_MSG_CHECKING([for xmlrpc-includes])
if test x"$ac_xmlrpc_includes" = x; then
   if test -e /usr/local/include/xmlrpc/XmlRpc.h; then
      AC_MSG_RESULT([yes])
      ac_xmlrpc_includes=/usr/local/include/xmlrpc
   elif test -e /usr/include/XmlRpc.h; then
      AC_MSG_RESULT([yes])
      ac_xmlrpc_includes=/usr/include
   elif test -e /usr/local/include/XmlRpc.h; then
      AC_MSG_RESULT([yes])
      ac_xmlrpc_includes=/usr/local/include
   else
      AC_MSG_RESULT([no])
      AC_MSG_RESULT([xmlrpc-includes not found.])
      AC_MSG_RESULT([Specify path with option --with-xmlrpc-includes=DIR.])
   fi
else
   if test -e "$ac_xmlrpc_includes/XmlRpc.h"; then
      AC_MSG_RESULT([yes])
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([gdal-includes not found in "$with_gdal_includes".])
   fi
fi
XMLRPC_INCLUDES="$ac_xmlrpc_includes"
AC_SUBST(XMLRPC_INCLUDES)


dnl ---------------------------------------------


dnl Checks for typedefs, structures, and compiler characteristics.
dnl perform program name transformation
dnl AC_ARG_PROGRAM

dnl add here all your Makefiles. These will be created by configure
AC_OUTPUT(
src/Makefile
src/foreign/Makefile
src/foreign/nvwa/Makefile
src/foreign/mersenne/Makefile
src/gui/Makefile
src/gui/dialogs/Makefile
src/gui/drawerimpl/Makefile
src/guinetload/Makefile
src/guisim/Makefile
src/guisim/guilogging/Makefile
src/icons/Makefile
src/microsim/Makefile
src/microsim/actions/Makefile
src/microsim/devices/Makefile
src/microsim/lanechanging/Makefile
src/microsim/logging/Makefile
src/microsim/output/Makefile
src/microsim/output/e1_detectors/Makefile
src/microsim/output/e2_detectors/Makefile
src/microsim/output/e3_detectors/Makefile
src/microsim/output/meandata/Makefile
src/microsim/traffic_lights/Makefile
src/microsim/trigger/Makefile
src/multimodal/Makefile
src/netbuild/Makefile
src/netbuild/nodes/Makefile
src/netedit/Makefile
src/netgen/Makefile
src/netimport/Makefile
src/netimport/arcview/Makefile
src/netimport/artemis/Makefile
src/netimport/cell/Makefile
src/netimport/elmar/Makefile
src/netimport/elmar2/Makefile
src/netimport/sumo/Makefile
src/netimport/tiger/Makefile
src/netimport/vissim/Makefile
src/netimport/vissim/tempstructs/Makefile
src/netimport/vissim/typeloader/Makefile
src/netimport/visum/Makefile
src/netimport/xml/Makefile
src/netload/Makefile
src/od2trips/Makefile
src/polyconvert/Makefile
src/router/Makefile
src/routing_df/Makefile
src/routing_dua/Makefile
src/routing_jtr/Makefile
src/sumo_only/Makefile
src/tools/Makefile
src/utils/Makefile
src/utils/actions/Makefile
src/utils/bindevice/Makefile
src/utils/common/Makefile
src/utils/distribution/Makefile
src/utils/foxtools/Makefile
src/utils/geoconv/Makefile
src/utils/geom/Makefile
src/utils/gfx/Makefile
src/utils/glutils/Makefile
src/utils/gui/Makefile
src/utils/gui/div/Makefile
src/utils/gui/drawer/Makefile
src/utils/gui/events/Makefile
src/utils/gui/globjects/Makefile
src/utils/gui/images/Makefile
src/utils/gui/tracker/Makefile
src/utils/gui/windows/Makefile
src/utils/helpers/Makefile
src/utils/importio/Makefile
src/utils/iodevices/Makefile
src/utils/options/Makefile
src/utils/router/Makefile
src/utils/shapes/Makefile
src/utils/sumoxml/Makefile
src/utils/xml/Makefile
Makefile)

