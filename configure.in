dnl Process this file with autoconf to produce a configure script.
AC_INIT(sumo, 0.9.6)
AC_CONFIG_SRCDIR(src/sumo_main.cpp)
AC_CANONICAL_SYSTEM

dnl create an config-header
AM_CONFIG_HEADER(src/config.h)

dnl enable automake-support
AM_INIT_AUTOMAKE([tar-ustar])

AC_PREFIX_DEFAULT(/usr/local)
if test "x$prefix" = "xNONE"; then
  prefix=$ac_default_prefix
  ac_configure_args="$ac_configure_args --prefix $prefix"
fi

dnl Checks for programs.
AC_PROG_INSTALL

dnl enable libtool-support
AM_PROG_LIBTOOL


dnl Check for enable-features that shall go into config.h
AC_ARG_ENABLE([geomcheck], [AS_HELP_STRING([--enable-geomcheck],[enable compilation of geometry checks [default=no].])],
              [AC_DEFINE(CHECK_UNIQUE_POINTS_GEOMETRY, 1, [Define to 1 in order to enable geometry checking.])])
AM_CONDITIONAL(CHECK_UNIQUE_POINTS_GEOMETRY, test x$enable_geomcheck = xyes)

AC_ARG_ENABLE([memcheck], [AS_HELP_STRING([--enable-memcheck],[enable compilation of memory leak checks [default=no].])],
              [AC_DEFINE(CHECK_MEMORY_LEAKS, 1, [Define to 1 in order to enable memory checks.])])
AM_CONDITIONAL(CHECK_MEMORY_LEAKS, test x$enable_memcheck = xyes)

AC_ARG_ENABLE([debug], [AS_HELP_STRING([--enable-debug],[enable sumo debugging code [default=no].])],
              [AC_DEFINE(_DEBUG, 1, [Define to 1 in order to enable sumo debugging code.])], [CXXFLAGS="-O2"])
AC_PROG_CXX

AC_ARG_ENABLE([speedcheck], [AS_HELP_STRING([--enable-speedcheck],[enable sumo speedchecking code [default=no].])],
              [AC_DEFINE(_SPEEDCHECK, 1, [Define to 1 in order to enable simulation-speed checking.])])

AC_ARG_ENABLE([internal-lanes], [AS_HELP_STRING([--disable-internal-lanes],[Disable junction internal lanes.])],
              [],[AC_DEFINE(HAVE_INTERNAL_LANES, 1, [Define to 1 if you want junction internal lanes])])

AC_ARG_ENABLE([double-precision], [AS_HELP_STRING([--enable-double-precision],[Use "double" instead of "float" for calculations.])],
              [AC_DEFINE([SUMOReal], [double], [defines the precision of floats])],
	      [AC_DEFINE([SUMOReal], [float], [defines the precision of floats])])

AC_DEFINE([POSITION_EPS], [0.1], [defines the epsilon to use on position comparison])



dnl ---------------------------------------------
dnl check for libraries...
dnl - - - - - - - - - - - - - - - - - - - - - - -
search_path="/usr /usr/local /opt"

dnl  ... for xerces
AC_ARG_WITH([xerces],
            [AS_HELP_STRING([--with-xerces=DIR],[where Xerces-C is installed (libraries in DIR/lib, headers in DIR/include).])],
            [ac_xerces="$withval"])
if test x"$ac_xerces" != x; then
   if test x"$ac_xerces_libraries" = x; then
      ac_xerces_libraries=$ac_xerces/lib
   fi
   if test x"$ac_xerces_includes" = x; then
      ac_xerces_includes=$ac_xerces/include
   fi
fi

dnl   ... for libs
AC_ARG_WITH(xerces-libraries,
    [  --with-xerces-libraries=DIR where the Xerces library is installed.],
    [  ac_xerces_libraries="$withval"
    ])
AC_MSG_CHECKING([for xerces-lib])
if test x"$ac_xerces_libraries" = x; then
   AC_CHECK_LIB([xerces-c], [main], [true], [AC_MSG_ERROR([xerces-lib not found. Specify path with option --with-xerces-libraries=DIR.])])
else
   save_ldflags=$LDFLAGS
   LDFLAGS="-L$ac_xerces_libraries"
   export LDFLAGS
   AC_CHECK_LIB([xerces-c], [main], [XERCES_LDFLAGS=$LDFLAGS], [AC_MSG_ERROR([xerces-lib not found in "$ac_xerces_libraries".])])
   LDFLAGS=$save_ldflags
   AC_SUBST(XERCES_LDFLAGS)
fi
LIB_XERCES="xerces-c"
AC_SUBST(LIB_XERCES)
dnl   ... for includes
AC_ARG_WITH(xerces-includes,
    [  --with-xerces-includes=DIR  where the Xerces includes are. ],
    [
       ac_xerces_includes="$withval"
    ])

AC_MSG_CHECKING([for xerces-includes])
if test x"$ac_xerces_includes" = x; then
   for xerces_path in $search_path ; do
      if test -e $xerces_path/include/xercesc; then
         ac_xerces_includes=$xerces_path/include
         break
      elif test -e $xerces_path/xerces/include; then
         ac_xerces_includes=$xerces_path/xerces/include
         break
      fi
   done
   if test x"$ac_xerces_includes" != x; then
      AC_MSG_RESULT([yes])
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([xerces-includes not found. Specify path with option --with-xerces-includes=DIR.])
   fi
else
   if test -e "$ac_xerces_includes/xercesc/sax2/SAX2XMLReader.hpp"; then
      AC_MSG_RESULT([yes])
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([xerces-includes not found in "$ac_xerces_includes".])
   fi
fi
XERCES_INCLUDES="$ac_xerces_includes"
AC_SUBST(XERCES_INCLUDES)



dnl - - - - - - - - - - - - - - - - - - - - - - -
dnl  ... for proj and gdal
AC_ARG_WITH(proj-gdal,
    [  --with-proj-gdal=DIR        where PROJ and GDAL are installed (libraries in DIR/lib, headers in DIR/include).],
    [  ac_proj_gdal="$withval"
    ])
if test x"$ac_proj_gdal" != x; then
   if test x"$ac_proj_libraries" = x; then
      ac_proj_libraries=$ac_proj_gdal/lib
   fi
   if test x"$ac_proj_includes" = x; then
      ac_proj_includes=$ac_proj_gdal/include
   fi
   if test x"$ac_gdal_libraries" = x; then
      ac_gdal_libraries=$ac_proj_gdal/lib
   fi
   if test x"$ac_gdal_includes" = x; then
      ac_gdal_includes=$ac_proj_gdal/include
   fi
fi

dnl  ... for proj.4
dnl   ... for libs

AC_ARG_WITH(proj-libraries,
    [  --with-proj-libraries=DIR   where the PROJ library is installed (overrides previous settings).],
    [  ac_proj_libraries="$withval"
    ])

AC_MSG_CHECKING([for proj-lib])
if test x"$ac_proj_libraries" = x; then
   AC_CHECK_LIB([proj], [main], [true], [AC_MSG_ERROR([proj-lib not found. Specify path with option --with-proj-libraries=DIR.])])
else
   save_ldflags=$LDFLAGS
   LDFLAGS="-L$ac_proj_libraries"
   export LDFLAGS
   AC_CHECK_LIB([proj], [main], [PROJ_LDFLAGS=$LDFLAGS], [AC_MSG_ERROR([proj-lib not found in "$ac_proj_libraries".])])
   LDFLAGS=$save_ldflags
   AC_SUBST(PROJ_LDFLAGS)
fi
LIB_PROJ="proj"
AC_SUBST(LIB_PROJ)
dnl   ... for includes
AC_ARG_WITH(proj-includes,
    [  --with-proj-includes=DIR    where the PROJ includes are (overrides previous settings).],
    [
       ac_proj_includes="$withval"
    ])

AC_MSG_CHECKING([for proj-includes])
if test x"$ac_proj_includes" = x; then
   for proj_path in $search_path ; do
      if test -e $proj_path/include/proj/src/proj_api.h; then
         ac_proj_includes=$proj_path/include/proj/src/
         break
      elif test -e $proj_path/include/proj_api.h; then
         ac_proj_includes=$proj_path/include/
         break
      fi
   done
   if test x"$ac_proj_includes" != x; then
      AC_MSG_RESULT([yes])
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([proj-includes not found. Specify path with option --with-proj-includes=DIR.])
   fi
else
   if test -e "$ac_proj_includes/proj_api.h"; then
      AC_MSG_RESULT([yes])
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([proj-includes not found in "$ac_proj_includes".])
   fi
fi
PROJ_INCLUDES="$ac_proj_includes"
AC_SUBST(PROJ_INCLUDES)

dnl - - - - - - - - - - - - - - - - - - - - - - -
dnl  ... for gdal
dnl   ... for libs
AC_ARG_WITH(gdal-libraries,
    [  --with-gdal-libraries=DIR   where the GDAL library is installed (overrides previous settings).],
    [  ac_gdal_libraries="$withval"
    ])

AC_MSG_CHECKING([for gdal-libraries])
if test x"$ac_gdal_libraries" = x; then
   AC_CHECK_LIB([gdal], [main], [true], [AC_MSG_ERROR([gdal-lib not found. Specify path with option --with-gdal-libraries=DIR.])])
else
   save_ldflags=$LDFLAGS
   LDFLAGS="-L$ac_gdal_libraries"
   export LDFLAGS
   AC_CHECK_LIB([gdal], [main], [GDAL_LDFLAGS=$LDFLAGS], [AC_MSG_ERROR([gdal-lib not found in "$ac_gdal_libraries".])])
   LDFLAGS=$save_ldflags
   AC_SUBST(GDAL_LDFLAGS)
fi
LIB_GDAL="gdal"
AC_SUBST(LIB_GDAL)

dnl   ... for includes
AC_ARG_WITH(gdal-includes,
    [  --with-gdal-includes=DIR    where the GDAL includes are (overrides previous settings).],
    [
       ac_gdal_includes="$withval"
    ])
AC_MSG_CHECKING([for gdal-includes])
if test x"$ac_gdal_includes" = x; then
   for gdal_path in $search_path ; do
      if test -e $gdal_path/include/gdal; then
         ac_gdal_includes=$gdal_path/include/gdal
         break
      elif test -e $gdal_path/include/ogrsf_frmts.h; then
         ac_gdal_includes=$gdal_path/include/
         break
      fi
   done
   if test x"$ac_gdal_includes" != x; then
      AC_MSG_RESULT([yes])
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([gdal-includes not found. Specify path with option --with-gdal-includes=DIR.])
   fi
else
   if test -e "$ac_gdal_includes/ogrsf_frmts.h"; then
      AC_MSG_RESULT([yes])
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([gdal-includes not found in "$ac_gdal_includes".])
   fi
fi
GDAL_INCLUDES="$ac_gdal_includes"
AC_SUBST(GDAL_INCLUDES)

dnl - - - - - - - - - - - - - - - - - - - - - - -
dnl  ... for fox
AC_ARG_WITH([fox],
            [AS_HELP_STRING([--with-fox=DIR],[where FOX is installed (libraries in DIR/lib, headers in DIR/include).])],
            [ac_fox="$withval"])
if test x"$ac_fox" != x; then
   if test x"$ac_fox_libraries" = x; then
      ac_fox_libraries=$ac_fox/lib
   fi
   if test x"$ac_fox_includes" = x; then
      ac_fox_includes=$ac_fox/include
   fi
fi

dnl   ... for libs
AC_ARG_WITH(fox-libraries,
    [  --with-fox-libraries=DIR    where the Fox library is installed.],
    [  ac_fox_libraries="$withval"
    ])

AC_MSG_CHECKING([for fox-libraries])
if test x"$ac_fox_libraries" = x; then
   AC_CHECK_LIB([FOX-1.4], [main], [ac_fox_libraries=true], [AC_MSG_RESULT([fox-lib not found. Specify path with option --with-fox-libraries=DIR for gui applications.])])
else
   save_ldflags=$LDFLAGS
   LDFLAGS="-L$ac_fox_libraries"
   export LDFLAGS
   AC_CHECK_LIB([FOX-1.4], [main], [FOX_LDFLAGS=$LDFLAGS], [AC_MSG_ERROR([fox-lib not found in "$ac_fox_libraries".])])
   LDFLAGS=$save_ldflags
   AC_SUBST(FOX_LDFLAGS)
fi
LIB_FOX="FOX-1.4"
AC_SUBST(LIB_FOX)

dnl   ... for includes
AC_ARG_WITH(fox-includes,
    [  --with-fox-includes=DIR     where the Fox includes are. ],
    [
       ac_fox_includes="$withval"
    ])
AC_MSG_CHECKING([for fox-includes])
if test x"$ac_fox_includes" = x; then
   if test -e /usr/include/fox-1.4; then
      AC_MSG_RESULT([yes])
      ac_fox_includes=/usr/include/fox-1.4
   elif test -e /usr/local/include/fox-1.4; then
      AC_MSG_RESULT([yes])
      ac_fox_includes=/usr/local/include/fox-1.4
   else
      AC_MSG_RESULT([no])
      AC_MSG_RESULT([---------------------------])
      AC_MSG_RESULT([fox-lib not found.])
      AC_MSG_RESULT([Specify path with option --with-fox-includes=DIR for gui-enabled applications.])
      AC_MSG_RESULT([---------------------------])
   fi
else
   if test -e "$ac_fox_includes/fx.h"; then
      AC_MSG_RESULT([yes])
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([fox-includes not found in "$ac_fox_includes".])
   fi
fi
FOX_INCLUDES="$ac_fox_includes"
AC_SUBST(FOX_INCLUDES)
AM_CONDITIONAL([WITH_GUI], [test x"$ac_fox_includes" != x && test x"$ac_fox_libraries" != x])

dnl - - - - - - - - - - - - - - - - - - - - - - -
dnl  ... for XmlRpc++
AC_ARG_WITH([xmlrpc],
            [AS_HELP_STRING([--with-xmlrpc=DIR],[where XmlRpc is installed (libraries in DIR/lib, headers in DIR/include).])],
            [ac_xmlrpc="$withval"])
if test x"$ac_xmlrpc" != x; then
   if test x"$ac_xmlrpc" != xyes; then
      if test x"$ac_xmlrpc_libraries" = x; then
         ac_xmlrpc_libraries=$ac_xmlrpc/lib
      fi
      if test x"$ac_xmlrpc_includes" = x; then
         ac_xmlrpc_includes=$ac_xmlrpc/include
      fi
   fi
   AC_DEFINE(_RPC, 1, [Define to 1 in order to enable rpc features.])
fi
AM_CONDITIONAL([WITH_XMLRPC], [test x"$ac_xmlrpc" != x])
dnl   ... for libs
AC_ARG_WITH(xmlrpc-libraries,
    [  --with-xmlrpc-libraries=DIR where the XmlRpc++ library is installed.],
    [  ac_xmlrpc_libraries="$withval"
    ])

AC_MSG_CHECKING([for xmlrpc-libraries])
if test x"$ac_xmlrpc_libraries" = x; then
   AC_CHECK_LIB([XmlRpc], [main], [ac_xmlrpc_libraries=true], [AC_MSG_RESULT([xmlrpc-lib not found. Specify path with option --with-xmlrpc-libraries=DIR to enable XML-RPC.])])
else
   save_ldflags=$LDFLAGS
   LDFLAGS="-L$ac_xmlrpc_libraries"
   export LDFLAGS
   AC_CHECK_LIB([XmlRpc], [main], [XMLRPC_LDFLAGS=$LDFLAGS], [AC_MSG_ERROR([xmlrpc-lib not found in "$ac_xmlrpc_libraries".])])
   LDFLAGS=$save_ldflags
   AC_SUBST(XMLRPC_LDFLAGS)
fi
LIB_XMLRPC="XmlRpc"
AC_SUBST(LIB_XMLRPC)

dnl   ... for includes
AC_ARG_WITH(xmlrpc-includes,
    [  --with-xmlrpc-includes=DIR  where the XmlRpc++ includes are. ],
    [
       ac_xmlrpc_includes="$withval"
    ])
AC_MSG_CHECKING([for xmlrpc-includes])
if test x"$ac_xmlrpc_includes" = x; then
   if test -e /usr/local/include/xmlrpc/XmlRpc.h; then
      AC_MSG_RESULT([yes])
      ac_xmlrpc_includes=/usr/local/include/xmlrpc
   elif test -e /usr/include/XmlRpc.h; then
      AC_MSG_RESULT([yes])
      ac_xmlrpc_includes=/usr/include
   elif test -e /usr/local/include/XmlRpc.h; then
      AC_MSG_RESULT([yes])
      ac_xmlrpc_includes=/usr/local/include
   else
      AC_MSG_RESULT([no])
      AC_MSG_RESULT([xmlrpc-includes not found.])
      AC_MSG_RESULT([Specify path with option --with-xmlrpc-includes=DIR.])
   fi
else
   if test -e "$ac_xmlrpc_includes/XmlRpc.h"; then
      AC_MSG_RESULT([yes])
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([gdal-includes not found in "$ac_gdal_includes".])
   fi
fi
XMLRPC_INCLUDES="$ac_xmlrpc_includes"
AC_SUBST(XMLRPC_INCLUDES)


dnl ---------------------------------------------


dnl Checks for typedefs, structures, and compiler characteristics.
dnl perform program name transformation
dnl AC_ARG_PROGRAM

dnl add here all your Makefiles. These will be created by configure
AC_OUTPUT(
docs/Makefile
docs/docbook/Makefile
docs/docbook/gfx/Makefile
docs/docbook/gfx/dev/Makefile
docs/docbook/gfx/in_progress/Makefile
docs/docbook/gfx/more/Makefile
docs/docbook/gfx/user/Makefile
docs/docbook/tools/Makefile
docs/docbook/xslt/Makefile
docs/docbook/xslt/sumo_html/Makefile
docs/graphviz/Makefile
docs/internet/Makefile
docs/internet/css/Makefile
docs/internet/docs/Makefile
docs/internet/docs/gen/Makefile
docs/internet/docs/gen/gfx/Makefile
docs/internet/docs/gen/gfx/dev/Makefile
docs/internet/docs/gen/gfx/more/Makefile
docs/internet/docs/gen/gfx/user/Makefile
docs/internet/docs/gen/images/Makefile
docs/internet/downloads/Makefile
docs/internet/images/Makefile
docs/internet/links/Makefile
docs/internet/menus/Makefile
docs/internet/screens/Makefile
docs/man/Makefile
src/Makefile
src/foreign/Makefile
src/foreign/nvwa/Makefile
src/gui/Makefile
src/gui/dialogs/Makefile
src/gui/drawerimpl/Makefile
src/guinetload/Makefile
src/guisim/Makefile
src/guisim/guilogging/Makefile
src/icons/Makefile
src/microsim/Makefile
src/microsim/actions/Makefile
src/microsim/devices/Makefile
src/microsim/lanechanging/Makefile
src/microsim/logging/Makefile
src/microsim/output/Makefile
src/microsim/output/e1_detectors/Makefile
src/microsim/output/e2_detectors/Makefile
src/microsim/output/e3_detectors/Makefile
src/microsim/output/meandata/Makefile
src/microsim/traffic_lights/Makefile
src/microsim/trigger/Makefile
src/multimodal/Makefile
src/netbuild/Makefile
src/netbuild/nodes/Makefile
src/netedit/Makefile
src/netgen/Makefile
src/netimport/Makefile
src/netimport/arcview/Makefile
src/netimport/artemis/Makefile
src/netimport/cell/Makefile
src/netimport/elmar/Makefile
src/netimport/elmar2/Makefile
src/netimport/sumo/Makefile
src/netimport/tiger/Makefile
src/netimport/vissim/Makefile
src/netimport/vissim/tempstructs/Makefile
src/netimport/vissim/typeloader/Makefile
src/netimport/visum/Makefile
src/netimport/xml/Makefile
src/netload/Makefile
src/od2trips/Makefile
src/polyconvert/Makefile
src/router/Makefile
src/routing_df/Makefile
src/routing_dua/Makefile
src/routing_jtr/Makefile
src/sumo_only/Makefile
src/tools/Makefile
src/utils/Makefile
src/utils/actions/Makefile
src/utils/bindevice/Makefile
src/utils/common/Makefile
src/utils/dev/Makefile
src/utils/distribution/Makefile
src/utils/foxtools/Makefile
src/utils/geoconv/Makefile
src/utils/geom/Makefile
src/utils/gfx/Makefile
src/utils/glutils/Makefile
src/utils/gui/Makefile
src/utils/gui/div/Makefile
src/utils/gui/drawer/Makefile
src/utils/gui/events/Makefile
src/utils/gui/globjects/Makefile
src/utils/gui/images/Makefile
src/utils/gui/tracker/Makefile
src/utils/gui/windows/Makefile
src/utils/helpers/Makefile
src/utils/importio/Makefile
src/utils/iodevices/Makefile
src/utils/options/Makefile
src/utils/router/Makefile
src/utils/shapes/Makefile
src/utils/sumoxml/Makefile
src/utils/xml/Makefile
Makefile)

