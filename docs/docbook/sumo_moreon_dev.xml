<?xml version="1.0" encoding="UTF-8"?>
<book>
  <bookinfo>
    <title>SUMO developer documentation</title>

    <author>
      <firstname>Christian</firstname>

      <surname>RÃ¶ssel</surname>

      <affiliation>
        <address><email>christian.roessel@dlr.de</email></address>
      </affiliation>
    </author>

    <author>
      <firstname>Daniel</firstname>

      <surname>Krajzewicz</surname>

      <affiliation>
        <address><email>Daniel.Krajzewicz@dlr.de</email></address>
      </affiliation>
    </author>

    <releaseinfo>$Revision$</releaseinfo>
  </bookinfo>

  <toc></toc>

  <chapter id="dev_chp02">
    <title>Basics</title>

    <para>Within this first chapter, we will describe some generic information
    valid for all applications within the SUMO package</para>

    <sect1>
      <title>Compiler Switches (#define)</title>

      <para>In the following, the compiler switches used by SUMO are
      described.</para>

      <itemizedlist>
        <listitem>
          <para>HAVE_CONFIG_H</para>

          <para>Forces the code to read the configuration file as generated by
          the autoconf/automake applications.</para>

          <warning>
            <para>You should NEVER undefine this as
            "<classname>SUMOReal</classname>" is defined within the
            configuration file. The usage of an optional "HAVE_CONFIG_H"
            definition seems rather buggy... (bug)</para>
          </warning>
        </listitem>

        <listitem>
          <para>HAVE_INTERNAL_LANES</para>

          <para>If set, HAVE_INTERNAL_LANES forces the code to compile in a
          way that junction-internal lanes are used. By now, as internal lanes
          are not yet fully developed, this switch should not be
          defined/set.</para>
        </listitem>

        <listitem>
          <para>CHECK_MEMORY_LEAKS</para>

          <para>If set, CHECK_MEMORY_LEAKS forces the code to compile in a way
          that memory leaks are given out after an application's run.</para>
        </listitem>

        <listitem>
          <para>TL_DEBUG</para>

          <para>This definition lets the computation of traffic lights be very
          verbose.</para>
        </listitem>
      </itemizedlist>
    </sect1>

    <sect1>
      <title>Coding Style</title>

      <sect2>
        <title>Portability</title>

        <para>Use only classes and structures which can be compiled using both
        the MSVC-6.0/7.0 and the gcc. This excludes thing such as:</para>

        <itemizedlist>
          <listitem>
            <para>MFC-classes</para>
          </listitem>

          <listitem>
            <para>templates with partial definition (yep, sorry about
            this)</para>
          </listitem>
        </itemizedlist>
      </sect2>

      <sect2>
        <title>Source Code</title>

        <itemizedlist>
          <listitem>
            <para>Use the suffixes ".h" and ".cpp" to name your
            header/implementation-files</para>
          </listitem>

          <listitem>
            <para>The definition of inline-functions in ".icc"-files is
            deprecated and should not be used</para>
          </listitem>

          <listitem>
            <para>do not use the "using" statement in your .h-files</para>
          </listitem>
        </itemizedlist>
      </sect2>
    </sect1>
  </chapter>
</book>