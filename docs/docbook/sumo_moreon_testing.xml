<?xml version="1.0" encoding="UTF-8"?>
<book>
  <bookinfo>
    <title>SUMO - More on...</title>

    <author>
      <firstname>Daniel</firstname>

      <surname>Krajzewicz</surname>

      <affiliation>
        <address><email>Daniel.Krajzewicz@dlr.de</email></address>
      </affiliation>
    </author>

    <author>
      <firstname>Danilot</firstname>

      <surname>Tete Boyom</surname>
    </author>

    <releaseinfo>$Revision$</releaseinfo>
  </bookinfo>

  <toc></toc>

  <chapter id="more_tests">
    <title>More on... Software Tests</title>

    <para>Since version 0.9.3 we support some basic tests which prove the
    software functionality. The number of the available tests is not that
    large, yet, but it will hopefuly grow with time. Ths chapter describes how
    to set up the testing system and how to use it.</para>

    <para><emphasis>Audience:</emphasis> developers</para>

    <sect1>
      <title>Acceptance Testing using TextTest</title>

      <sect2>
        <title>About</title>

        <para>We use "<ulink
        url="http://texttest.carmen.se/">TextTest</ulink>" to test whether the
        sosftware still behaves as expected. What this application does is
        simply to compare an application's output (both normal and errors) and
        optionally also the output generated by the application with
        predefined outputs from files.</para>

        <para>There are some advantages and disadvantages of this approach. On
        the one hand, you can guarantee that the application is doing what is
        wanted by comparing all outputs with files you think are right. But
        this is also the problem with this approach: you do not have the
        assurance that the files you are comparing the current outputs to ARE
        right - you have to check these by hand.</para>

        <para>Anyhow, I think that for the current progress stage, this
        approach should be used, because a) the tests are quite small and
        errors can be easily seen b) it is working.</para>
      </sect2>

      <sect2>
        <title>Install</title>

        <para>At first, you have to download and install "<ulink
        url="http://texttest.carmen.se/">TextTest</ulink>" from <ulink
        url="http://texttest.carmen.se/">http://texttest.carmen.se/</ulink>.
        The installation seems to be not that easy at first, but if you just
        follow the steps described in TestText's documentation, you'll have
        the system up and running in some minutes. Before continuing, please
        check whether the tests included with the TextTest distribution run
        before proceeding.</para>

        <para>After installing TextTest, you have to set an environment
        variables in order to make the system run:</para>

        <itemizedlist>
          <listitem>
            <para><envar>TEXTTEST_HOME</envar></para>

            <para>Set it to the path SUMO-tests are located in
            (<filename><replaceable>&lt;SUMO_DIST&gt;</replaceable>/tests</filename>
            for the tests that come with the distribution)</para>
          </listitem>
        </itemizedlist>

        <para>This environment variable forces TextTest to use the specified
        directory as source of tests.</para>

        <para>But, yep, this should be all on installing the tests-subsystem
        so far.</para>
      </sect2>

      <sect2>
        <title>Running the Tests</title>

        <para>Within the
        <filename><replaceable>&lt;SUMO&gt;</replaceable>/tests</filename> -
        folder you can find batch-files which start TextTest.
        "runAllTests.bat" starts TextTest for testing all apllications located
        in the folder, "<filename>runNetconvertTests.bat</filename>" will only
        show tests for
        <application><application>NETCONVERT</application></application>,
        "<filename>runDuarouterTests.bat</filename>" only those for
        <application><application>DUAROUTER</application></application>
        etc.</para>
      </sect2>

      <sect2>
        <title>Setting up new Tests</title>

        <para>Please follow the instructions for TextTest. The system is
        configured in a way that output networks should have the name
        "net.net.xml" and should be wirtten to the current folder. If you add
        your tests this way, the messages the system prints (both normal and
        errors) and the generated files should be compared with the expected
        files.</para>
      </sect2>

      <sect2>
        <title>Coverage and Results</title>

        <para>As said before, further tests have to be added. The following
        tests are currently available:</para>

        <table>
          <title>Tests for DUAROUTER</title>

          <tgroup cols="1">
            <thead>
              <row>
                <entry>Test Set Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry><emphasis>Tests whether showing meta-information
                works</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>duarouter/meta/help</filename></entry>

                      <entry>checks whether printing help works</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/meta/version</filename></entry>

                      <entry>checks whether printing version works</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/trips/noop</filename></entry>

                      <entry>checks what happens when no argument is
                      given</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry><emphasis></emphasis></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether the import of route
                alternatives works</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>duarouter/alternatives/increasing_time</filename></entry>

                      <entry>plain old style alternatives with increasing
                      departue time</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/alternatives/newstyle_noid_increasing_time</filename></entry>

                      <entry>new style alternatives with increasing departure
                      times</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/alternatives/newstyle_noid_one_time</filename></entry>

                      <entry>new style alternatives with one departure
                      time</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/alternatives/newstyle_noid_unsorted_time</filename></entry>

                      <entry>new style alternatives with random departure time
                      with and <option>--unsorted</option> set</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/alternatives/one_time</filename></entry>

                      <entry>plain old style alternatives with one departue
                      time</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/alternatives/unsorted_time</filename></entry>

                      <entry>plain old style alternatives with random
                      departure time and <option>--unsorted</option>
                      set</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry><emphasis></emphasis></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether the import of flows
                works</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>duarouter/flows/flows2routes</filename></entry>

                      <entry>simple test with 100 vehicles and one departure
                      time</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/flows/flows2routes_100s_interval</filename></entry>

                      <entry>simple test with 100 vehicles with departure
                      interval between 0 and 100s</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/flows/flows2routes_100s_interval_ext</filename></entry>

                      <entry>The same as flows2routes_100s_interval but the
                      interval is specified using an enclosing element</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/flows/flows2routes_200s_interval</filename></entry>

                      <entry>simple test with 100 vehicles with departure
                      interval between 0 and 200s</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/flows/flows2routes_200s_interval_ext</filename></entry>

                      <entry>The same as flows2routes_200s_interval but the
                      interval is specified using an enclosing element</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/flows/flows2routes_100s_interval_withcolor</filename></entry>

                      <entry>Checks whether defining colors works</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/flows/flows2routes_100s_interval_withtype</filename></entry>

                      <entry>Checks whether a given type is passed
                      further</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/flows/flows2routes_100s_interval_typedefined</filename></entry>

                      <entry>Checks whether a defined type is passed
                      further</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry><emphasis></emphasis></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether the import of trips
                works</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>duarouter/trips/increasing_time</filename></entry>

                      <entry>100 trips, departure time is increasing</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/trips/increasing_time_notype</filename></entry>

                      <entry>same as increasing_time, but no type is given in
                      the trips</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/trips/increasing_time_typedefined</filename></entry>

                      <entry>same as increasing_time, but a type is given and
                      defined in the trips</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/trips/increasing_time_unsorted</filename></entry>

                      <entry>same as increasing_time, but with
                      <option>--unsorted</option> set</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/trips/increasing_time_withcolor</filename></entry>

                      <entry>same as increasing_time, a color is given
                      partially</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/trips/one_time</filename></entry>

                      <entry>100 trips, one departure time</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/trips/one_time_notype</filename></entry>

                      <entry>same as increasing_time, but no type is given in
                      the trips</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/trips/one_time_typedefined</filename></entry>

                      <entry>same as increasing_time, but a type is given and
                      defined in the trips</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/trips/one_time_unsorted</filename></entry>

                      <entry>the same, but with <option>--unsorted</option>
                      set</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/trips/unsorted_time</filename></entry>

                      <entry>100 trips, random departure time,
                      <option>--unsorted</option> set</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/trips/unsorted_time_notype</filename></entry>

                      <entry>same as unsorted_time, but no type is given in
                      the trips</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/trips/unsorted_time_typedefined</filename></entry>

                      <entry>same as unsorted_time, , but a type is given and
                      defined in the trips</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether the import of routes (SUMO)
                works</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>duarouter/routes/increasing_time</filename></entry>

                      <entry>100 routes (old style), departure time is
                      increasing</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/routes/one_time</filename></entry>

                      <entry>100 routes (old style), one departure
                      time</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/routes/unsorted_time</filename></entry>

                      <entry>100 routes (old style), random departure time,
                      <option>--unsorted</option> set</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/routes/newstyle_withid_increasing_time</filename></entry>

                      <entry>100 routes (new style, routes have an id),
                      departure time is increasing</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/routes/newstyle_withid_one_time</filename></entry>

                      <entry>100 routes (new style, routes have an id), one
                      departure time</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/routes/newstyle_withid_unsorted_time</filename></entry>

                      <entry>100 routes (new style, routes have an id), random
                      departure time, <option>--unsorted</option> set</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/routes/newstyle_noid_increasing_time</filename></entry>

                      <entry>100 routes (new style, routes have no id),
                      departure time is increasing</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/routes/newstyle_noid_one_time</filename></entry>

                      <entry>100 routes (new style, routes have no id), one
                      departure time</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/routes/newstyle_noid_increasing_time</filename></entry>

                      <entry>100 routes (new style, routes have no id), random
                      departure time, <option>--unsorted</option> set</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/routes/newstyle_increasing_colors</filename></entry>

                      <entry>same as newstyle_noid_increasing_time, but colors
                      are supplied partially</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether the DUA
                works</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>duarouter/dua/newstyle_dua3s_step1</filename></entry>

                      <entry>the first step of the dua3s-example using current
                      (new style) output; converts trips to routes and
                      alternatives</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/dua/newstyle_dua3s_step2</filename></entry>

                      <entry>the second step of the dua3s-example using
                      current (new style) output; converts alternatives from
                      step 1 to routes and alternatives using weights</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/dua/newstyle_dua3s_step3</filename></entry>

                      <entry>the third step of the dua3s-example using current
                      (new style) output; converts alternatives from step 2 to
                      routes and alternatives using weights</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/dua/oldstyle_dua3s_step2</filename></entry>

                      <entry>the second step of the dua3s-example using old
                      (style) output; converts alternatives from step 1 to
                      routes and alternatives using weights</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/dua/oldstyle_dua3s_step3</filename></entry>

                      <entry>the third step of the dua3s-example using old
                      (style) output; converts alternatives from step 2 to
                      routes and alternatives using weights</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether error handling
                works</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>duarouter/errors/no_net</filename></entry>

                      <entry>Tests what happens if the net is not
                      given</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/errors/false_net</filename></entry>

                      <entry>Tests what happens if the net is not
                      available</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/errors/no_output</filename></entry>

                      <entry>Tests what happens if the output is not
                      given</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/errors/no_input</filename></entry>

                      <entry>Tests what happens if the output can not be
                      written</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/errors/no_input</filename></entry>

                      <entry>Tests what happens if the input is not
                      given</entry>
                    </row>

                    <row>
                      <entry><filename>duarouter/errors/unknown_option</filename></entry>

                      <entry>Tests what happens if an unknown option is
                      passed</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry></entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <table>
          <title>Tests for NETCONVERT</title>

          <tgroup cols="1">
            <thead>
              <row>
                <entry>Test Set Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry><emphasis>Tests whether showing meta-information
                works</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>netconvert/meta/help</filename></entry>

                      <entry>checks whether printing help works</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/meta/version</filename></entry>

                      <entry>checks whether printing version works</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/trips/noop</filename></entry>

                      <entry>checks what happens when no argument is
                      given</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry><emphasis></emphasis></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether --speed-in-kmh works (in
                XML)</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>netconvert/XML2/speed_in_kmh/cross_notypes_kmh</filename></entry>

                      <entry>no types, speed in kmh</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/XML2/speed_in_kmh/cross_notypes_kmh_v</filename></entry>

                      <entry>the same, with verbose output</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/XML2/speed_in_kmh/cross_usingtypes_kmh</filename></entry>

                      <entry>types, speed in kmh</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/XML2/speed_in_kmh/cross_usingtypes_kmh_v</filename></entry>

                      <entry>the same, with verbose output</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether types may be used to describe
                edges (in XML)</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>netconvert/XML2/types/cross_notypes</filename></entry>

                      <entry>no types</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/XML2/types/cross_notypes_v</filename></entry>

                      <entry>the same, with verbose output</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/XML2/types/cross_usingtypes</filename></entry>

                      <entry>with types</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/XML2/types/cross_usingtypes_v</filename></entry>

                      <entry>the same, with verbose output</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether description of edge shapes
                works (in XML)</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>netconvert/XML2/shapes/hokkaido-japan</filename></entry>

                      <entry>a simple test for the hokkaido-network</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether setting connections and
                disabling addition of turnaround work</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>netconvert/XML2/connections/cross3l_edge2edge_conns</filename></entry>

                      <entry>a simple test for setting connections
                      edge-wise</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/XML2/connections/cross3l_lane2lane_conns</filename></entry>

                      <entry>a simple test for setting connections
                      lane-wise</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/XML2/connections/cross3l_no_turnarounds</filename></entry>

                      <entry>a simple test to check whether appending
                      turnarounds may be disabled</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether error handling
                works</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>netconvert/errors/false_output</filename></entry>

                      <entry>Tests what happens if the output can not be
                      written</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/errors/no_output</filename></entry>

                      <entry>Tests what happens if no output is given</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/errors/xml_false_edg</filename></entry>

                      <entry>Tests what happens if xml-edges can not be
                      read</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/errors/xml_no_edg</filename></entry>

                      <entry>Tests what happens if no xml-edges are
                      given</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/errors/xml_false_nod</filename></entry>

                      <entry>Tests what happens if xml-nodes can not be
                      read</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/errors/xml_no_nod</filename></entry>

                      <entry>Tests what happens if no xml-nodes are
                      given</entry>
                    </row>

                    <row>
                      <entry><filename>netconvert/errors/unknown_option</filename></entry>

                      <entry>Tests what happens if an unknown option is
                      passed</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry></entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <table>
          <title>Tests for SUMO</title>

          <tgroup cols="1">
            <thead>
              <row>
                <entry>Test Set Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry><emphasis>Tests whether showing meta-information
                works</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>sumo/meta/help</filename></entry>

                      <entry>checks whether printing help works</entry>
                    </row>

                    <row>
                      <entry><filename>sumo/meta/version</filename></entry>

                      <entry>checks whether printing version works</entry>
                    </row>

                    <row>
                      <entry><filename>sumo/trips/noop</filename></entry>

                      <entry>checks what happens when no argument is
                      given</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry><emphasis></emphasis></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether routes are
                read</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>sumo/routes/new_style</filename></entry>

                      <entry>checks whether newstyle routes are read
                      properly</entry>
                    </row>

                    <row>
                      <entry><filename>sumo/routes/old_style</filename></entry>

                      <entry>checks whether oldstyle routes are read
                      properly</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether outputs are generated
                properly</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>sumo/routes/output/cross3ltl_emissions</filename></entry>

                      <entry>checks whether emissions are written</entry>
                    </row>

                    <row>
                      <entry><filename>sumo/routes/output/cross3ltl_meandata</filename></entry>

                      <entry>checks whether mean data are written
                      (edge-based)</entry>
                    </row>

                    <row>
                      <entry><filename>sumo/routes/output/cross3ltl_rawdump</filename></entry>

                      <entry>checks whether raw dump is written</entry>
                    </row>

                    <row>
                      <entry><filename>sumo/routes/output/cross3ltl_rawdump_withempty</filename></entry>

                      <entry>checks whether raw dump is written (with
                      <option>--dump-empty-edges</option>)</entry>
                    </row>

                    <row>
                      <entry><filename>sumo/routes/output/cross3ltl_tripinfo</filename></entry>

                      <entry>checks whether tripinfos are written</entry>
                    </row>

                    <row>
                      <entry><filename>sumo/routes/output/cross3ltl_vehroutes</filename></entry>

                      <entry>checks whether vehroutes are written (buggy); see
                      also <filename>sumo/extended/rerouter</filename></entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether additional structures
                work</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>netconvert/extended/rerouter</filename></entry>

                      <entry>Tests whether rerouter work; checks also whether
                      vehroutes work properly when vehicles are
                      rerouted</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry></entry>
              </row>

              <row>
                <entry><emphasis>Checks whether error handling
                works</emphasis></entry>
              </row>

              <row>
                <entrytbl cols="2">
                  <thead>
                    <row>
                      <entry>Path</entry>

                      <entry>Description</entry>
                    </row>
                  </thead>

                  <tbody>
                    <row>
                      <entry><filename>netconvert/errors/unknown_option</filename></entry>

                      <entry>Tests what happens if an unknown option is
                      passed</entry>
                    </row>
                  </tbody>
                </entrytbl>
              </row>

              <row>
                <entry></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </sect2>
    </sect1>
  </chapter>
</book>