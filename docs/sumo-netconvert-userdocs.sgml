<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V4.1//EN"[
<!entity sumo "<emphasis>SUMO</emphasis>">
<!entity sumo-netconvert "<emphasis>sumo-netconvert</emphasis>">
<!ENTITY index SYSTEM "sumo-netconvert-userdocs-0.7.sgml">

<!ENTITY document-name "SUMO Netconvert User Documentation">
<!ENTITY document-version "0.7">
<!ENTITY referred-program-version "0.7">

<!entity % ISOgrk1 PUBLIC "ISO 8879:1986//ENTITIES Greek Letters//EN">
%ISOgrk1;
]>


<book>
  <bookinfo>
	<title>&document-name;</title>
	<authorgroup>
	  <author>
		<firstname>Georg</firstname>
		<surname>Hertkorn</surname>
	  </author>
	  <author>
		<firstname>Daniel</firstname>
		<surname>Krajzewicz</surname>
	  </author>
	  <author>
		<firstname>Christian</firstname>
		<surname>R&ouml;ssel</surname>
	  </author>
	</authorgroup>
	<edition>&document-version;</edition>

   <pubdate role="cvs">$Date$</pubdate>

    <copyright>
      <year>2002</year>
      <holder>German Aerospace Center</holder>
      <holder>Center for Applied Computer Science, University of
      Cologne</holder>
    </copyright>

    <legalnotice>
      <title>Copyright</title>
      <para>Permission is granted to copy,
      distribute and/or modify this document under the terms of the
      Open Publication License, version 2.0.</para>
    </legalnotice>

    <!--
    $Log$
    Revision 1.1  2003/02/07 10:25:28  dkrajzew
    v0.7-documentation added

    Revision 1.10  2002/07/19 09:06:06  dkrajzew
    program options description inserted; false configuration example from sumo replaced by an sumo-netconvert example

    Revision 1.9  2002/07/11 08:20:12  dkrajzew
    The description of the usage under MSVC++ has been improved

    Revision 1.8  2002/07/08 12:08:27  dkrajzew
    false links removed

    Revision 1.7  2002/07/08 11:57:23  dkrajzew
    intra-document references added

    Revision 1.6  2002/07/08 10:44:10  dkrajzew
    Some spelling mistakes removed; Cross-links added

    Revision 1.5  2002/06/20 10:57:39  dkrajzew
    windows-eols removed

    Revision 1.4  2002/04/29 14:58:50  dkrajzew
    some spelling mistakes removed

    Revision 1.3  2002/04/25 15:33:38  croessel
    Syntax errors fixed. Some bookinfo added.

    -->
    <revhistory>
      <revision>
        <revnumber></revnumber>
        <date></date>
      </revision>
    </revhistory>

  </bookinfo>

  <!-- ---------------------------------------------------- -->

  <chapter id="DocumentDescription">
	<title>Document Description</title>
	<sect1 id="DocumentDescription.DocumentDomain">
	  <title>Document Domain</title>
	  <para>This document is a part of the documentation of &sumo-netconvert; - the application used for generating &sumo; street network descriptions.</para>
	</sect1>
	<sect1 id="DocumentDescription.DocumentPurpose">
	  <title>Document Purpose</title>
	  <para>This document describes how to use the &sumo; - net building module, &sumo-netconvert;.</para>
	</sect1>
	<sect1 id="DocumentDescription.DocumentStatus">
	  <title>Document Status</title>
	  <sect2 id="DocumentDescription.DocumentStatus.DocumentVersion">
		<title>Document Version</title>
		<para>This is the version &document-version; of the document.</para>
		<para>It is assigned to the &sumo; - version &referred-program-version;.</para>
	  </sect2>
	  <sect2 id="DocumentDescription.DocumentStatus.ToDo">
		<title>To Do</title>
		<para></para>
	  </sect2>
	</sect1>
  </chapter>

  <!-- ---------------------------------------------------- -->

  <chapter id="Introduction">
	<title>Introduction</title>
	<sect1 id="Introduction.WhatIs">
	  <title>What is &sumo-netconvert;?</title>
	  <para>As &sumo; requires a very complicated network description, this application is used to load and convert less complicated lists of streets and nodes to simulate and build the final network description that consists of a deeper description of streets containing relationships between them like the lane to use when approaching a junction or the different behaviour on junctions depending of the priorities of the streets.</para>
	</sect1>

	<sect1 id="Introduction.Features">
	  <title>Features</title>
	  <para>As the conversion of a road network has to be done only once, no special interest has been set on the speed of the computation. Instead, the different traffic rules are regarded.</para>
	  <para>In version &referred-program-version; &sumo-netconvert; realizes:
        <itemizedlist>
		  <listitem><para></para></listitem>
        </itemizedlist>
      </para>
	</sect1>

	<sect1 id="Introduction.UsedModels">
	  <title>Used Models</title>
	  <para></para>
	</sect1>
  </chapter>

  <!-- ---------------------------------------------------- -->

  <chapter id="Prerequisites">
	<title>Prerequisites</title>
	<sect1 id="Prerequisites.NeededPackages">
	  <title>Needed Packages</title>
	  <para>Beside the &sumo-netconvert; - distribution you will also need the Xerces-XML-parser library available at <ulink url="http://xml.apache.org/xerces-c/index.html"><citetitle>http://xml.apache.org/xerces-c/index.html</citetitle></ulink><!-- Referenz -->. Please remark that you have to obtain the C++-version of the library which must also fit to your system.</para>
	  <para>The build nets may be evaluated using the &sumo;-programme that should be available from the same location as the &sumo-netconvert; - distribution.</para>
	</sect1>

	<sect1 id="Prerequisites.Installation">
	  <title>Installation</title>
	  <sect2 id="Prerequisites.Installation.Distribution">
		<title>Distribution</title>
		<para>You get the sources as a tar ball <filename>(*.tar.gz)</filename> or a zip-archive <filename>(*.zip)</filename> from <ulink url="http://sumo.sourceforge.net/download.html"><citetitle>http://sumo.sourceforge.net/download.html</citetitle></ulink>. We try to provide portable sources. The following operation system/compiler/STL combinations have been tested:
        <segmentedlist>
		  <segtitle>OS</segtitle>
		  <segtitle>Compiler</segtitle>
		  <segtitle>STL</segtitle>
		  <seglistitem>
			<seg>Linux</seg>
			<seg>gcc-2.95.2</seg>
			<seg>built-in</seg>
		  </seglistitem>
		  <seglistitem>
			<seg>SunOS 5.7</seg>
			<seg>gcc-2.95.2</seg>
			<seg>STLport</seg>
                  </seglistitem>
		  <seglistitem>
			<seg>Windows</seg>
			<seg>MSVC++ 6.0 with ServicePack 5</seg>
			<seg>built-in</seg>
		  </seglistitem>
		</segmentedlist>
		</para>
	  </sect2>

	  <sect2 id="Prerequisites.Installation.Building">
		<title>Building &sumo-netconvert; from Sources</title>
		<sect3 id="Prerequisites.Installation.Building.LinuxUnix">
		  <title>Linux/Unix</title>
		  <para>Unpack the tarball
<programlisting>
gunzip sumo-netconvert-&referred-program-version;.tar.gz
tar xvf sumo-netconvert-&referred-program-version;.tar
</programlisting>
Run configure and build the binaries.
<programlisting>
cd sumo-netconvert-&referred-program-version;
./configure --prefix=where-the-binaries-go \
   --with-xerces-includes=path-to-xerces-header-files
   --with-xerces-libraries=path-to-xerces-libraries
make
make install
</programlisting>
<!-- Wo findet man die Standardbeschreibung für die Verwendung -->
<!-- von configure? -->
          </para>
		</sect3>

		<sect3 id="Prerequisites.Installation.Building.Windows">
		  <title>Windows/<productname>MSVC++</productname></title>
		  <para>Open a new console application project and migrate all supplied sources but the files SUMO/utils/TplConvert.cpp, SUMO/utils/TplConvertSec.cpp, SUMO/microsim/MSBitSetLogic.cpp and SUMO/helpers/Counter.cpp. Regard that you have to import source code files from the subfolders SUMO/helpers, SUMO/microsim, SUMO/netload and SUMO/utils, too. Add the xerces.lib to the project. Go to
		    <menuchoice>
			  <guimenu>Project</guimenu>
			  <guimenuitem>Preferences</guimenuitem>
			  <guimenuitem>C/C++</guimenuitem>
			  <guimenuitem>Preprocessor</guimenuitem>
			</menuchoice> from the <productname>MSVC++</productname>
Menu. And add the include-path of your Xerces-library to the list of "Additional Include Paths".
          </para>
		  <para>Switch now to the <guimenuitem>C/C++ Programming Language</guimenuitem> settings panel which may be found under the combo box that displays "<guimenuitem>Preprocessor</guimenuitem>". Enable the RTTI and the Exception Handling.</para>
		  <para>You may also switch the warnings off as most of them do concern the <productname>MSVC++'s</productname> ability to display variables and not the code.</para>
		  <para>Press F7 to compile the program. That's all.</para>
		</sect3>
	  </sect2>

	</sect1>

  </chapter>

  <!-- ---------------------------------------------------- -->

  <chapter id="Usage">
	<title>Usage</title>

	<sect1 id="Usage.Basics">
	  <title>Basics of the Usage</title>
	  <sect2 id="Usage.Basics.CommandLineOptions">
		<title>Command Line Options</title>
		<para>After building your &sumo-netconvert; - runnable, you may start one of the examples. &sumo-netconvert; is a command line application and you have to pass options and settings like the definitions of the input and the output files as command line parameters. These may be supplied to the programme in any order.</para>
	  </sect2>

	  <sect2 id="Usage.Basics.Configuration">
		<title>Configuration</title>
		<para>A further possibility to specify the settings is the generation of a configuration file. All settings you can pass at the command line may be inserted into this file and the programme may so be started using only one parameter. This approach should be more useable when working with a single network for many times. All but the boolean settings of the configuration file may be overridden at the command line after being set by the configuration file.</para>
	  </sect2>
	</sect1>

	<sect1 id="Usage.Quickstart">
	  <title>Quickstart</title>
	  <para>An example of a program start may be:</para>
<programlisting>
	sumo-netconvert -n ./nodes.xml -e ./edges.xml -t ./types.xml -o ./output.xml -Cv
</programlisting>
	  <para>In this case, the nodes from "nodes.xml" and the "edges.xml" would be used as input and the edges properties would be read from "types.xml". The output would be written to "output.xml" and the program would report about all it is doing. No configuration file would be used.</para>
	</sect1>

	<sect1 id="Usage.ParameterInDepth">
	  <title>Parameter In-depth</title>
	  <para></para>
	</sect1>


	<sect1 id="Usage.ExampleSessions">
	  <title>Example Sessions</title>
	  <sect2 id="Usage.ExampleSessions.Example">
		<title>Example1</title>
		<para></para>
	  </sect2>
	</sect1>

  </chapter>

  <!-- ---------------------------------------------------- -->

  <chapter id="FileFormats">
	<title>File Formats</title>
	<sect1 id="FileFormats.Edges">
	  <title>Edges</title>
	  <para>The input format for a single edges is the following:</para>
	  <PROGRAMLISTING>Edge ID="[EDGE_ID]" FromNode="[NODE_ID] ToNode="[NODE_ID]" Type="[TYPE_ID]"</PROGRAMLISTING>
	  <variablelist>
		<varlistentry>
		  <term><varname>ID</varname></term>
		  <listitem><para>The id (name) of the edge.</para></listitem>
		</varlistentry>
		<varlistentry>
		  <term><varname>FromNode</varname></term>
		  <listitem><para>The id (name) of the node the edge is outgoing of.</para></listitem>
		</varlistentry>
		<varlistentry>
		  <term><varname>ToNode</varname></term>
		  <listitem><para>The id (name) of the node the edge is coming in.</para></listitem>
		</varlistentry>
		<varlistentry>
		  <term><varname>Type</varname></term>
		  <listitem><para>The id of the type the edge is of.</para></listitem>
		</varlistentry>
	  </variablelist>
	  <para>The ids of the nodes connected by this edge must be valid ids from the given node-file, so you should supply both information in this case.
If your data does not support ids for nodes and they are only given as their positions, you may also use them without a prior conversion by using the attributes:</para>
	  <variablelist>
		<varlistentry>
		  <term><varname>XFrom</varname></term>
		  <listitem><para>The x-position of the originating node of the edge</para></listitem>
		</varlistentry>
		<varlistentry>
		  <term><varname>YFrom</varname></term>
		  <listitem><para>The y-position of the originating node of the edge</para></listitem>
		</varlistentry>
		<varlistentry>
		  <term><varname>XTo</varname></term>
		  <listitem><para>The x-position of the originating node of the edge</para></listitem>
		</varlistentry>
		<varlistentry>
		  <term><varname>YTo</varname></term>
		  <listitem><para>The y-position of the originating node of the edge</para></listitem>
		</varlistentry>
	  </variablelist>
	  <para>In a case where all edges are described by their positions, you does not need a file containing the nodes.</para>
	  <para>You may also overwrite information extracted from the type of the edge in the edge definition. The following parameter are supported:</para>
	  <variablelist>
		<varlistentry>
		  <term><varname>NoLanes</varname></term>
		  <listitem><para>The number of the lanes the edge is build from</para></listitem>
		</varlistentry>
		<varlistentry>
		  <term><varname>Speed</varname></term>
		  <listitem><para>The maximum speed in m/s</para></listitem>
		</varlistentry>
		<varlistentry>
		  <term><varname>Priority</varname></term>
		  <listitem><para>A priority type as defined in our internal type definition (look into <xref linkend="DefaultStreetTypes"></para></listitem>
		</varlistentry>
	  </variablelist>
	  <para>The whole XML-file has the document type "Edges".</para>
	</sect1>

	<sect1 id="FileFormats.Nodes">
	  <title>Nodes</title>
	  <para>The entry for a single node contains only her name and position information (x and y) using the following attributes (the tag name is "Node", the tag is not opening) :</para>
	  <programlisting>Node ID="[NODE_ID]" X="[NUM] Y="[NUM]"</programlisting>
	  <variablelist>
		<varlistentry>
		  <term><varname>ID</varname></term>
		  <listitem><para>The id (name) of the node.</para></listitem>
		</varlistentry>
		<varlistentry>
		  <term><varname>X</varname></term>
		  <listitem><para>The x-position of the node</para></listitem>
		</varlistentry>
		<varlistentry>
		  <term><varname>Y</varname></term>
		  <listitem><para>The y-position of the node</para></listitem>
		</varlistentry>
	  </variablelist>
	  <para>The whole XML-file has the document type "Nodes".</para>
	</sect1>

	<sect1 id="FileFormats.Types">
	  <title>Types</title>
	  <para>Types are used when the edges do not specify all wished physical properties by themselves but do reference a certain type. This type may contain the needed values for an edges physical properties:</para>
	  <programlisting>Type ID="[Type_ID]" </programlisting>
	  <variablelist>
		<varlistentry>
		  <term><varname>ID</varname></term>
		  <listitem><para>The id (name) of the type.</para></listitem>
		</varlistentry>
		<varlistentry>
		  <term><varname>NoLanes</varname></term>
		  <listitem><para>The number of the lanes the edge is build from</para></listitem>
		</varlistentry>
		<varlistentry>
		  <term><varname>Speed</varname></term>
		  <listitem><para>The maximum speed in m/s</para></listitem>
		</varlistentry>
		<varlistentry>
		  <term><varname>Priority</varname></term>
		  <listitem><para>A priority type as defined in our internal type definition (look into <xref linkend="DefaultStreetTypes"></para></listitem>
		</varlistentry>
	  </variablelist>
	  <para>The whole XML-file has the document type "Types".</para>
	</sect1>

	<sect1 id="FileFormats.OutputFile">
	  <title>Output File</title>
	  <para>The output of &sumo-netconvert; is a XML-file that may be used as the network-description for &sumo;.</para>
	</sect1>

	<sect1 id="FileFormats.ConfigurationFile">
	  <title>Configuration File</title>
	  <para>In your "sumo-netconvert" - folder you should find the file "sumo-netconvert.cfg" with the following content:</para>
<!-- ----- -->
<programlisting>
<sgmltag class="starttag">configuration</sgmltag>
   <sgmltag class="starttag">files</sgmltag>
      <sgmltag class="starttag">xml-edge-file</sgmltag><sgmltag class="endtag">xml-edge-file</sgmltag>
      <sgmltag class="starttag">xml-node-file</sgmltag><sgmltag class="endtag">xml-node-file</sgmltag>
      <sgmltag class="starttag">type-file</sgmltag><sgmltag class="endtag">type-file</sgmltag>

      <sgmltag class="starttag">cell-edge-file</sgmltag><sgmltag class="endtag">cell-edge-file</sgmltag>
      <sgmltag class="starttag">cell-node-file</sgmltag><sgmltag class="endtag">cell-node-file</sgmltag>

      <sgmltag class="starttag">visum</sgmltag><sgmltag class="endtag">visum</sgmltag>

      <sgmltag class="starttag">output-file</sgmltag><sgmltag class="endtag">output-file</sgmltag>
   <sgmltag class="endtag">files</sgmltag>

   <sgmltag class="starttag">defaults</sgmltag>
      <sgmltag class="starttag">type</sgmltag><sgmltag class="endtag">type</sgmltag>
      <sgmltag class="starttag">lanenumber</sgmltag><sgmltag class="endtag">lanenumber</sgmltag>
      <sgmltag class="starttag">speed</sgmltag><sgmltag class="endtag">speed</sgmltag>
      <sgmltag class="starttag">priority</sgmltag><sgmltag class="endtag">priority</sgmltag>
   <sgmltag class="endtag">defaults</sgmltag>

   <sgmltag class="starttag">reports</sgmltag>
      <sgmltag class="starttag">verbose</sgmltag><sgmltag class="endtag">verbose</sgmltag>
      <sgmltag class="starttag">print-options</sgmltag><sgmltag class="endtag">print-options</sgmltag>
   <sgmltag class="endtag">reports</sgmltag>
<sgmltag class="endtag">configuration</sgmltag>
</programlisting>
<!-- ----- -->
      <para>As one may see, the elements of this file are equal to the options that may be given on the command line. By inserting filenames or durations between the opening and the ending tag that corresponds to the option you want to set, you save your settings in the configuration file. You may set bool values (verbose and print-options) by inserting a '1' into the field. Unset values are treated as if they would be not supplied at the command line. We advise you to copy the configuration file before editing it, to save it for further use.</para>
	  <para>An example. :
<!-- ----- -->
<programlisting>
<sgmltag class="starttag">configuration</sgmltag>
   <sgmltag class="starttag">files</sgmltag>
      <sgmltag class="starttag">xml-edge-file</sgmltag>../examples/crossM.edg.xml<sgmltag class="endtag">xml-edge-file</sgmltag>
      <sgmltag class="starttag">xml-node-file</sgmltag>../examples/crossM.nod.xml<sgmltag class="endtag">xml-node-file</sgmltag>
      <sgmltag class="starttag">type-file</sgmltag><sgmltag class="endtag">type-file</sgmltag>

      <sgmltag class="starttag">cell-edge-file</sgmltag><sgmltag class="endtag">cell-edge-file</sgmltag>
      <sgmltag class="starttag">cell-node-file</sgmltag><sgmltag class="endtag">cell-node-file</sgmltag>

      <sgmltag class="starttag">visum</sgmltag><sgmltag class="endtag">visum</sgmltag>

      <sgmltag class="starttag">output-file</sgmltag>../nets/crossM.net.xml<sgmltag class="endtag">output-file</sgmltag>
   <sgmltag class="endtag">files</sgmltag>

   <sgmltag class="starttag">defaults</sgmltag>
      <sgmltag class="starttag">type</sgmltag><sgmltag class="endtag">type</sgmltag>
      <sgmltag class="starttag">lanenumber</sgmltag><sgmltag class="endtag">lanenumber</sgmltag>
      <sgmltag class="starttag">speed</sgmltag><sgmltag class="endtag">speed</sgmltag>
      <sgmltag class="starttag">priority</sgmltag><sgmltag class="endtag">priority</sgmltag>
   <sgmltag class="endtag">defaults</sgmltag>

   <sgmltag class="starttag">reports</sgmltag>
      <sgmltag class="starttag">verbose</sgmltag>1<sgmltag class="endtag">verbose</sgmltag>
      <sgmltag class="starttag">print-options</sgmltag><sgmltag class="endtag">print-options</sgmltag>
   <sgmltag class="endtag">reports</sgmltag>
<sgmltag class="endtag">configuration</sgmltag>
</programlisting>
<!-- ----- -->
With this configuration, saved as netc_crossM.cfg, the simulation will also report what it does. You now may start the conversion of the net using:
<programlisting>
 sumo-netconvert -c netc_crossM.cfg
</programlisting>
Instead of
<programlisting>
 sumo-netconvert -e ../examples/crossM.edg.xml -n ../examples/crossM.nod.xml -o ../nets/crossM.net.xml -Cv
</programlisting>
needed when not using a configuration file.
	</para>
	</sect1>

  </chapter>

  <!-- ---------------------------------------------------- -->

  <bibliography>
	<title>Bibliography</title>

	<biblioentry>
	  <title>SUMO Internet pages</title>
	  <authorgroup>
		<author>
		  <firstname>Georg</firstname>
		  <surname>Hertkorn</surname>
		</author>
		<author>
		  <firstname>Daniel</firstname>
		  <surname>Krajzewicz</surname>
		</author>
	  </authorgroup>
	  <citetitle>SUMO-Internet</citetitle>
	</biblioentry>

	<biblioentry>
	  <title>SUMO v1.0 User Documentation - Module: Sumo</title>
	  <authorgroup>
		<author>
		  <firstname>Georg</firstname>
		  <surname>Hertkorn</surname>
		</author>
		<author>
		  <firstname>Daniel</firstname>
		  <surname>Krajzewicz</surname>
		</author>
	  </authorgroup>
	  <citetitle>SUMO-UserDocs</citetitle>
	</biblioentry>

	<biblioentry>
	  <title>SUMO v1.0 Developer Documentation - Module: Sumo</title>
	  <authorgroup>
		<author>
		  <firstname>Georg</firstname>
		  <surname>Hertkorn</surname>
		</author>
		<author>
		  <firstname>Daniel</firstname>
		  <surname>Krajzewicz</surname>
		</author>
	  </authorgroup>
	  <citetitle>SUMO-DevDocs</citetitle>
	</biblioentry>

	<biblioentry>
	  <title>SUMO v1.0 Class Description - Module: Sumo</title>
	  <author>
		<contrib>generated by Doxygen</contrib>
	  </author>
	</biblioentry>

	<biblioentry>
	  <title>SUMO v1.0 User Documentation - Module: Netconvert</title>
		<authorgroup>
		<author>
		  <firstname>Georg</firstname>
		  <surname>Hertkorn</surname>
		</author>
		<author>
		  <firstname>Daniel</firstname>
		  <surname>Krajzewicz</surname>
		</author>
		</authorgroup>
	  <citetitle>SUMO-ClassDocs</citetitle>
	</biblioentry>

	<biblioentry>
	  <title>SUMO v1.0 Developer Documentation - Module: Netconvert</title>
		<authorgroup>
		<author>
		  <firstname>Georg</firstname>
		  <surname>Hertkorn</surname>
		</author>
		<author>
		  <firstname>Daniel</firstname>
			<surname>Krajzewicz</surname>
		</author>
	  </authorgroup>
	  <citetitle>NETC-DevDocs</citetitle>
	</biblioentry>

	<biblioentry>
	  <title>SUMO v1.0 Class Descriptions - Module: Netconvert</title>
	  <author>
		  <contrib>generated by Doxygen</contrib>
	  </author>
	  <citetitle>NETC-ClassDocs</citetitle>
	</biblioentry>

	<biblioentry>
	  <title>Microscopic Modeling of Traffic Flow: Investigation of Collision Free Vehicle Dynamics</title>
	  <author>
		<firstname>Stefan</firstname>
		<surname>Krau&szlig;</surname>
	  </author>
	  <publisher>
		<publishername>DLR (Hauptabteilung Mobilität und Systemtechnik)</publishername>
	  </publisher>
		<date>1998</date>
	  <issn>ISSN 1434-8454</issn>
	  <citetitle>Krau&szlig;98</citetitle>
	</biblioentry>

	<biblioentry>
	  <title>Mikroskopische Minimalmodelle des Straßenverkehrs</title>
	  <author>
		<firstname>Stefan</firstname>
		  <surname>Janz</surname>
	  </author>
	  <bibliomisc>Diplom-thesis</bibliomisc>
	  <date>1998</date>
	  <citetitle>Janz98</citetitle>
	</biblioentry>

	  <biblioentry>
	  <title>Simulation-Based Traffic Assignment - Computing User Equilibria in Large Street Networks</title>
	  <author>
		<firstname>Christian</firstname>
		<surname>Gawron</surname>
	  </author>
		<bibliomisc>Dissertation</bibliomisc>
	  <date>1998</date>
	  <citetitle>Gawron98</citetitle>
	</biblioentry>

	<biblioentry>
	  <productname>Xerces</productname>
		<address><otheraddr><ulink url="http://xml.apache.org">Apache XML-project homepage</ulink></otheraddr></address>
	  <citetitle>Xerces</citetitle>
	</biblioentry>

	<biblioentry>
	  <productname>Doxygen</productname>
	  <address><otheraddr><ulink url="http://www.stack.nl/~dimitri/doxygen/">Doxygen homepage</ulink></otheraddr></address>
	  <citetitle>Doxygen</citetitle>
	</biblioentry>

	<biblioentry>
	  <title>Option parser Documentation</title>
	  <author>
		<firstname>Daniel</firstname>
		<surname>Krajzewicz</surname>
	  </author>
	  <citetitle>OptionsDocs</citetitle>
	</biblioentry>

  </bibliography>


  <!-- ---------------------------------------------------- -->

  <appendix id="FAQ">
	<title>FAQ : Frequently Asked Questions</title>
	<para>No one wanted to know anything yet</para>
  </appendix>

  <!-- ---------------------------------------------------- -->

  <appendix id="Comments">
	<title>Comments</title>
	<para></para>
  </appendix>

  <!-- ---------------------------------------------------- -->

  <appendix id="Bugs">
	<title>Bugs</title>
	<para></para>
  </appendix>

  <!-- ---------------------------------------------------- -->

  <appendix id="CommandLineOptions">
	<title>Command Line Options</title>
	<variablelist>
	  <varlistentry>
		<term><varname>-c (--configuration) FILE</varname></term>
		<listitem><para>Loads the program parameter from the configuration.</para></listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>-e (--xml-edge-file) FILE</varname></term>
		<listitem><para>The name of the file that contains the edges stored in the XML-format.</para></listitem>
	  </varlistentry>
	  <varlistentry>
		<term><varname>-n (--xml-node-file) FILE</varname></term>
		<listitem><para>The name of the file that contains the nodes stored in the XML-format.</para></listitem>
	  </varlistentry>
	  <varlistentry>
		<term><varname>--cell-edges (--cell-edges-file) FILE</varname></term>
		<listitem><para>The name of the file that contains the edges stored in the Cell-format.</para></listitem>
	  </varlistentry>
	  <varlistentry>
		<term><varname>--cell-nodes (--cell-node-file) FILE</varname></term>
		<listitem><para>The name of the file that contains the nodes stored in the Cell-format.</para></listitem>
	  </varlistentry>
	  <varlistentry>
		<term><varname>--visum FILE</varname></term>
		<listitem><para>The name of the file that contains the network description stored in the Visum v7.5 export format.</para></listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>-o (--output-file) FILE</varname></term>
		<listitem><para>Specifies the file the built net will be saved into.</para></listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>-T (--type) Name</varname></term>
		<listitem><para>Specifies the name of the default edge type.</para></listitem>
	  </varlistentry>
	  <varlistentry>
		<term><varname>-L (--lanenumber) INT</varname></term>
		<listitem><para>Specifies the number of lanes the default edge type consists of.</para></listitem>
	  </varlistentry>
	  <varlistentry>
		<term><varname>-S (--speed) FLOAT</varname></term>
		<listitem><para>Specifies the maximum velocity on the default edge type in m/s.</para></listitem>
	  </varlistentry>
	  <varlistentry>
		<term><varname>-P (--priority) INT</varname></term>
		<listitem><para>Specifies the priority of the default edge type.</para></listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>-C (--no-config)</varname></term>
		<listitem><para>No configuration file will be loaded, all parameter must be supplied at the command line.</para></listitem>
	  </varlistentry>
	  <varlistentry>
		<term><varname>-v (--verbose)</varname></term>
		<listitem><para>The simulation will print the current action on the screen.</para></listitem>
	  </varlistentry>
	  <varlistentry>
		<term><varname>-p (--print-options)</varname></term>
		<listitem><para>The set options are printed before the processing starts.</para></listitem>
	  </varlistentry>
	  <varlistentry>
		<term><varname>--help</varname></term>
		<listitem><para>The list of possible parameter together with their meanings is printed</para></listitem>
	  </varlistentry>

	</variablelist>
  </appendix>

  <!-- ---------------------------------------------------- -->

  <appendix id="ErrorMessages">
	<title>Error Messages</title>
	<para>Here, only errors that should occur to normal users are reported. Some more possible errors but should not be visible for a normal user. If you are a developer and an error occurs that is not in the list below, see into the developer documentation.</para>

	<variablelist>

	  <varlistentry>
		<term><varname>No option with the name '[NAME]' exists.</varname></term>
		<listitem>
		  <para>You are trying to set an option on the command line that is not known to sumo.</para>
		  <para>You may have dispelled an option. View Appendix A for a list of known options and their correct spelling.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>The option '[NAME]' is not a boolean attribute and so needs a value.</varname></term>
		<listitem>
		  <para>A non-boolean option has no parameter supplied. An example: you have typed "sumo -n", but the option "-n" needs a value like "-n ./nodes.xml".</para>
		  <para>Always supply a parameter for parametrized options.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>A value for the option '[NAME]' was already set. Possible synonymes: [SYNONYMES]</varname></term>
		<listitem>
		  <para>You are setting an option twice. An example: you have typed "sumo -n [FILE1] --net [FILE2]". This is not possible. A list of possible synonymes is supported.</para>
		  <para>Set a value only once. When you are sure you have specified the value only once on the command line, your configuration file may contain two definitions for the value. A value may be defined as well in the configuration fine and on he command line but never twice in each of them.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>Error: The current parameter '[NAME1]' and the parameter '[NAME2]' do both need a value.</varname></term>
		<listitem>
		  <para>You are trying to use a single value for two parameters. An example: "sumo -nj [FILE1]" or "sumo -nj [FILE1] [FILE2]" is not allowed as the parameter may not be assigned to either the network or the junctions. Only boolean options may be coupled with other options.</para>
		  <para>Split the options when using parametrized options.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>The configurations file '[NAME]' could not be found.</varname></term>
		<listitem>
		  <para>The name for the configuration file is not valid.</para>
		  <para>Even if you did not specified a configuration file, it is loaded as default. Use the option "-C" when you don't wish to use any configuration file.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>Error: The named junctions folder '[NAME]' does not exist.</varname></term>
		<listitem>
		  <para>You have specified a folder for your junction logics that does not exist.</para>
		  <para>You have to use a valid folder for your junctions.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>Error: No simulation file (-n) specified.</varname></term>
		<listitem>
		  <para>You forgot to specify a file containing the road network to use. Attention! The file is not exmined to be valid, this error only occurs when the file is not given by the user. When it is not existing or invalid, other errors are produced.</para>
		  <para>You have to specify a network file using "-n [FILE]" where [FILE] is the name of the network file.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>Error: The begin of the simulation (-b) is not specified.</varname></term>
		<listitem>
		  <para>You forgot to specify the begin of the simulation.</para>
		  <para>Use "-b [TIME]" to specify the simulation-time the simulation shall begin at where [TIME] is a numerical value.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>Error: The end of the simulation (-e) is not specified.</varname></term>
		<listitem>
		  <para>You forgot to specify the end of the simulation.</para>
		  <para>Use "-e [TIME]" to specify the simulation-time the simulation shall end at where [TIME] is a numerical value.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>Error: The output file '[NAME]' can not be build.</varname></term>
		<listitem>
		  <para>The output file can not be build. This may be due to trying to save the file into a folder that does not exist.</para>
		  <para>Use a valid name a file may be created under for your output. Check whether the folder you want to generate the file in exists.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>Error during XML-initialization: ...</varname></term>
		<listitem>
		  <para>An error while the initialisation of the XML-importer occurd.</para>
		  <para>In fact, this is an error produced by XERCES. The only explanation we have is that you are using an inappropriate version of XERCES. Remember to use a C++ - XERCES version over 1.5 and fits to your system (Windows, Linux, Solaris etc.)</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>An XML-error occurd: ...</varname></term>
		<listitem>
		  <para>Your document is corrupt in a way that our XML-importer XERCES is not able to parse it. This may happen when you forgot to open a tag before closing it or when using non-ascii characters. </para>
		  <para>This error always comes with a deeper explanation, so you may find the error quite easy. If you do not see any error, you have to look into a XML-description or try to load the document into A XML-development tool.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>"Empty route ([NAME])" or "The list belonging to the '[TYPE]' with the id '[NAME]' must not but is empty</varname>"</term>
		<listitem>
		  <para>You have specified an empty route. This is not valid.</para>
		  <para>Remove the route or insert at least one edge into it.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>The description of the object '[TYPE]' with the id '[NAME]' is not complete.</varname></term>
		<listitem>
		  <para>t least one of the needed values for an object is not given. The type of the object is given in [TYPE], it's name in [NAME]. In the case of an vehicle, this could be the type, the route or the depart time. The missing of the id is reported by another error message.</para>
		  <para>Check your file for missing values.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>The id of the object [TYPE] is missing in the description.</varname></term>
		<listitem>
		  <para>An object from your defintion which type is given in [TYPE] does not have an id (name).</para>
		  <para>Insert ids for all used objects.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>The object [TYPE] with the id [NAME] is not known</varname></term>
		<listitem>
		  <para>You have references an object of the type [TYPE] with the name [NAME] that you did not define in the file. Such an error may occur when you for instance wish to use a vehicle of the type "VW Beetle" but have not defined a vehicle type named "VW Beetle".</para>
		  <para>Insert a definition for TYPE with the id NAME or use a given id in your file.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>Another [TYPE] with the id [NAME] exists</varname></term>
		<listitem>
		  <para>You are using an id twice for two objects of the same type. </para>
		  <para>All objects of a type have to have unique ids.</para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><varname>The list belonging to the '[TYPE]' with the id '[NAME]' must not but is empty</varname></term>
		<listitem>
		  <para>The information you have specified needs values which you do not have supplied.</para>
		  <para>Supply all needed information.</para>
		</listitem>
	  </varlistentry>

	</variablelist>

  </appendix>

  <!-- ---------------------------------------------------- -->

  <appendix id="DefaultStreetTypes">
	<title>Default Street Types</title>
	<para>To be included</para>
  </appendix>

  <!-- ---------------------------------------------------- -->

</book>

