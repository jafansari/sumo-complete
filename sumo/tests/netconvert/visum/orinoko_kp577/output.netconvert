Found: $VSYS: at 15982
Found: $KNOTEN: at 27371
Found: $BEZIRK: at 34191
Found: $STRECKENTYP: at 38137
Found: $STRECKE: at 76856
Found: $STRECKENPOLY: at 134865
Found: $ABBIEGER: at 137893
Found: $SIGNALANLAGE: at 311737
Found: $SIGNALANLAGEZUKNOTEN: at 311874
Found: $SIGNALGRUPPE: at 311958
Found: $SIGNALGRUPPEZUABBIEGER: at 312169
Found: $PHASE: at 312574
Found: $FAHRSTREIFEN: at 313663
Found: $FAHRSTREIFENABBIEGER: at 314158
Parsing VSYS... done.
Parsing STRECKENTYP... done.
Parsing KNOTEN... done.
Parsing BEZIRK... done.
Parsing STRECKE... done.
Parsing ABBIEGER... done.
Parsing STRECKENPOLY... done.
Parsing FAHRSTREIFEN... done.
Parsing SIGNALANLAGE... done.
Parsing SIGNALANLAGEZUKNOTEN... done.
Parsing SIGNALGRUPPE... done.
Parsing SIGNALGRUPPEZUABBIEGER... done.
Parsing PHASE... done.
Parsing FAHRSTREIFENABBIEGER... done.
   100 types loaded.
   100 edges loaded.
   49 nodes loaded.
Computing step 1: Removing dummy edges
Computing step 2: Joining double connections
Computing step 3: Normalising node positions
Computing step 4: Guessing and setting TLs
Computing step 5: Computing turning directions
Computing step 6: Sorting nodes' edges
Computing step 7: Computing Approached Edges
Computing step 8: Computing Approaching Lanes
Computing step 9: Dividing of Lanes on Approached Lanes
Computing step 10: Appending Turnarounds
Computing step 11: Rechecking of lane endings
Computing step 12: Computing node shapes
Computing step 13: Computing edge shapes
Computing step 14: Computing tls logics
Computing step 15: Computing node logics
Computing step 16: Computing traffic light logics
1 traffic light(s) computed.
Unregulated Junctions       : 0
Priority Junctions          : 49
Right Before Left Junctions : 0
Success.
