<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.0/docbookx.dtd">
<refentry>
  <refmeta>
    <refentrytitle><application>netgen</application></refentrytitle>

    <manvolnum>1</manvolnum>

    <refmiscinfo>netgen 0.9.3</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname><application>netgen</application></refname>

    <refpurpose>Road network generator for the microscopic road traffic
    simulation SUMO.</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>netgen</command>

      <group>
        <option><replaceable class="option">options</replaceable></option>
      </group>
    </cmdsynopsis>

    <cmdsynopsis>
      <command>netgen</command>

      <arg><option>-c <replaceable
      class="parameter">configuration</replaceable></option></arg>
    </cmdsynopsis>

    <cmdsynopsis>
      <command>netgen</command>

      <arg><option>--help</option></arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>DESCRIPTION</title>

    <para><application>netgen</application> is a tool for automatic generation
    of road networks. It is capable to build random networks, grid networks
    and spider net - like networks. Most of each network type's parameter may
    be changed what allows a large variety of networks and their usage for
    statistical evaluation of other models.</para>

    <para>The major input is the definition which network type shall be build.
    All other (beside the output file name) parameter have a default value.
    You have either to pass <option>--grid-net</option> (or
    <option>-g</option> for short), <option>--spider-net</option>
    (<option>-s</option>), or <option>--random-net</option>
    (<option>-r</option>).</para>

    <para>Beside the normal output which is the road network converted into
    the SUMO-format, <application>netgen</application> may generate a list of
    nodes and edges and/or a file that contains the information which edges
    were joined in order to save simulation time.</para>
  </refsect1>

  <refsect1>
    <title>OPTIONS</title>

    <para>In the following, all possible options are presented.</para>

    <para>Please remark, that the configuration-option may be used to supply a
    file that contains all other parameter's definition. Please take a look
    into the SUMO user documentation for further information about the usage
    of configuration files.</para>

    <refsect2>
      <title>Input Options:</title>

      <variablelist>
        <varlistentry>
          <term>( --configuration-file | --configuration | -c ) <replaceable
          class="parameter">&lt;CONFIGURATION_FILE&gt;</replaceable></term>

          <listitem>
            <para>Specifies whether and which a configuration file shall be
            loaded. <remark>Optional, type:filename, default:
            none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --grid-net | -g )</term>

          <listitem>
            <para>Forces NETGEN to build a grid-like network.
            <remark>Optional, type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --spider-net | -s )</term>

          <listitem>
            <para>Forces NETGEN to build a spider-net-like network.
            <remark>Optional, type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --random-net | -r )</term>

          <listitem>
            <para>Forces NETGEN to build a random network. <remark>Optional,
            type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Output Options:</title>

      <variablelist>
        <varlistentry>
          <term>( --output-file | --output | -o ) <replaceable
          class="parameter">&lt;NET_OUTPUT_FILE&gt;</replaceable></term>

          <listitem>
            <para>Defines the file to write the computed network into. This
            file will contain the generated network if the conversion could be
            accomplished. <remark>Optional (pregiven), type:filename, default:
            "net.net.xml"</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --map-output | -M ) <replaceable
          class="parameter">&lt;MAP_OUTPUT_FILE&gt;</replaceable></term>

          <listitem>
            <para>Writes the file <filename>&lt;MAP_OUTPUT_FILE&gt;</filename>
            which holds the list of edges that were joined to a single edge
            for each edge. <remark>Optional, type:filename, default:
            none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--plain-output <replaceable
          class="parameter">&lt;PLAIN_OUTPUT_PREFIX&gt;</replaceable></term>

          <listitem>
            <para>Writes the files
            "<filename><replaceable>&lt;PLAIN_OUTPUT_PREFIX&gt;</replaceable>.nod.xml</filename>"
            and
            "<filename><replaceable>&lt;PLAIN_OUTPUT_PREFIX&gt;</replaceable>.edg.xml</filename>"
            that contain the descriptions about the nodes and the edges a
            network is made of. These files may be reread into the netgener
            using the XML-import capabilities. <remark>Optional,
            type:filename-prefix, default: none</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Grid Network Building:</title>

      <variablelist>
        <varlistentry>
          <term>( --grid-x-number | --x-no ) <replaceable
          class="parameter">&lt;EDGE_NUMBER&gt;</replaceable></term>

          <listitem>
            <para>Describes how many junctions in the x-directions shall be
            build. <remark>Optional (pre-given), type:int, default:
            5</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --grid-y-number | --y-no ) <replaceable
          class="parameter">&lt;EDGE_NUMBER&gt;</replaceable></term>

          <listitem>
            <para>Describes how many junctions in the y-directions shall be
            build. <remark>Optional (pre-given), type:int, default:
            5</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --grid-number | --number ) <replaceable
          class="parameter">&lt;EDGE_NUMBER&gt;</replaceable></term>

          <listitem>
            <para>Describes how many junctions in both the x- and the
            y-direction shall be build. <remark>Optional (pre-given),
            type:int, default: 5</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --grid-x-length | --x-length ) <replaceable
          class="parameter">&lt;EDGE_LENGTH_IN_METERS&gt;</replaceable></term>

          <listitem>
            <para>Describes how long each horizontal street shall be in
            meters.</para>

            <remark>Optional (pre-given), type:float, default: 100</remark>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --grid-y-length | --y-length ) <replaceable
          class="parameter">&lt;EDGE_LENGTH_IN_METERS&gt;</replaceable></term>

          <listitem>
            <para>Describes how long each vertical street shall be in meters.
            <remark>Optional (pre-given), type:float, default:
            100</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --grid-length | --length ) <replaceable
          class="parameter">&lt;EDGE_LENGTH_IN_METERS&gt;</replaceable></term>

          <listitem>
            <para>Describes how long both horizontal and vertical streets
            shall be (in meters). <remark>Optional (pre-given), type:float,
            default: 100</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Spider Network Building:</title>

      <variablelist>
        <varlistentry>
          <term>( --spider-arm-number | --arms ) <replaceable
          class="parameter">&lt;EDGE_NUMBER&gt;</replaceable></term>

          <listitem>
            <para>Specifies how many arms (axes) the net shall have.</para>

            <remark>Optional (pre-given), type:int, default: 13</remark>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --spider-circle-number | --circles ) <replaceable
          class="parameter">&lt;EDGE_NUMBER&gt;</replaceable></term>

          <listitem>
            <para>Specifies how many circles shall be build. <remark>Optional
            (pre-given), type:int, default: 20</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --spider-space-rad | --radius ) <replaceable
          class="parameter">&lt;EDGE_LENGTH_IN_METERS&gt;</replaceable></term>

          <listitem>
            <para>Specifies how far the circles shall be from each other in
            meters. <remark>Optional (pre-given), type:float, default:
            100</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Random Network Building:</title>

      <variablelist>
        <varlistentry>
          <term>( --rand-iterations | --iterations ) <replaceable
          class="parameter">&lt;ITERATION_NUMBER&gt;</replaceable></term>

          <listitem>
            <para>Describes how many times an edge shall be added to the net.
            <remark>Optional (pre-given), type:int, default:
            2000</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --rand-max-distance | --max-dist ) <replaceable
          class="parameter">&lt;FLOAT&gt;</replaceable></term>

          <listitem>
            <para><remark>Optional (pre-given), type:float, default:
            25</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --rand-min-distance | --min-dist ) <replaceable
          class="parameter">&lt;FLOAT&gt;</replaceable></term>

          <listitem>
            <para><remark>Optional (pre-given), type:float, default:
            100</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --rand-min-angle | --min-angle ) &lt;<replaceable
          class="parameter">floFLOATat&gt;</replaceable></term>

          <listitem>
            <para><remark>Optional (pre-given), type:float, default:
            45.0/180.0*PI</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --rand-num-tries | --num-tries ) <replaceable
          class="parameter">&lt;INT&gt;</replaceable></term>

          <listitem>
            <para><remark>Optional (pre-given), type:int, default:
            50</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --rand-connectivity | --connectivity ) <replaceable
          class="parameter">&lt;FLOAT&gt;</replaceable></term>

          <listitem>
            <para><remark>Optional (pre-given), type:float, default:
            0.95</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --rand-neighbor-dist1 | --dist1 ) <replaceable
          class="parameter">&lt;FLOAT&gt;</replaceable></term>

          <listitem>
            <para><remark>Optional (pre-given), type:float, default:
            0</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --rand-neighbor-dist3 | --dist3 ) <replaceable
          class="parameter">&lt;FLOAT&gt;</replaceable></term>

          <listitem>
            <para><remark>Optional (pre-given), type:float, default:
            10</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --rand-neighbor-dist4 | --dist4 ) <replaceable
          class="parameter">&lt;FLOAT&gt;</replaceable></term>

          <listitem>
            <para><remark>Optional (pre-given), type:float, default:
            10</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --rand-neighbor-dist5 | --dist5 ) <replaceable
          class="parameter">&lt;FLOAT&gt;</replaceable></term>

          <listitem>
            <para><remark>Optional (pre-given), type:float, default:
            2</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --rand-neighbor-dist6 | --dist6 ) <replaceable
          class="parameter">&lt;FLOAT&gt;</replaceable></term>

          <listitem>
            <para><remark>Optional (pre-given), type:float, default:
            1</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Building Defaults:</title>

      <variablelist>
        <varlistentry>
          <term>( --type | -T ) &lt;<replaceable
          class="parameter">TYPE_NAME&gt;</replaceable></term>

          <listitem>
            <para>The name of the default type of edges. <remark>Optional
            (pre-given), type:string, default: "Unknown"</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --lanenumber | -L ) <replaceable
          class="parameter">&lt;LANE_NUMBER&gt;</replaceable></term>

          <listitem>
            <para>The number of lanes an edge has to use as default.
            <remark>Optional (pre-given), type:int, default: 1</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --speed | -S ) <replaceable
          class="parameter">&lt;MAX_SPEED&gt;</replaceable></term>

          <listitem>
            <para>The maximum speed allowed on an edge in m/s to use as
            default. <remark>Optional (pre-given), type:float, default:
            13.9</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --priority | -P ) <replaceable
          class="parameter">&lt;PRIORITY&gt;</replaceable></term>

          <listitem>
            <para>The default priority of an edge. <remark>Optional
            (pre-given), type:int, default: 1</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Processing Options:</title>

      <variablelist>
        <varlistentry>
          <term>( --default-junction-type | --junctions | -j ) <replaceable
          class="parameter">[ priority | traffic_light | actuated | agentbased
          ]</replaceable></term>

          <listitem>
            <para>Defines what type of junctions shall be build. Remark that
            the junction in the center of a spider-network is always a
            priority junction. <remark>Optional (pre-given), type:string-enum,
            default: "prority"</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--flip-y</term>

          <listitem>
            <para>Flips the y-position of nodes (and edges) along the
            y=zero-line. <remark>Optional, type:bool, default:
            false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --min-decel | -D ) <replaceable
          class="parameter">&lt;FLOAT&gt;</replaceable></term>

          <listitem>
            <para>The minimum deceleration value for vehicles.
            <remark>Optional (pre-given), type:float, default:
            3</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--speed-in-kmh</term>

          <listitem>
            <para>Parses speed information stored in XML-edge definition files
            as being given in km/h (not m/s as usual). <remark>Optional,
            type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--use-laneno-as-priority</term>

          <listitem>
            <para>Interprets the number of lanes as an edges priority.
            <remark>Optional, type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--all-logics</term>

          <listitem>
            <para>Computes and saves all possible cliques and phases for a
            traffic light instead of the fastest one only. <remark>Optional,
            type:bool, default: false</remark></para>

            <caution>
              <para>This process may be very time consuming.</para>
            </caution>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--keep-small-tyellow</term>

          <listitem>
            <para>If a given yellow-time is smaller than the computed, it is
            normally replaced by the computed one and a warning is printed.
            Setting this option, you force netgen to keep the given time
            yellow light shall be shown (for a certain signal).
            <remark>Optional, type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--guess-tls</term>

          <listitem>
            <para>Forces netgen/NETGEN to guess which junctions posess traffic
            light logics. This should of course only be used for fast
            estimations and only if no tls-definitions are supplied. The
            following parameter steer the guessing more precisely.
            <remark>Optional, type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--tls-guess.min-incoming-speed <replaceable
          class="parameter">&lt;speed</replaceable>&gt;,
          --tls-guess.max-incoming-speed <replaceable
          class="parameter">&lt;SPEED&gt;</replaceable></term>

          <listitem>
            <para>Sets the minimum and the maximum of the velocity a
            junction's incoming edges may have if the junction shall be
            tls-controlled in m/s. <remark>Optional (pre-given), type:float,
            defaults: --tls-guess.min-incoming-speed: 40/3.6,
            --tls-guess.min-incoming-speed: 69/3.6</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--tls-guess.min-outgoing-speed <replaceable
          class="parameter">&lt;speed&gt;</replaceable>,
          --tls-guess.max-outgoing-speed <replaceable
          class="parameter">&lt;SPEED&gt;</replaceable></term>

          <listitem>
            <para>Sets the minimum and the maximum of the velocity a
            junction's outgoing edges may have if the junction shall be
            tls-controlled in m/s. <remark>Optional (pre-given), type:float,
            defaults: --tls-guess.min-outgoing-speed: 40/3.6,
            --tls-guess.max-outgoing-speed: 69/3.6</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--tls-guess.no-incoming-min <replaceable
          class="parameter">&lt;lane-number&gt;</replaceable>,
          --tls-guess.no-incoming-max &lt;<replaceable
          class="parameter">LANE_NUMBER&gt;</replaceable></term>

          <listitem>
            <para>Sets the minimum and the maximum number of a junction's
            incoming edges to allow the junction to be controlled by a tls.
            <remark>Optional (pre-given), type:int, defaults:
            --tls-guess.no-incoming-min: 2, --tls-guess.no-incoming-max:
            5</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--tls-guess.no-outgoing-min &lt;<replaceable
          class="parameter">lane-number</replaceable>&gt;,
          --tls-guess.no-outgoing-max <replaceable
          class="parameter">&lt;LANE_NUMBER&gt;</replaceable></term>

          <listitem>
            <para>Sets the minimum and the maximum number of a junction's
            outgoing edges to allow the junction to be controlled by a tls.
            <remark>Optional (pre-given), type:int, defaults:
            --tls-guess.no-outgoing-min: 1, --tls-guess.no-outgoing-max:
            5</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--explicite-tls &lt;<replaceable
          class="parameter">JUNCTION_ID[;JUNCTION_ID]*&gt;</replaceable></term>

          <listitem>
            <para>Informs the network builder that the given junctions shall
            be treated as being controlled by traffic lights, even if they do
            not match the tls-guess rules. <remark>Optional, type:list of
            strings, default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--explicite-no-tls &lt;<replaceable
          class="parameter">JUNCTION_ID[;JUNCTION_ID]*&gt;</replaceable></term>

          <listitem>
            <para>Informs the network builder that the given junctions shall
            be treated as NOT being controlled by traffic lights, even if they
            match the tls-guess rules. <remark>Optional, type:list of strings,
            default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--edges-min-speed <replaceable
          class="parameter">&lt;MIN_SPEED&gt;</replaceable></term>

          <listitem>
            <para>Informs the network importer that edges with a lower speed
            than the one defined by this options shall not be included into
            the network. <remark>Optional, type:float, default:
            none</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Report Options:</title>

      <variablelist>
        <varlistentry>
          <term>( --verbose | -v )</term>

          <listitem>
            <para>Prints some information about the process during execution.
            <remark>Optional, type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --suppress-warnings | -W )</term>

          <listitem>
            <para>No warnings will be prompted if this option is set.
            <remark>Optional, type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --print-options | -p )</term>

          <listitem>
            <para>Prints the current option settings before the execution
            starts. <remark>Optional, type:bool, default:
            false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --log-file | -L )<replaceable class="parameter">
          &lt;LOG_FILE_NAME&gt;</replaceable></term>

          <listitem>
            <para>All outputs (messages, warnings, and errors) will be written
            to <replaceable>&lt;LOG_FILE_NAME&gt;</replaceable>.
            <remark>Optional, type:filename, default: none</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Random Number Options:</title>

      <variablelist>
        <varlistentry>
          <term>--abs-rand</term>

          <listitem>
            <para>Initialises the random number generator with the current
            time (in ms) in the hope to make him generate really random
            numbers of an unknown order. <remark>Optional, type:bool, default:
            false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--srand <replaceable
          class="parameter">&lt;SEED&gt;</replaceable></term>

          <listitem>
            <para>Initialises the random number generator with
            <replaceable>&lt;SEED&gt;</replaceable>. <remark>Optional,
            type:int, default: none</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>
  </refsect1>

  <refsect1>
    <title>USAGE</title>

    <para>The following topics should be described more precisely within the
    SUMO user documentation that may be found at
    http://sumo.sourceforge.net</para>

    <para><application>netgen</application> requires at least the information
    which network type shall be build and the name of the file to generate.
    All further parameter depend on the type of the network to be
    build.</para>

    <refsect2>
      <title>Examples</title>

      <para><command>netgen</command> -c
      <filename>myConfig.netc.cfg</filename></para>

      <para>Does the things described by the configuration
      "<filename>myConfig.netc.cfg</filename>"</para>

      <para><command>netgen</command> -g -o
      <filename>myNet.net.xml</filename></para>

      <para>Builds a simple grid network using default parameter.</para>
    </refsect2>
  </refsect1>

  <refsect1>
    <title>CAVEATS</title>

    <para>The program is still under development.</para>
  </refsect1>

  <refsect1>
    <title>BUGS</title>

    <para>The program is still under development.</para>

    <para>There seem to be some major bugs within the random net computation.
    As the person responsible for this is no longer employed at our institute
    and the random networks also do not show very good results, it is possible
    that these bugs will not be fixed in the future.</para>
  </refsect1>

  <refsect1>
    <title>SEE ALSO</title>

    <para>netconvert(1), sumo(1), jtrrouter(1), duarouter(1),
    od2trips(1)</para>
  </refsect1>

  <refsect1>
    <title>AUTHOR</title>

    <para><author>
        <firstname>Daniel</firstname>

        <surname>Krajzewicz</surname>
      </author></para>
  </refsect1>
</refentry>