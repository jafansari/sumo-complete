<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.0/docbookx.dtd">
<book>
  <bookinfo>
    <title>Open City</title>

    <author>
      <firstname>Daniel</firstname>

      <surname>Krajzewicz</surname>

      <affiliation>
        <address><email>Daniel.Krajzewicz@dlr.de</email></address>
      </affiliation>
    </author>

    <releaseinfo>$Revision$</releaseinfo>
  </bookinfo>

  <toc></toc>

  <chapter id="dev_chp01">
    <title>Introduction</title>

    <para>This subproject of the SUMO road traffic simulation package is meant
    to help in development of simulations of large road networks, mainly
    cities. Only few high quality raod networks are available and so the
    number of possible </para>
  </chapter>

  <chapter id="dev_chp02">
    <title>Implementation</title>

    <sect1>
      <title>Building the Street Network</title>

      <para>The definition of the I880 street network arrived us as a picture.
      You may see it on the left side of the next illustration. As the lower
      part of this picture shows a larger network, we additionally supply a
      colored picture where one can see the interesting part of the network.
      The circle marks the area and the interesting edges are shown in blue.</para>

      <para>!!! bild</para>

      <para>As every edge begins and ends on a junction, we come up to a
      network that consists of three edges and six junctions. Two of the
      junctions are implemented as „NoJunction“ – as they do not have any
      meaning on the traffic flow, the other four, only needed as a framework
      for the streets – were implemented in the same way. The next picture
      shows the network as build with junction positions marked as circles and
      the detector positions being transformed to meters and in reverse order
      as the edges start at 0 and end at their final size. As one can see, the
      data we had are not sufficient to retrieve all needed information. The
      position of the junction between the I880 and the Hesperian Blvd. as
      well as the position of the junction between the I880 and the eastbound
      off-ramp are completely unknown. We propose to model them variable and
      try to recheck the influence of this insufficiency later.</para>

      <para>!!! bild</para>

      <para>When implementing this network into the SUMO-framework, we decided
      for the most straightforward way, at first generating a list of nodes
      and a list of edges by decomposing the network in the way displayed in
      the next pictures. The problem that cars which reach their destination
      are removed from the simulation would cause vehicles coming on the
      „EastBound-off-ramp“ to disappear before they can reach the detectors.
      This is surely not wished and due to this, we appended a further edge,
      named „DummyEdge2“ which ends on a node named „DummyNode2“. Also, the
      same must had been done for the last part of the I880 itself and here,
      the node „DummyNode1“ and the edge „DummyEdge1“ were inserted.</para>

      <para>!!! bild</para>

      <para>!!! bild</para>

      <para>The resulting XML-descriptions (the list of nodes and the list of
      edges) are the files „I880.nod.xml“ and „I880.edg.xml“, in respective,
      and have the following content:</para>

      <para>I880.nod.xml:</para>

      <para><sgmltag>&#60;Nodes&#62;</sgmltag></para>

      <para><sgmltag> &#60;Node ID=&#34;I880_begin&#34; X=&#34;0&#34;
      Y=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;Node ID=&#34;I880_end&#34; X=&#34;3000&#34;
      Y=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;Node ID=&#34;DummyNode1&#34; X=&#34;3100&#34;
      Y=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> </sgmltag></para>

      <para><sgmltag> &#60;Node ID=&#34;HesperianBlvd_begin&#34;
      X=&#34;1800&#34; Y=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;Node ID=&#34;HesperianBlvd_end&#34;
      X=&#34;1871&#34; Y=&#34;71&#34;/&#62;</sgmltag></para>

      <para><sgmltag> </sgmltag></para>

      <para><sgmltag> &#60;Node ID=&#34;EastBound-off-ramp_begin&#34;
      X=&#34;2400&#34; Y=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;Node ID=&#34;EastBound-off-ramp_end&#34;
      X=&#34;2650&#34; Y=&#34;250&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;Node ID=&#34;DummyNode2&#34; X=&#34;2721&#34;
      Y=&#34;321&#34;/&#62;</sgmltag></para>

      <para><sgmltag>&#60;/Nodes&#62;</sgmltag></para>

      <para>I880.edg.xml:</para>

      <para><sgmltag>&#60;Edges&#62;</sgmltag></para>

      <para><sgmltag> &#60;Edge ID=&#34;I880_1&#34;
      FromNode=&#34;I880_begin&#34; ToNode=&#34;HesperianBlvd_begin&#34;
      Speed=&#34;29.05&#34; NoLanes=&#34;5&#34; Priority=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;Edge ID=&#34;I880_2&#34;
      FromNode=&#34;HesperianBlvd_begin&#34;
      ToNode=&#34;EastBound-off-ramp_begin&#34; Speed=&#34;29.05&#34;
      NoLanes=&#34;5&#34; Priority=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;Edge ID=&#34;I880_3&#34;
      FromNode=&#34;EastBound-off-ramp_begin&#34; ToNode=&#34;I880_end&#34;
      Speed=&#34;29.05&#34; NoLanes=&#34;3&#34; Priority=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;Edge ID=&#34;DummyEdge1&#34;
      FromNode=&#34;I880_end&#34; ToNode=&#34;DummyNode1&#34;
      Speed=&#34;29.05&#34; NoLanes=&#34;3&#34; Priority=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> </sgmltag></para>

      <para><sgmltag> &#60;Edge ID=&#34;HesperianBlvd&#34;
      FromNode=&#34;HesperianBlvd_begin&#34;
      ToNode=&#34;HesperianBlvd_end&#34; Speed=&#34;29.05&#34;
      NoLanes=&#34;1&#34; Priority=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> </sgmltag></para>

      <para><sgmltag> &#60;Edge ID=&#34;EastBound-off-ramp&#34;
      FromNode=&#34;EastBound-off-ramp_begin&#34;
      ToNode=&#34;EastBound-off-ramp_end&#34; Speed=&#34;29.05&#34;
      NoLanes=&#34;1&#34; Priority=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;Edge ID=&#34;DummyEdge2&#34;
      FromNode=&#34;EastBound-off-ramp_end&#34; ToNode=&#34;DummyNode2&#34;
      Speed=&#34;29.05&#34; NoLanes=&#34;1&#34; Priority=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag>&#60;/Edges&#62; </sgmltag></para>

      <para>As one can see, we did not use any pre-given types for the roads,
      but described all parameter by assigning them explicitly. The speed was
      chosen as 65mph, saved within the file as 29.05m/s. All priorities are
      the same as no conflicts between incoming streets/edges occur on any
      junction. The number of lanes was chosen in accordance to the
      description we have had. Also, we have chosen the geometry of the not
      described parts very freely. The „HesperianBlvd“ was chosen to be 100m
      long as no detectors are used here and the edge only serves for the
      departure. The „EastBound-off-ramp“ must have at least the length the
      detector is placed on, being 305m, but we encountered problems when
      implementing the network in such a way. The application broked down as
      our induct-loop – implementation needs a position which is at smaller
      than the detectors origin lane’s size and the distance a vehicle may
      drive within a single timestep. So, we had to make the
      „EastBound-off-ramp“ approximately 350m long. Both dummy edges were
      chosen to be 100m long to save simulation time.</para>

      <para>By starting sumo-netconvert with the following command line:</para>

      <screen>sumo-netconvert -n i880.nod.xml -e i880.edg.xml -o i880.net.xml
      –vC</screen>

      <para>We obtained the sumo-network-file „i880.net.xml“. Some words about
      it:</para>

      <itemizedlist>
        <listitem>
          <para>The netconvert module did not build the junctions
          „EastBound-off-ramp_begin“ and „HesperianBlvd_begin“ as „NoJunction“
          but as „PriorityJunction“. This has nothing to say within this case,
          but should be validated for further projects.</para>
        </listitem>

        <listitem>
          <para>As no outgoing lanes were found on the closing junctions, they
          were declared as „DEAD_END“ which is later represented as a
          „NoJunction“ within sumo.</para>
        </listitem>

        <listitem>
          <para>The netconvert module assigned always the rightmost lane of
          the I880 to be usable for leaving the I880 and going on on one of
          the side roads. This is surely correct (although this information is
          also missing, though unneeded), but still, it disables the
          possibility to drive on the rightmost lane to go on. Or – in other
          words – it is not possible to stay on the right lane when
          approaching the exit to „HesperianBlvd“ when one wants to go
          straight. This is a point that should be discussed.</para>
        </listitem>
      </itemizedlist>
    </sect1>

    <sect1>
      <title>Building the Detectors</title>

      <para>We build a detector file „i880.det.xml“ which may be used directly
      as input to the sumo-simulation module. The detectors within it are
      named „i880_dXlY“ where X is the number of the detector on a lane (from
      left to right on the first picture) and Y is the number of the lane
      (from rightmost lane to the leftmost lane or from bottom to top on the
      first picture). The whole detector name is like this:
      &#34;i880_DetectorNumberXOnLaneY&#34;. One may see, that there are no
      detectors with the number 1 - the first detector row is missing. This is
      because fact that the vehicles will be emitted at this points using the
      input data from the real detectors at this position. Only the other
      detectors are used to generate output.</para>

      <para>Also, there is a further detector on the eastbound off-ramp,
      called „eastb_d6“. Every detector runs at 1Hz and is generating a file
      that has the name of the detector and. Some remarks:</para>

      <itemizedlist>
        <listitem>
          <para>The positions have of course been adapted to the real sizes of
          the lanes, and – as the I880 is now splitted into three parts (each
          part between two junctions) – the detectors i880_d5* and i880_d6*
          are not at the positions „2100“ and „2705“ but both on „300“ or
          “305”, repectively – their positions are relative to the edge they
          are on being here „i880_2“ and „i880_3“, respectively, and no longer
          „i880_1“.</para>
        </listitem>

        <listitem>
          <para>The position of the detector „eastb_d6“ is only guessed. We
          assumed it to be 305m from the junction like the detectors
          „i880_d6*“.</para>
        </listitem>
      </itemizedlist>
    </sect1>

    <sect1>
      <title>Building the Sources (Emitters)</title>

      <para>The data for the first detector was supplied in the following
      format:</para>

      <screen>!!!</screen>

      <para>We built a source definition file first, where all five single
      sources were described. The file is very small, too, and so could be
      done by hand. Here it is (“i880.src.xml”):</para>

      <para><sgmltag>&#60;sources&#62;</sgmltag></para>

      <para><sgmltag> &#60;source id=&#34;i880.0.ssrc&#34;
      type=&#34;triggered&#34; file=&#34;i880.0.ssrc.xml&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;source id=&#34;i880.1.ssrc&#34;
      type=&#34;triggered&#34; file=&#34;i880.1.ssrc.xml&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;source id=&#34;i880.2.ssrc&#34;
      type=&#34;triggered&#34; file=&#34;i880.2.ssrc.xml&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;source id=&#34;i880.3.ssrc&#34;
      type=&#34;triggered&#34; file=&#34;i880.3.ssrc.xml&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;source id=&#34;i880.4.ssrc&#34;
      type=&#34;triggered&#34; file=&#34;i880.4.ssrc.xml&#34;/&#62;</sgmltag></para>

      <para><sgmltag>&#60;/sources&#62; </sgmltag></para>

      <para>As one can see, this file refers to five single source files.
      These files had to be build from the detector data file using a script
      as it contains about 660 lines of data. The script we used was written
      in perl and builds the xml-descriptions of emissions a single source has
      to perfrom for all five sources (files “i880.0.ssrc.xml” –
      “i880.4.ssrc.xml”, not included here). The size of the data has
      increased enormly; the original file, containing information about five
      induct loops was about 695kB while the transformed data was about 1,5MB
      for each of the sources. Beside the fact that XML was used, also
      additional information was included like the vehicles’ depart speed and
      their ids.</para>

      <para>Besides building the detector files, one must also construct a
      route file where the used vehicle type and the possible routes are
      stored. This file was done by hand, too, and looks like this:</para>

      <para><sgmltag>&#60;routes&#62;</sgmltag></para>

      <para><sgmltag> &#60;vtype id=&#34;0&#34; maxspeed=&#34;25.5&#34;
      length=&#34;5.0&#34; accel=&#34;0.8&#34; decel=&#34;4.5&#34;
      sigma=&#34;0.5&#34;/&#62;</sgmltag></para>

      <para><sgmltag> </sgmltag></para>

      <para><sgmltag> &#60;route id=&#34;HesperianBlvd&#34;&#62;I880_1
      HesperianBlvd&#60;/route&#62;</sgmltag></para>

      <para><sgmltag> &#60;route id=&#34;EastBound-off-ramp&#34;&#62;I880_1
      I880_2 EastBound-off-ramp DummyEdge2&#60;/route&#62;</sgmltag></para>

      <para><sgmltag> &#60;route id=&#34;i880&#34;&#62;I880_1 I880_2 I880_3
      DummyEdge1&#60;/route&#62;</sgmltag></para>

      <para><sgmltag>&#60;/routes&#62;</sgmltag></para>
    </sect1>
  </chapter>

  <chapter id="i880_chp03">
    <title>Simulation</title>

    <sect1>
      <title>Try#1</title>

      <para>When I first tried out what we have build, the simulation seemed
      to collapsed after about 500 steps without any reason or error message
      which I encountered earlier, during the debugging phase – it did not
      emit any vehicles anymore. During this time, the size of the raw-output
      has grown to 1GB.</para>

      <para>Although assuming a further bug, I rechecked the emisions and
      everything was alright beside the fact, that vehicles were only emitted
      every second timestep. In fact, the simulation did not allow an earlier
      emission due to the too small distance between the vehicle to emit and
      it’s predecessor. This is surely something one has to talk about.
      Anyhow, this also explains why no further vehicles were emitted: a jam
      may have occured and the vehicles to emit did not have any possibility
      to move onto the edge. I tried to revalidate it and saw that my
      assumption, to chose the distribution of routes to use by the simulated
      vehicles may be independent for all lanes. In fact, most of the lanes
      were blocked by vehicles which tried to change the lane but could not.
      Due to some time problems, I retried the simulation using new single
      source definitions where only vehicles driving on the right lane want to
      use the „HesperianBlvd“ or the „EastBound-off-ramp”.</para>
    </sect1>

    <sect1>
      <title>Try#2</title>

      <para>Within these settings, the parsing script was changed in a way
      that vehicles driving on the rightmost lane are going straight with a
      percentage of 50 and the other 50% are divided on drivers which want to
      use the „HesperianBlvd“ or the „EastBound-off-ramp”.</para>

      <para>As further processing was done after the implementation of traffic
      lights, I have been forced with the fact, the netbuilder has put them
      onto the junctions between the edges what of course is not wished. To
      avoid this, the type of the streets must have been changed. Also, a
      further bug could be seen: the lane connections did not fit to the
      reality. The next picture shows the origin network as computed by
      netconvert and the changed network.</para>

      <para>!!! bild</para>
    </sect1>

    <sect1>
      <title>Try#3</title>

      <para>After adding the possibility to specify connections between lanes
      (*17.10.2002) and types of junctions while importing XML-files, the
      outcome of the netconversion was as wanted. For this, a file containing
      the connection descriptions had to be generated and the node file must
      have been extended by the definition of junction types to avoid the
      genration of traffic lights.</para>

      <para>Node-File:</para>

      <para><sgmltag>&#60;nodes&#62;</sgmltag></para>

      <para><sgmltag> &#60;node id=&#34;I880_begin&#34; x=&#34;0&#34;
      y=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;node id=&#34;I880_end&#34; x=&#34;3000&#34;
      y=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;node id=&#34;DummyNode1&#34; x=&#34;3100&#34;
      y=&#34;0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;node id=&#34;HesperianBlvd_begin&#34;
      x=&#34;1800&#34; y=&#34;0&#34; type=&#34;priority&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;node id=&#34;HesperianBlvd_end&#34;
      x=&#34;1871&#34; y=&#34;71&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;node id=&#34;EastBound-off-ramp_begin&#34;
      x=&#34;2400&#34; y=&#34;0&#34; type=&#34;priority&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;node id=&#34;EastBound-off-ramp_end&#34;
      x=&#34;2650&#34; y=&#34;250&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;node id=&#34;DummyNode2&#34; x=&#34;2721&#34;
      y=&#34;321&#34;/&#62;</sgmltag></para>

      <para><sgmltag>&#60;/nodes&#62;</sgmltag></para>

      <para>Connection-File:</para>

      <para><sgmltag>&#60;connections&#62;</sgmltag></para>

      <para><sgmltag> &#60;connection type=&#34;edgebound&#34;
      from=&#34;I880_1&#34; to=&#34;I880_2&#34; nolanes=&#34;5&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;connection type=&#34;lanebound&#34;
      from=&#34;I880_1&#34; to=&#34;HesperianBlvd&#34;
      lane=&#34;0:0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;connection type=&#34;lanebound&#34;
      from=&#34;I880_2&#34; to=&#34;I880_3&#34; lane=&#34;4:2&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;connection type=&#34;lanebound&#34;
      from=&#34;I880_2&#34; to=&#34;I880_3&#34; lane=&#34;3:1&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;connection type=&#34;lanebound&#34;
      from=&#34;I880_2&#34; to=&#34;I880_3&#34; lane=&#34;2:0&#34;/&#62;</sgmltag></para>

      <para><sgmltag> &#60;connection type=&#34;lanebound&#34;
      from=&#34;I880_2&#34; to=&#34;EastBound-off-ramp&#34;
      lane=&#34;0:0&#34;/&#62;</sgmltag></para>

      <para><sgmltag>&#60;/connections&#62;</sgmltag></para>

      <para>With ongoing changes, the definitions of detectors and sources
      were koined into one file. Although the simulation as well as the
      network worked fine, the current implementation of lane changing has
      risen some unwanted behaviour. Both lanes at before the
      EastBound-off-ramp were congested due to a single vehicle that wanted to
      drive straight but could not change into an appropriate lane. Under some
      circumstances one may see the jam vanish as a vehicle manages to change
      the lane.</para>

      <para>!!! bild</para>
    </sect1>
  </chapter>

  <appendix>
    <title>Steps</title>

    <para>!!!</para>

    <itemizedlist>
      <listitem>
        <para>!!!</para>
      </listitem>
    </itemizedlist>
  </appendix>
</book>