<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.0/docbookx.dtd">
<refentry>
  <refmeta>
    <refentrytitle><application>netconvert</application></refentrytitle>

    <manvolnum>1</manvolnum>

    <refmiscinfo>netconvert 0.9.3</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname><application>sumo-netconvert</application></refname>

    <refpurpose>Road network importer / builder for the microscopic road
    traffic simulation SUMO.</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>sumo-netconvert</command>

      <group>
        <option><replaceable class="option">options</replaceable></option>
      </group>
    </cmdsynopsis>

    <cmdsynopsis>
      <command>sumo-netconvert</command>

      <arg><option>-c <replaceable
      class="parameter">configuration</replaceable></option></arg>
    </cmdsynopsis>

    <cmdsynopsis>
      <command>sumo-netconvert</command>

      <arg><option>--help</option></arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>DESCRIPTION</title>

    <para><application>netconvert</application> is a network converter /
    importer. It allows to convert road network descriptions from traffic
    simulations such as <application>ARTEMIS</application>,
    <application>Vissim</application>, <application>Visum</application>, and
    <application>FastLane</application> and also from digital maps from
    Navteq, stored either in ArcView format or the format used internally
    within the IVF into road descriptions that may be used by other
    applications from the SUMO-package.</para>

    <para>The application assumes the input to be specified using an option
    that is in accordance to the input format that shall be parsed (f.e.
    "<parameter>--arcview <replaceable
    class="parameter">&lt;FILE&gt;</replaceable></parameter>" if an Arcview
    road network shall be imported). As some of these input formats do not
    contain a complete information about the real network's topography,
    several additional options may be set in order to retrieve what is
    wanted.</para>

    <para>Besides the normal output which is the road network converted into
    the SUMO-format, <application>netconvert</application> may generate a list
    of nodes and edges and/or a file that contains the information which edges
    were joined in order to save simulation time.</para>
  </refsect1>

  <refsect1>
    <title>OPTIONS</title>

    <para>In the following, all possible options are presented.</para>

    <para>Please remark, that the configuration-option may be used to supply a
    file that contains all other parameter's definition. Please take a look
    into the SUMO user documentation for further information about the usage
    of configuration files.</para>

    <refsect2>
      <title>Input Options:</title>

      <variablelist>
        <varlistentry>
          <term>( --configuration-file | --configuration | -c ) <replaceable
          class="parameter">&lt;CONFIGURATION_FILE&gt;</replaceable></term>

          <listitem>
            <para>Specifies whether and which a configuration file shall be
            loaded. <remark>Optional, type:filename, default:
            none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --xml-node-files | --xml-nodes | -n ) <replaceable
          class="parameter">&lt;NODES_FILE&gt;[;&lt;NODES_FILE]*</replaceable></term>

          <listitem>
            <para>Uses the given file as the source of specification node
            positions and types. <remark>Optional, type:filename, default:
            none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --xml-edge-files | --xml-edges | -e ) <replaceable
          class="parameter">&lt;EDGES_FILE&gt;[;&lt;EDGES_FILE&gt;]*</replaceable></term>

          <listitem>
            <para>Uses the given file as the source of specification of roads
            connecting nodes. <remark>Optional, type:filename, default:
            none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --xml-connection-files | --xml-connections | -x )
          <replaceable
          class="parameter">&lt;CONNECTIONS_FILE&gt;[;&lt;CONNECTIONS_FILE&gt;]*</replaceable></term>

          <listitem>
            <para>Uses the given file as the source of specification how roads
            are connected (which lanes may be reached from which lanes).
            <remark>Optional, type:filename, default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --xml-type-files | --xml-types | -t ) <replaceable
          class="parameter">&lt;TYPES_FILE&gt;[;&lt;TYPES_FILE&gt;]*</replaceable></term>

          <listitem>
            <para>Uses the given file as the source of edge types.
            <remark>Optional, type:filename, default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --cell-node-file | --cell-nodes ) <replaceable
          class="parameter">&lt;FASTLANE_NODES_FILE&gt;</replaceable></term>

          <listitem>
            <para>Parses nodes from the given file assuming it to be a
            FastLane-file that contains node descriptions. <remark>Optional,
            type:filename, default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --cell-edge-file | --cell-edges ) <replaceable
          class="parameter">&lt;FASTLANE_EDGES_FILE&gt;</replaceable></term>

          <listitem>
            <para>Parses edges from the given file assuming it to be a
            FastLane-file that contains edge descriptions. <remark>Optional,
            type:filename, default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --visum-file | --visum ) <replaceable
          class="parameter">&lt;VISUM_FILE&gt;</replaceable></term>

          <listitem>
            <para>Parses all network information from the given file, assuming
            it is in VISUM7.5-format. <remark>Optional, type:filename,
            default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --vissim-file | --vissim ) <replaceable
          class="parameter">&lt;VISSIM_FILE&gt;</replaceable></term>

          <listitem>
            <para>Parses all network information from the given file, assuming
            it is in VISSIM 3.6.2 or 3.6.3 format. <remark>Optional,
            type:filename, default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --artemis-input | --artemis ) <replaceable
          class="parameter">&lt;ARTEMIS_FOLDER&gt;</replaceable></term>

          <listitem>
            <para>Parses all network information from files within the given
            path, assuming they belong to an ARTMIS-network. <remark>Optional,
            type:path, default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --arcview-input | --arcview ) <replaceable
          class="parameter">&lt;ARCVIEW_FILENAME&gt;</replaceable></term>

          <listitem>
            <para>Parses the edge attributes from
            "<replaceable>&lt;ARCVIEW_FILENAME&gt;</replaceable>.dbf" assuming
            it is an arcview-dbf-file. Parses the edge geometries from
            "<replaceable>&lt;ARCVIEW_FILENAME&gt;</replaceable>.shp" and
            "<replaceable>&lt;ARCVIEW_FILENAME&gt;</replaceable>.shx" assuming
            it is an ArcView-shape file. <remark>Optional, type:filename
            (prefix), default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--elmar <replaceable
          class="parameter">&lt;ELMAR_PREFIX&gt;</replaceable></term>

          <listitem>
            <para>Parses the files starting with
            <replaceable>&lt;ELMAR_PREFIX&gt;</replaceable> assuming they are
            stored in the format Elmar Brockfeld uses to save NavTeq-data
            (splitted, IVF-internal). <remark>Optional, type:filename (prefix)
            default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--elmar2 <replaceable
          class="parameter">&lt;ELMAR_PREFIX&gt;</replaceable></term>

          <listitem>
            <para>Parses the files starting with
            <replaceable>&lt;ELMAR_PREFIX&gt;</replaceable> assuming they are
            stored in the format Elmar Brockfeld uses to save NavTeq-data
            (unsplitted, IVF-internal). <remark>Optional, type:filename
            (prefix), default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--tiger <replaceable
          class="parameter">&lt;TIGER_PREFIX&gt;</replaceable></term>

          <listitem>
            <para>Parses the files starting with
            <replaceable>&lt;TIGER_PREFIX&gt;</replaceable> assuming they are
            stored in the TIGER-format. <remark>Optional, type:filename
            (prefix), default: none</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Output Options:</title>

      <variablelist>
        <varlistentry>
          <term>( --output-file | --output | -o ) <replaceable
          class="parameter">&lt;NET_OUTPUT_FILE&gt;</replaceable></term>

          <listitem>
            <para>Defines the file to write the computed network into. This
            file will contain the generated network if the conversion could be
            accomplished. <remark>Optional (pregiven), type:filename, default:
            "net.net.xml"</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --map-output | -M ) <replaceable
          class="parameter">&lt;MAP_OUTPUT_FILE&gt;</replaceable></term>

          <listitem>
            <para>Writes the file
            <filename><replaceable>&lt;MAP_OUTPUT_FILE&gt;</replaceable></filename>
            which holds the list of edges that were joined to a single edge
            for each edge. <remark>Optional, type:filename, default:
            none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--plain-output <replaceable
          class="parameter">&lt;PLAIN_OUTPUT_PREFIX&gt;</replaceable></term>

          <listitem>
            <para>Writes the files
            "<filename><replaceable>&lt;PLAIN_OUTPUT_PREFIX&gt;</replaceable>.nod.xml</filename>"
            and
            "<filename><replaceable>&lt;PLAIN_OUTPUT_PREFIX&gt;</replaceable>.edg.xml</filename>"
            that contain the descriptions about the nodes and the edges a
            network is made of. These files may be reread into the netgener
            using the XML-import capabilities. <remark>Optional,
            type:filename-prefix, default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--node-geometry-dump
          <replaceable>&lt;DUMP_FILENAME&gt;</replaceable></term>

          <listitem>
            <para>Writes the positions that were used during geometry
            computation into
            <filename><replaceable>&lt;DUMP_FILENAME&gt;</replaceable></filename>.
            <remark>Optional, type:filename, default: none</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Building Defaults:</title>

      <variablelist>
        <varlistentry>
          <term>( --type | -T ) &lt;<replaceable
          class="parameter">TYPE_NAME&gt;</replaceable></term>

          <listitem>
            <para>The name of the default type of edges. <remark>Optional
            (pregiven), type:string, default: "Unknown"</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --lanenumber | -L ) <replaceable
          class="parameter">&lt;LANE_NUMBER&gt;</replaceable></term>

          <listitem>
            <para>The number of lanes an edge has to use as default.
            <remark>Optional (pregiven), type:int, default: 1</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --speed | -S ) <replaceable
          class="parameter">&lt;MAX_SPEED&gt;</replaceable></term>

          <listitem>
            <para>The maximum speed allowed on an edge in m/s to use as
            default. <remark>Optional (pregiven), type:float, default:
            13.9</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --priority | -P ) <replaceable
          class="parameter">&lt;PRIORITY&gt;</replaceable></term>

          <listitem>
            <para>The default priority of an edge. <remark>Optional
            (pregiven), type:int, default: 1</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Import-type dependent Parameter:</title>

      <variablelist>
        <varlistentry>
          <term>--omit-corrupt-edges</term>

          <listitem>
            <para>Scope: XML-import</para>

            <para>Continues with parsing although a corrupt edge occurred.
            This edge is not inserted and a warning is printed.
            <remark>Optional (pregiven), type:bool, default:
            false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--flip-y</term>

          <listitem>
            <para>Scope: XML-import</para>

            <para>Flips the y-position of nodes (and edges) along the
            y=zero-line. <remark>Optional (pregiven), type:bool, default:
            false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--speed-in-km</term>

          <listitem>
            <para>Scope: XML-Import, ARCView-Import,
            CELL/FastLane-Import</para>

            <para>Parses speed information stored in XML-edge definition files
            as being given in km/h (not m/s as usual). <remark>Optional,
            type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--use-laneno-as-priority</term>

          <listitem>
            <para>Scope: XML-Import</para>

            <para>Interprets the number of lanes as an edges priority.
            <remark>Optional, type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--arcview.street-id
          <replaceable>&lt;STREET_NAME_COLUMN_NAME&gt;</replaceable></option></term>

          <listitem>
            <para>Scope: ArcView-import</para>

            <para>This option tells <application>NETCONVERT</application>
            which of the columns within the ArcView-database to read shall be
            used as the source of street names. If given, your database must
            contain this column, and the values must be unique for each
            street. <remark>Optional, type:string, default:
            none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--arcview.from-id
          <replaceable>&lt;START_NODE_ID_COLUMN_NAME&gt;</replaceable></option></term>

          <listitem>
            <para>Scope: ArcView-import</para>

            <para>This option tells <application>NETCONVERT</application>
            which of the columns within the ArcView-database to read shall be
            used as the source of the information from which node the street
            starts. If given, your database must contain this column.
            <remark>Optional, type:string, default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--arcview.to-id
          <replaceable>&lt;END_NODE_ID_COLUMN_NAME&gt;</replaceable></option></term>

          <listitem>
            <para>Scope: ArcView-import</para>

            <para>This option tells <application>NETCONVERT</application>
            which of the columns within the ArcView-database to read shall be
            used as the source of the information at which node the street
            ends. If given, your database must contain this column.
            <remark>Optional, type:string, default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--arcview.type-id
          <replaceable>&lt;TYPE_ID_COLUMN_NAME&gt;</replaceable></option></term>

          <listitem>
            <para>Scope: ArcView-import</para>

            <para>This option tells <application>NETCONVERT</application>
            which of the columns within the ArcView-database to read shall be
            used as the source of the information about the edge's type. Using
            this information, you can use type definitions as described in
            <link linkend="???">Types Descriptions</link> to determine your
            edges' attributes. If given, your database must contain this
            column. <remark>Optional, type:string, default:
            none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--arcview.use-defaults-on-failure</option></term>

          <listitem>
            <para>Scope: ArcView-import</para>

            <para>If a type could not be resolved or is invalid or any of the
            explicite information about an edge was invalid, this option
            forces NETCONVERT to use the default type values for the current
            street. If not set, and one of the cases occures, the
            application's behaviour is not determined. <remark>Optional,
            type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--arcview.all-bidi</option></term>

          <listitem>
            <para>Scope: ArcView-import</para>

            <para>Forces <application>NETCONVERT</application> to insert all
            edges bidirectional. <remark>Optional (pregiven), type:bool,
            default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--arcview.utm
          <replaceable>&lt;ORIGINAL_UTM_ZONE&gt;</replaceable></option></term>

          <listitem>
            <para>Scope: ArcView-import</para>

            <para>This value describes in which UTM-zone your network is
            located. The default is 32 being a place somwhere in western
            Germany. You should change this value if importing networks
            located somewhere else in the world. <remark>Optional (pregiven),
            type:int, default: 32</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--arcview.guess-projection</option></term>

          <listitem>
            <para>Scope: ArcView-import</para>

            <para>If building a converter using the given UTM-zone fails, this
            option tries to guess the project if set. Of course, this may also
            fail... <remark>Optional (pregiven), type:bool, default:
            false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--vissim-speed-norm <replaceable
          class="parameter">&lt;SPEED_NORM_FACTOR&gt;</replaceable></term>

          <listitem>
            <para>Scope: Vissim-import</para>

            <para>A factor that is multiplied with a streams maximum velocity
            to determine the velocity to use for an edge. <remark>Optional
            (pregiven), type:float, default: 1</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--vissim-default-speed <replaceable
          class="parameter">&lt;DEFAULT_SPEED&gt;</replaceable></term>

          <listitem>
            <para>Scope: Vissim-import</para>

            <para>The default speed to use for a street when no information is
            available. <remark>Optional (pregiven), type:float, default: 13.89
            (m/s)</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--vissim-offset<replaceable
          class="parameter">&lt;MAX_JOIN_DISTANCE&gt;</replaceable></term>

          <listitem>
            <para>Scope: Vissim-import</para>

            <para>This value is used to determine whether two
            Vissim-structures are near enough to be joined into a node.
            <remark>Optional (pregiven), type:float, default: 5
            (m)</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --capacity-norm | -C ) <replaceable
          class="parameter">&lt;NORM_FACTOR&gt;</replaceable></term>

          <listitem>
            <para>Scope: FastLane-import</para>

            <para>The value to divide a given capacity by to gain the number
            of lanes. <remark>Optional (pregiven), type:float, default:
            20000</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Traffic Lights Building:</title>

      <variablelist>
        <varlistentry>
          <term>( --min-decel | -D ) <replaceable
          class="parameter">&lt;FLOAT&gt;</replaceable></term>

          <listitem>
            <para>The minimum deceleration value for vehicles in m/s^2.
            <remark>Optional (pregiven), type:float, default:
            3</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--all-logics</term>

          <listitem>
            <para>Computes and saves all possible cliques and phases for a
            traffic light instead of the fastest one only. <remark>Optional,
            type:bool, default: false</remark></para>

            <caution>
              <para>This process may be very time consuming.</para>
            </caution>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--traffic-light-green <replaceable
          class="parameter">&lt;DURATION&gt;</replaceable></term>

          <listitem>
            <para>The duration of green lights. <remark>Optional, type:int,
            default: none (20s internally)</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--traffic-light-yellow <replaceable
          class="parameter">&lt;DURATION&gt;</replaceable></term>

          <listitem>
            <para>The duration of yellow lights; overrides --min-decel.
            <remark>Optional, type:int, default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--keep-small-tyellow</term>

          <listitem>
            <para>If a given yellow-time is smaller than the computed, it is
            normally replaced by the computed one and a warning is printed.
            Setting this option, you force netgen to keep the given time
            yellow light shall be shown (for a certain signal).
            <remark>Optional, type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--guess-tls</term>

          <listitem>
            <para>Forces NETCONVERT to guess which junctions posess traffic
            light logics. This should of course only be used for fast
            estimations and only if no tls-definitions are supplied. The
            following parameter steer the guessing more precisely.
            <remark>Optional, type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--tls-guess.min-incoming-speed <replaceable
          class="parameter">&lt;SPEED&gt;</replaceable>,
          --tls-guess.max-incoming-speed <replaceable
          class="parameter">&lt;SPEED&gt;</replaceable></term>

          <listitem>
            <para>Sets the minimum and the maximum of the velocity a
            junction's incoming edges may have if the junction shall be
            tls-controlled in m/s. <remark>Optional (pregiven), type:float,
            defaults: --tls-guess.min-incoming-speed: 40/3.6,
            --tls-guess.min-incoming-speed: 69/3.6</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--tls-guess.min-outgoing-speed <replaceable
          class="parameter">&lt;SPEED&gt;</replaceable>,
          --tls-guess.max-outgoing-speed <replaceable
          class="parameter">&lt;SPEED&gt;</replaceable></term>

          <listitem>
            <para>Sets the minimum and the maximum of the velocity a
            junction's outgoing edges may have if the junction shall be
            tls-controlled in m/s. <remark>Optional (pregiven), type:float,
            defaults: --tls-guess.min-outgoing-speed: 40/3.6,
            --tls-guess.max-outgoing-speed: 69/3.6</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--tls-guess.no-incoming-min <replaceable
          class="parameter">&lt;LANE_NUMBER&gt;</replaceable>,
          --tls-guess.no-incoming-max <replaceable
          class="parameter">&lt;LANE_NUMBER&gt;</replaceable></term>

          <listitem>
            <para>Sets the minimum and the maximum number of a junction's
            incoming edges to allow the junction to be controlled by a tls.
            <remark>Optional (pregiven), type:int, defaults:
            --tls-guess.no-incoming-min: 2, --tls-guess.no-incoming-max:
            5</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--tls-guess.no-outgoing-min <replaceable
          class="parameter">&lt;LANE_NUMBER&gt;</replaceable>,
          --tls-guess.no-outgoing-max <replaceable
          class="parameter">&lt;LANE_NUMBER&gt;</replaceable></term>

          <listitem>
            <para>Sets the minimum and the maximum number of a junction's
            outgoing edges to allow the junction to be controlled by a tls.
            <remark>Optional (pregiven), type:int, defaults:
            --tls-guess.no-outgoing-min: 1, --tls-guess.no-outgoing-max:
            5</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--explicite-tls <replaceable
          class="parameter">&lt;JUNCTION_ID&gt;[;&lt;JUNCTION_ID&gt;]*</replaceable></term>

          <listitem>
            <para>Informs the network builder that the given junctions shall
            be treated as being controlled by traffic lights, even if they do
            not match the tls-guess rules. <remark>Optional, type:list of
            strings, default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--explicite-no-tls <replaceable
          class="parameter">&lt;JUNCTION_ID&gt;[;&lt;JUNCTION_ID]*</replaceable></term>

          <listitem>
            <para>Informs the network builder that the given junctions shall
            be treated as NOT being controlled by traffic lights, even if they
            match the tls-guess rules. <remark>Optional, type:list of strings,
            default: none</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Highway On-/Off-Ramps Building:</title>

      <variablelist>
        <varlistentry>
          <term>--guess-ramps</term>

          <listitem>
            <para>Forces NETCONVERT to guess positions of highway on- and
            off-ramps. <remark>Optional, type:bool, default:
            false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--ramp-guess.max-ramp-speed <replaceable
          class="parameter">&lt;SPEED&gt;</replaceable></term>

          <listitem>
            <para>Defines the maximum speed an edge may have in order to be a
            ramp in m/s. The default of -1 tells
            <application>NETCONVERT</application> that all edges may be
            potential ramps. <remark>Optional (pregiven), type:float, default:
            -1</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--ramp-guess.min-highway-speed <replaceable
          class="parameter">&lt;SPEED&gt;</replaceable></term>

          <listitem>
            <para>Defines the minimum speed an edge may have in order to be a
            highway in m/s. <remark>Optional (pregiven), type:float, default:
            80/3.6</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--ramp-guess.ramp-length <replaceable
          class="parameter">&lt;LENGTH&gt;</replaceable></term>

          <listitem>
            <para>Sets the length of the ramps to build in meters.
            <remark>Optional (pregiven), type:float, defaults:
            100</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Geocoordinates Projection:</title>

      <variablelist>
        <varlistentry>
          <term><option><option>--use-projection</option></option></term>

          <listitem>
            <para>Enables reprojection of the network's coordinates.
            <remark>Optional, type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option><option>--proj
          <replaceable>&lt;STRING&gt;</replaceable></option></option></term>

          <listitem>
            <para>Defines projection. <remark>Optional (pregiven),
            type:string, default: "+proj=utm +zone=33 +ellps=bessel
            +units=m"</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Random Number Options:</title>

      <variablelist>
        <varlistentry>
          <term>--abs-rand</term>

          <listitem>
            <para>Initialises the random number generator with the current
            time (in ms) in the hope to make him generate really random
            numbers of an unknown order. <remark>Optional, type:bool, default:
            false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--srand <replaceable
          class="parameter">&lt;SEED&gt;</replaceable></term>

          <listitem>
            <para>Initialises the random number generator with
            <replaceable>&lt;SEED&gt;</replaceable>. <remark>Optional,
            type:int, default: none</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>Report Options:</title>

      <variablelist>
        <varlistentry>
          <term>( --verbose | -v )</term>

          <listitem>
            <para>Prints some information about the process during execution.
            <remark>Optional, type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --suppress-warnings | -W )</term>

          <listitem>
            <para>No warnings will be prompted if this option is set.
            <remark>Optional, type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --print-options | -p )</term>

          <listitem>
            <para>Prints the current option settings before the execution
            starts. <remark>Optional, type:bool, default:
            false</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>( --log-file | -L )<replaceable class="parameter">
          &lt;LOG_FILE_NAME&gt;</replaceable></term>

          <listitem>
            <para>All outputs (messages, warnings, and errors) will be written
            to <replaceable>&lt;LOG_FILE_NAME&gt;</replaceable>.
            <remark>Optional, type:filename, default: none</remark></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>--print-node-position</term>

          <listitem>
            <para>Prints the node positions during building. <remark>Optional
            (pregiven), type:bool, default: false</remark></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>
  </refsect1>

  <refsect1>
    <title>USAGE</title>

    <para>The following topics should be described more precisely within the
    SUMO user documentation that may be found at
    http://sumo.sourceforge.net</para>

    <para>netconvert requires at least one definition of the input to be
    processed and the name of the file to generate. The input specification
    depends on the type of networks that shall be read, the output file name
    does not have any restrictions beside the ones of the operating system but
    we would encourage you to use the naming schemes described within the user
    manual. Remark: it is assumed that the destination folder exists.</para>

    <para>Some of the input formats do require only one option to be set. This
    is true for most of the traffic simulations and the following one may be
    imported this way: <application>Vissim</application>
    (<option>--vissim</option>), <application>Visum</application>
    (<option>--visum</option>), <application>ARTEMIS</application>
    (<option>--artemis</option>) and Elmar Brockfelds GDF-parser output
    (<option>--elmar</option>). Please remark, that for
    <application>ARTEMIS</application> you have to use the name of the folder,
    not of one of the files that belong to the network description.</para>

    <para>If dealing with own network descriptions, you have to define at
    least a list of nodes and a list of edges and pass them to the netconvert
    using <option>--xml-nodes</option> and <option>--xml-edges</option>. This
    is by far the best way to deal with network formats (beside the very
    complete description of Vissim-files) as you have the most possibilities
    to define your network. The topology computation may be steered in this
    case using a further file that contains the definitions of connection
    between edges or each of an edge's lane which can be passed using the
    option <option>--xml-connections</option>. The description of the
    xml-files may be found within the sumo user documentation.</para>

    <refsect2>
      <title>Examples</title>

      <para><command>netconvert</command> -c
      <filename>myConfig.netc.cfg</filename></para>

      <para>Does the things described by the configuration
      "<filename>myConfig.netc.cfg</filename>"</para>

      <para><command>netconvert</command> --arcview
      <filename>myArcViewFile</filename> -o
      <filename>myNet.net.xml</filename></para>

      <para>Converts the edge definitions stored in
      <filename>myArcViewFile</filename>.dbf and the edge shapes stored in
      <filename>myArcViewFile.shp</filename> into a SUMO-network.</para>
    </refsect2>
  </refsect1>

  <refsect1>
    <title>CAVEATS</title>

    <para>The program is still under development.</para>
  </refsect1>

  <refsect1>
    <title>BUGS</title>

    <para>The program is still under development.</para>

    <para>There are some bigger problems when importing ARTEMIS-networks. We
    have stopped to continue the development of this importer, so we do not
    know whether this issue will be reworked.</para>
  </refsect1>

  <refsect1>
    <title>SEE ALSO</title>

    <para>netconvert(1), sumo(1), jtrrouter(1), duarouter(1),
    od2trips(1)</para>
  </refsect1>

  <refsect1>
    <title>AUTHOR</title>

    <para><author>
        <firstname>Daniel</firstname>

        <surname>Krajzewicz</surname>
      </author></para>
  </refsect1>
</refentry>