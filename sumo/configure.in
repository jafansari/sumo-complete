# Original Author was Kalle@kde.org
# I lifted it in some mater. (Stephan Kulow)
# I used much code from Janos Farkas

dnl Process this file with autoconf to produce a configure script.

AC_INIT(acinclude.m4) dnl a source file from your sub dir



dnl `AC_CONFIG_AUX_DIR'
dnl     Automake will look for various helper scripts, such as
dnl     `mkinstalldirs', in the directory named in this macro invocation.
dnl     If not seen, the scripts are looked for in their `standard'
dnl     locations (either the top source directory, or in the source
dnl     directory corresponding to the current `Makefile.am', whichever is
dnl     appropriate).
dnl This is so we can use kde-common
AC_CONFIG_AUX_DIR(admin)

AC_CANONICAL_SYSTEM

dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(sumo,0.7.2)

dnl KDE_SET_PREFIX

AC_PREFIX_DEFAULT(/usr/local)
if test "x$prefix" = "xNONE"; then
  prefix=$ac_default_prefix
  ac_configure_args="$ac_configure_args --prefix $prefix"
fi

dnl generate the config header
AM_CONFIG_HEADER(config.h) dnl at the distribution this done

dnl start of sumo-specific configure options
dnl Check for enable-features that shall go into config.h
AC_ARG_ENABLE(debug,
              [  --enable-debug          enable sumo debugging code [default=no].],
              [AC_DEFINE(_DEBUG, 1,
                         [Define to 1 in order to enable sumo debugging code.])
	      ])

AC_ARG_ENABLE(assert,
              [  --disable-assert        disable assertions [default=no].],
              [AC_DEFINE(NDEBUG, 1,
                         [Define to 1 in order to disable assertions.])
	      ])

AC_ARG_ENABLE(inline,
              [  --disable-inline        disable inlining [default=no].],
              [AC_DEFINE(DISABLE_INLINE, 1,
                         [Define to 1 in order to disable inlining.])
	      ])

AC_ARG_ENABLE(speedcheck,
              [  --enable-speedcheck     enable sumo speedchecking code [default=no].],
              [AC_DEFINE(_SPEEDCHECK, 1,
                         [Define to 1 in order to enable simulation-speed checking.])
	      ])

AC_ARG_ENABLE(cfront,
              [  --enable-cfront         enable external template definitions. [default=no].],
              [cfront_model=true],[cfront_model=false])

if test x$cfront_model = xtrue; then
	AC_DEFINE(EXTERNAL_TEMPLATE_DEFINITION, 1,
		[Define to 1 in order to enable external template definitions (cfront-model).])
fi
dnl end of sumo-specific configure-options

dnl Checks for programs.
dnl Das ist von kdevelop/kde bereitgestellter code. Hier wird auch
dnl -fno-exceptions gesetzt
AC_CHECK_COMPILERS

dnl CXXFLAGS="$NOOPT_CXXFLAGS" dnl __kdevelop[noopt]__
dnl CFLAGS="$NOOPT_CFLAGS" dnl __kdevelop[noopt]__

dnl Kann man hiermit exceptions anschalten? Ja, -fexceptions wird einfach
dnl hinter das standardmaessige -fno-exception geschrieben.
CXXFLAGS="$CXXFLAGS $USE_EXCEPTIONS" dnl __kdevelop[exc]__

AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(no)
KDE_PROG_LIBTOOL

all_libraries="$all_libraries $USER_LDFLAGS"
all_includes="$all_includes $USER_INCLUDES"
AC_SUBST(all_includes)
AC_SUBST(all_libraries)


dnl for NLS support. Call them in this order!
dnl WITH_NLS is for the po files
AM_KDE_WITH_NLS

KDE_USE_QT(3)
AC_PATH_QT

dnl KDE_NEED_FLEX dnl __kdevelop__
dnl AC_PROG_YACC dnl __kdevelop__

dnl Perform program name transformation
dnl AC_ARG_PROGRAM

dnl start sumo-specific header and library search
dnl Checks for libraries.
dnl Checks for xerces-library
AC_ARG_WITH(xerces-libraries,
    [  --with-xerces-libraries=DIR where the Xerces library is installed.],
    [  ac_xerces_libraries="$withval"
    ])

AC_MSG_CHECKING([for xerces-lib])
if test x"$ac_xerces_libraries" = x; then
   if test -e /usr/lib/libxerces.so; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path=/usr/lib
      ac_xerceslib=xerces
   elif test -e /usr/lib/libxerces-c.so; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path=/usr/lib
      ac_xerceslib=xerces-c
   elif test -e /usr/local/lib/libxerces.so; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path=/usr/local/lib
      ac_xerceslib=xerces
   elif test -e /usr/local/lib/libxerces-c.so; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path=/usr/local/lib
      ac_xerceslib=xerces-c
   elif test -e /usr/local/xerces/lib/libxerces.so; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path=/usr/local/xerces/lib/
      ac_xerceslib=xerces
   elif test -e /usr/local/xerces/lib/libxerces-c.so; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path=/usr/local/xerces/lib/
      ac_xerceslib=xerces-c
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([xerces-lib not found. Specify path with option --with-xerces-libraries=DIR.])
   fi
else
   if test -e "$ac_xerces_libraries/libxerces.so"; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path="$ac_xerces_libraries"
      ac_xerceslib=xerces
   elif test -e "$ac_xerces_libraries/libxerces-c.so"; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path="$ac_xerces_libraries"
      ac_xerceslib=xerces-c
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([xerces-lib not found in "$ac_xerces_libraries".])
   fi
fi
XERCESLIBPATH="$ac_xerces_lib_path"
AC_SUBST(XERCESLIBPATH)
XERCESLIB="$ac_xerceslib"
AC_SUBST(XERCESLIB)


dnl Checks for header files.
dnl Checks for Xerces-includes.
AC_ARG_WITH(xerces-includes,
    [  --with-xerces-includes=DIR  where the Xerces includes are. ],
    [
       ac_xerces_includes="$withval"
    ])

AC_MSG_CHECKING([for xerces-includes])
if test x"$ac_xerces_includes" = x; then
   if test -e /usr/include/xercesc; then
      AC_MSG_RESULT([yes])
      ac_xerces_includes=/usr/include
   elif test -e /usr/local/include/xercesc; then
      AC_MSG_RESULT([yes])
      ac_xerces_includes=/usr/local/include
   elif test -e /usr/local/xerces/include; then
      AC_MSG_RESULT([yes])
      ac_xerces_includes=/usr/local/xerces/include
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([xerces-includes not found. Specify path with option --with-xerces-includes=DIR.])
   fi
else
   if test -e "$ac_xerces_includes/xercesc/sax2/SAX2XMLReader.hpp"; then
      AC_MSG_RESULT([yes])
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([xerces-includes not found in "$ac_xerces_includes".])
   fi
fi
XERCESINCLUDE="$ac_xerces_includes"
XERCESINCLUDE_PRIOR_1_7="$ac_xerces_includes/xercesc"
AC_SUBST(XERCESINCLUDE)
AC_SUBST(XERCESINCLUDE_PRIOR_1_7)
dnl end sumo-specific header and library search


dnl PACKAGE set before

KDE_CREATE_SUBDIRSLIST

dnl add here all your Makefiles. This are created by configure
AC_OUTPUT(
./Makefile
./data/Makefile
./data/cfg_templates/Makefile
./data/examples/Makefile
./data/examples/box1l/Makefile
./data/examples/box2l/Makefile
./data/examples/box3l/Makefile
./data/examples/box4l/Makefile
./data/examples/cross1l/Makefile
./data/examples/cross1ltl/Makefile
./data/examples/cross3l/Makefile
./data/examples/cross3ltl/Makefile
./data/examples/eight1l/Makefile
./data/examples/eight1ltl/Makefile
./data/examples/eight3l/Makefile
./data/examples/eight3ltl/Makefile
./data/ressources/Makefile
./data/types/Makefile
./docs/Makefile
./docs/gfx/Makefile
./prj/Makefile
./prj/gui/Makefile
./prj/sumo/Makefile
./prj/netconvert/Makefile
./prj/od2trips/Makefile
./prj/router/Makefile
./src/Makefile
./src/gui/Makefile
./src/gui/icons/Makefile
./src/gui/icons/view_traffic/Makefile
./src/gui/partable/Makefile
./src/gui/vartracker/Makefile
./src/guinetload/Makefile
./src/guisim/Makefile
./src/helpers/Makefile
./src/microsim/Makefile
./src/netbuild/Makefile
./src/netimport/Makefile
./src/netimport/arcview/Makefile
./src/netimport/artemis/Makefile
./src/netimport/cell/Makefile
./src/netimport/sumo/Makefile
./src/netimport/vissim/Makefile
./src/netimport/vissim/tempstructs/Makefile
./src/netimport/vissim/typeloader/Makefile
./src/netimport/visum/Makefile
./src/netimport/xml/Makefile
./src/netload/Makefile
./src/od2trips/Makefile
./src/router/Makefile
./src/sumo_only/Makefile
./src/utils/Makefile
./src/utils/common/Makefile
./src/utils/convert/Makefile
./src/utils/dev/Makefile
./src/utils/distribution/Makefile
./src/utils/geom/Makefile
./src/utils/gfx/Makefile
./src/utils/glutils/Makefile
./src/utils/importio/Makefile
./src/utils/logging/Makefile
./src/utils/options/Makefile
./src/utils/qutils/Makefile
./src/utils/router/Makefile
./src/utils/sumoxml/Makefile
./src/utils/xml/Makefile
./tests/Makefile
./tests/dos/Makefile
./tests/unix/Makefile
./tools/Makefile
)
