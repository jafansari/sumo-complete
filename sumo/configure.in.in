dnl    This file is part of the KDE libraries/packages
dnl    Copyright (C) 2001 Stephan Kulow (coolo@kde.org)

dnl    This file is free software; you can redistribute it and/or
dnl    modify it under the terms of the GNU Library General Public
dnl    License as published by the Free Software Foundation; either
dnl    version 2 of the License, or (at your option) any later version.

dnl    This library is distributed in the hope that it will be useful,
dnl    but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl    Library General Public License for more details.

dnl    You should have received a copy of the GNU Library General Public
dnl    License along with this library; see the file COPYING.LIB.  If not,
dnl    write to the Free Software Foundation,
dnl    Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# Original Author was Kalle@kde.org
# I lifted it in some mater. (Stephan Kulow)
# I used much code from Janos Farkas

# $Id$


dnl Process this file with autoconf to produce a configure script.

AC_INIT(acinclude.m4) dnl a source file from your sub dir

dnl This is so we can use kde-common
AC_CONFIG_AUX_DIR(admin)

dnl This ksh/zsh feature conflicts with `cd blah ; pwd`
unset CDPATH

dnl Checking host/target/build systems, for make, install etc.
AC_CANONICAL_SYSTEM
dnl Perform program name transformation
AC_ARG_PROGRAM

dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(sumo,0.8.0)

AC_PREFIX_DEFAULT(/usr/local)
dnl if test "x$prefix" = "xNONE"; then
dnl   prefix=$ac_default_prefix
dnl   ac_configure_args="$ac_configure_args --prefix $prefix"
dnl fi

dnl generate the config header
AM_CONFIG_HEADER(config.h) dnl at the distribution this done

dnl Checks for programs.
AC_CHECK_COMPILERS
AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(no)
AC_PROG_LIBTOOL

dnl Use c++ exceptions
CXXFLAGS="$CXXFLAGS $USE_EXCEPTIONS"

dnl KDE_USE_QT
AC_PATH_QT

dnl KDE_USE_QT(3)
dnl AC_PATH_QT

dnl all_libraries="$all_libraries $USER_LDFLAGS"
dnl all_includes="$all_includes $USER_INCLUDES"
dnl AC_SUBST(all_includes)
dnl AC_SUBST(all_libraries)

dnl start of sumo-specific configure options
dnl Check for enable-features that shall go into config.h
AC_ARG_ENABLE(debug,
              [  --enable-debug          enable sumo debugging code [default=no].],
              [AC_DEFINE(_DEBUG, 1,
                         [Define to 1 in order to enable sumo debugging code.])
	      ])

AC_ARG_ENABLE(assert,
              [  --disable-assert        disable assertions [default=no].],
              [AC_DEFINE(NDEBUG, 1,
                         [Define to 1 in order to disable assertions.])
	      ])

AC_ARG_ENABLE(inline,
              [  --disable-inline        disable inlining [default=no].],
              [AC_DEFINE(DISABLE_INLINE, 1,
                         [Define to 1 in order to disable inlining.])
	      ])

AC_ARG_ENABLE(speedcheck,
              [  --enable-speedcheck     enable sumo speedchecking code [default=no].],
              [AC_DEFINE(_SPEEDCHECK, 1,
                         [Define to 1 in order to enable simulation-speed checking.])
	      ])

AC_ARG_ENABLE(cfront,
              [  --enable-cfront         enable external template definitions. [default=no].],
              [cfront_model=true],[cfront_model=false])

if test x$cfront_model = xtrue; then
	AC_DEFINE(EXTERNAL_TEMPLATE_DEFINITION, 1,
		[Define to 1 in order to enable external template definitions (cfront-model).])
fi
dnl end of sumo-specific configure-options


dnl start sumo-specific header and library search
dnl Checks for libraries.
dnl Checks for xerces-library
AC_ARG_WITH(xerces-libraries,
    [  --with-xerces-libraries=DIR where the Xerces library is installed.],
    [  ac_xerces_libraries="$withval"
    ])

AC_MSG_CHECKING([for xerces-lib])
if test x"$ac_xerces_libraries" = x; then
   if test -e /usr/lib/libxerces.so; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path=/usr/lib
      ac_xerceslib=xerces
   elif test -e /usr/lib/libxerces-c.so; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path=/usr/lib
      ac_xerceslib=xerces-c
   elif test -e /usr/local/lib/libxerces.so; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path=/usr/local/lib
      ac_xerceslib=xerces
   elif test -e /usr/local/lib/libxerces-c.so; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path=/usr/local/lib
      ac_xerceslib=xerces-c
   elif test -e /usr/local/xerces/lib/libxerces.so; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path=/usr/local/xerces/lib/
      ac_xerceslib=xerces
   elif test -e /usr/local/xerces/lib/libxerces-c.so; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path=/usr/local/xerces/lib/
      ac_xerceslib=xerces-c
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([xerces-lib not found. Specify path with option --with-xerces-libraries=DIR.])
   fi
else
   if test -e "$ac_xerces_libraries/libxerces.so"; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path="$ac_xerces_libraries"
      ac_xerceslib=xerces
   elif test -e "$ac_xerces_libraries/libxerces-c.so"; then
      AC_MSG_RESULT([yes])
      ac_xerces_lib_path="$ac_xerces_libraries"
      ac_xerceslib=xerces-c
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([xerces-lib not found in "$ac_xerces_libraries".])
   fi
fi
XERCES_LDFLAGS="$ac_xerces_lib_path"
AC_SUBST(XERCES_LDFLAGS)
LIB_XERCES="$ac_xerceslib"
AC_SUBST(LIB_XERCES)


dnl Checks for header files.
dnl Checks for Xerces-includes.
AC_ARG_WITH(xerces-includes,
    [  --with-xerces-includes=DIR  where the Xerces includes are. ],
    [
       ac_xerces_includes="$withval"
    ])

AC_MSG_CHECKING([for xerces-includes])
if test x"$ac_xerces_includes" = x; then
   if test -e /usr/include/xercesc; then
      AC_MSG_RESULT([yes])
      ac_xerces_includes=/usr/include
   elif test -e /usr/local/include/xercesc; then
      AC_MSG_RESULT([yes])
      ac_xerces_includes=/usr/local/include
   elif test -e /usr/local/xerces/include; then
      AC_MSG_RESULT([yes])
      ac_xerces_includes=/usr/local/xerces/include
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([xerces-includes not found. Specify path with option --with-xerces-includes=DIR.])
   fi
else
   if test -e "$ac_xerces_includes/xercesc/sax2/SAX2XMLReader.hpp"; then
      AC_MSG_RESULT([yes])
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([xerces-includes not found in "$ac_xerces_includes".])
   fi
fi
XERCESINCLUDE="$ac_xerces_includes"
XERCESINCLUDE_PRIOR_1_7="$ac_xerces_includes/xercesc"
AC_SUBST(XERCESINCLUDE)
AC_SUBST(XERCESINCLUDE_PRIOR_1_7)
dnl end sumo-specific header and library search



dnl Checks for fox-library
AC_ARG_WITH(fox-libraries,
    [  --with-fox-libraries=DIR where the FOX library is installed.],
    [  ac_fox_libraries="$withval"
    ])

AC_MSG_CHECKING([for fox-lib])
if test x"$ac_fox_libraries" = x; then
   if test -e /usr/lib/libFOX.so; then
      AC_MSG_RESULT([yes])
      ac_fox_lib_path=/usr/lib
      ac_foxlib=FOX-1.1
   elif test -e /usr/local/lib/libFOX.so; then
      AC_MSG_RESULT([yes])
      ac_fox_lib_path=/usr/local/lib
      ac_foxlib=FOX-1.1
   elif test -e /usr/local/fox/lib/libFOX.so; then
      AC_MSG_RESULT([yes])
      ac_fox_lib_path=/usr/local/fox/lib/
      ac_foxlib=FOX-1.1
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([fox-lib not found. Specify path with option --with-fox-libraries=DIR.])
   fi
else
   if test -e "$ac_fox_libraries/libFOX.so"; then
      AC_MSG_RESULT([yes])
      ac_fox_lib_path="$ac_fox_libraries"
      ac_foxlib=FOX
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([fox-lib not found in "$ac_fox_libraries".])
   fi
fi
FOX_LDFLAGS="$ac_fox_lib_path"
AC_SUBST(FOX_LDFLAGS)
LIB_FOX="$ac_foxlib"
AC_SUBST(LIB_FOX)


dnl Checks for header files.
dnl Checks for Fox-includes.
AC_ARG_WITH(fox-includes,
    [  --with-fox-includes=DIR  where the Fox includes are. ],
    [
       ac_fox_includes="$withval"
    ])

AC_MSG_CHECKING([for fox-includes])
if test x"$ac_fox_includes" = x; then
   if test -e /usr/include/fox; then
      AC_MSG_RESULT([yes])
      ac_fox_includes=/usr/include/fox
   elif test -e /usr/local/include/fox; then
      AC_MSG_RESULT([yes])
      ac_fox_includes=/usr/local/include/fox
   elif test -e /usr/local/fox/include; then
      AC_MSG_RESULT([yes])
      ac_fox_includes=/usr/local/fox/include
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([fox-includes not found. Specify path with option --with-fox-includes=DIR.])
   fi
else
   if test -e "$ac_fox_includes/FXApp.h"; then
      AC_MSG_RESULT([yes])
   else
      AC_MSG_RESULT([no])
      AC_MSG_ERROR([fox-includes not found in "$ac_fox_includes".])
   fi
fi
FOX_INCLUDES="$ac_fox_includes"
AC_SUBST(FOX_INCLUDES)
dnl end sumo-specific header and library search





