<configuration>

    <input
        <!-- Read SUMO-net from FILE -->
        sumo-net=""

        <!-- Read XML-node defs from FILE -->
        xml-node-files=""

        <!-- Read XML-edge defs from FILE -->
        xml-edge-files=""

        <!-- Read XML-connection defs from FILE -->
        xml-connection-files=""

        <!-- Read XML-type defs from FILE -->
        xml-type-files=""

        <!-- Read shapefiles (ArcView, Tiger, ...) from files starting with 'FILE' -->
        shapefile=""

        <!-- Read converted Navteq GDF data (unsplitted Elmar-network) from path 'FILE' -->
        dlr-navteq=""

        <!-- Read OSM-network from path 'FILE(s)' -->
        osm-files=""

        <!-- Read VISUM-net from FILE -->
        visum-file=""

        <!-- Read VISSIM-net from FILE -->
        vissim-file=""

        <!-- Read RoboCup-net from DIR -->
        robocup-net=""

    />

    <output
        <!-- The generated net will be written to FILE -->
        output-file="net.net.xml"

        <!-- Prefix of files to write nodes and edges to -->
        plain-output=""

        <!-- Writes node corner positions to FILE -->
        node-geometry-dump=""

        <!-- Writes joined edges information to FILE -->
        map-output=""

        <!-- Writes pois of tls positions to FILE -->
        tls-poi-output=""

        <!-- Writes pois of node types to FILE -->
        node-type-output=""

    />

    <projection
        <!-- Uses a simple method for projection -->
        proj.simple="false"

        <!-- Scale to apply to geo-coordinates -->
        proj.scale="1"

        <!-- Determine the UTM zone (for a universal transversal mercator projection based on the WGS84 ellipsoid) -->
        proj.utm="false"

        <!-- Determine the DHDN zone (for a transversal mercator projection based on the bessel ellipsoid) -->
        proj.dhdn="false"

        <!-- Uses STR as proj.4 definition for projection -->
        proj="!"

        <!-- Inverses projection -->
        proj.inverse="false"

    />

    <tls_building
        <!-- Interprets STR as list of junctions to be controlled by TLS -->
        explicite-tls=""

        <!-- Interprets STR as list of junctions to be not controlled by TLS -->
        explicite-no-tls=""

        <!-- Turns on TLS guessing -->
        guess-tls="false"

        <!-- Sets district nodes as tls-controlled -->
        tls-guess.district-nodes="false"

        <!-- Includes node clusters into guess -->
        tls-guess.joining="false"

        <!-- Tries to cluster tls-controlled nodes -->
        try-join-tls="false"

        <!-- Defines smallest vehicle deceleration -->
        min-decel="3"

        <!-- Given yellow times are patched even if being too short -->
        patch-small-tyellow="false"

        <!-- Use INT as green phase duration -->
        traffic-light-green=""

        <!-- Set INT as fixed time for yellow phase durations -->
        traffic-light-yellow=""

        <!-- TLSs in STR will be shifted by half-phase -->
        tl-logics.half-offset=""

        <!-- TLSs in STR will be shifted by quarter-phase -->
        tl-logics.quarter-offset=""

    />

    <ramp_guessing
        <!-- Enable ramp-guessing -->
        guess-ramps="false"

        <!-- Treat edges with speed > FLOAT as no ramps -->
        ramp-guess.max-ramp-speed="-1"

        <!-- Treat edges with speed < FLOAT as no highways -->
        ramp-guess.min-highway-speed="21.9444"

        <!-- Use FLOAT as ramp-length -->
        ramp-guess.ramp-length="100"

        <!-- Tries to handle the given edges as ramps -->
        ramp-guess.explicite=""

        <!--  -->
        guess-obscure-ramps="false"

        <!--  -->
        obscure-ramps.add-ramp="false"

        <!--  -->
        obscure-ramps.min-highway-speed="27.7778"

    />

    <edge_removal
        <!-- Remove edges with speed < FLOAT -->
        edges-min-speed=""

        <!-- Remove edges in STR -->
        remove-edges=""

        <!-- Remove edges not in STR -->
        keep-edges=""

        <!-- Removed edges not in FILE -->
        keep-edges.input-file=""

        <!-- Remove edges after joining -->
        keep-edges.postload="false"

        <!-- Keeps edges which are located within the given boundary -->
        keep-edges.in-boundary=""

        <!-- Remove edges where vclass def is not in STR -->
        remove-edges.by-vclass=""

    />

    <unregulated_nodes
        <!-- All nodes will be not regulated -->
        keep-unregulated="false"

        <!-- Do not regulate nodes in STR -->
        keep-unregulated.nodes=""

        <!-- Do not regulate district nodes -->
        keep-unregulated.district-nodes="false"

    />

    <processing
        <!-- Continue on broken input -->
        dismiss-loading-errors="false"

        <!-- The factor for flow to no. lanes conv -->
        capacity-norm="1800"

        <!-- vmax is parsed as given in km/h (some) -->
        speed-in-kmh="false"

        <!-- Read edge ids from column STR -->
        shapefile.street-id=""

        <!-- Read from-node ids from column STR -->
        shapefile.from-id=""

        <!-- Read to-node ids from column STR -->
        shapefile.to-id=""

        <!-- Read type ids from column STR -->
        shapefile.type-id=""

        <!-- Uses edge type defaults on problems -->
        shapefile.use-defaults-on-failure="false"

        <!-- Insert edges in both directions -->
        shapefile.all-bidi="false"

        <!-- Use INT as UTM zone -->
        shapefile.utm="32"

        <!-- Guess the proper projection -->
        shapefile.guess-projection="false"

        <!-- Structure join offset -->
        vissim.offset="5"

        <!-- Use FLOAT as default speed -->
        vissim.default-speed="50"

        <!-- Factor for edge velocity -->
        vissim.speed-norm="1"

        <!-- Writes lanes without an explicite speed set. -->
        vissim.report-unset-speeds="false"

        <!-- Uses priorities from types -->
        visum.use-type-priority="false"

        <!-- Uses lane numbers from types -->
        visum.use-type-laneno="false"

        <!-- Uses speeds from types -->
        visum.use-type-speed="false"

        <!-- Sets connector speed -->
        visum.connector-speeds="100"

        <!-- Sets connector lane number -->
        visum.connector-laneno="3"

        <!-- Excludes connectors -->
        visum.no-connectors="false"

        <!-- Excludes connectors -->
        visum.recompute-laneno="false"

        <!-- Flips the y-coordinate along zero -->
        flip-y="false"

        <!--  -->
        dismiss-vclasses="false"

        <!-- Removes geometry information from edges -->
        remove-geometry="false"

        <!-- Removes isolated edges -->
        remove-isolated="false"

        <!-- Disables building turnarounds -->
        no-turnarounds="false"

        <!-- Disables building turnarounds at tls-controlled junctions -->
        no-tls-turnarounds="false"

        <!-- Omits internal links -->
        no-internal-links="false"

        <!-- Splits edges across geometry nodes -->
        split-geometry="false"

        <!-- Turn off normalizing node positions -->
        disable-normalize-node-positions="false"

        <!-- Adds FLOAT to net x-positions -->
        x-offset-to-apply="0"

        <!-- Adds FLOAT to net y-positions -->
        y-offset-to-apply="0"

        <!-- Enable roundabout-guessing -->
        guess-roundabouts="false"

    />

    <building_defaults
        <!-- The default name for an edges type -->
        type="Unknown"

        <!-- The default number of lanes in an edge -->
        lanenumber="1"

        <!-- The default speed on an edge (in m/s) -->
        speed="13.9"

        <!-- The default priority of an edge -->
        priority="-1"

    />

    <report
        <!-- Switches to verbose output -->
        verbose="false"

        <!-- Prints option values before processing -->
        print-options="false"

        <!-- Prints this screen -->
        help="false"

        <!-- Disables output of warnings -->
        suppress-warnings="false"

        <!-- Writes all messages to FILE -->
        log-file=""

    />

    <random_number
        <!-- Initialises the random number generator with the given value -->
        srand="23423"

        <!-- Initialises the random number generator with the current system time -->
        abs-rand="false"

    />

</configuration>
