# Tests what happens if the user uses a route containing only one edge
one_edge_route

# Tests what happens if a vehicle is longer that the route it shall start at
too_long_vehicle


# within emitters: a valid definition
ok_emitteremission

# within emitters: empty route
emptyroute_emitteremission

# within emitters: first edge is not in the network
first_edge_false__emitteremission

# within emitters: second edge is not in the network
second_edge_false__emitteremission

# within emitters: last edge is not in the network
last_edge_false__emitteremission


# plain emission, new style: a valid definition
ok_newstyle_plainemission

# plain emission, new style: empty route
emptyroute_newstyle_plainemission

# plain emission, new style: first edge is not in the network
first_edge_false__newstyle_plainemission

# plain emission, new style: second edge is not in the network
second_edge_false__newstyle_plainemission

# plain emission, new style: last edge is not in the network
last_edge_false__newstyle_plainemission


# plain emission, old style: a valid definition
ok_oldstyle_plainemission

# plain emission, old style: empty route
emptyroute_oldstyle_plainemission

# plain emission, old style: first edge is not in the network
first_edge_false__oldstyle_plainemission

# plain emission, old style: second edge is not in the network
second_edge_false__oldstyle_plainemission

# plain emission, old style: last edge is not in the network
last_edge_false__oldstyle_plainemission



# An empty route



