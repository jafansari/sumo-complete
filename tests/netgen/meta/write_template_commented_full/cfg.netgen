<?xml version="1.0" encoding="iso-8859-1"?>

<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://sumo.sf.net/xsd/netgenConfiguration.xsd">

    <grid_network>
        <!-- Forces NETGEN to build a grid-like network -->
        <grid value="false" synonymes="g grid-net"/>

        <!-- The number of junctions in both dirs -->
        <grid.number value="5" synonymes="grid-number number"/>

        <!-- The length of streets in both dirs -->
        <grid.length value="100" synonymes="grid-length length"/>

        <!-- The number of junctions in x-dir; Overrides --grid-number -->
        <grid.x-number value="5" synonymes="grid-x-number x-no"/>

        <!-- The number of junctions in y-dir; Overrides --grid-number -->
        <grid.y-number value="5" synonymes="grid-y-number y-no"/>

        <!-- The length of horizontal streets; Overrides --grid-length -->
        <grid.x-length value="100" synonymes="grid-x-length x-length"/>

        <!-- The length of vertical streets; Overrides --grid-length -->
        <grid.y-length value="100" synonymes="grid-y-length y-length"/>

        <!-- The length of streets attached at the boundary; 0 means no streets are attached -->
        <grid.attach-length value="0" synonymes="attach-length"/>

    </grid_network>

    <spider_network>
        <!-- Forces NETGEN to build a spider-net-like network -->
        <spider value="false" synonymes="s spider-net"/>

        <!-- The number of axes within the net -->
        <spider.arm-number value="13" synonymes="arms spider-arm-number"/>

        <!-- The number of circles of the net -->
        <spider.circle-number value="20" synonymes="circles spider-circle-number"/>

        <!-- The distances between the circles -->
        <spider.space-radius value="100" synonymes="radius spider-space-rad"/>

        <!-- Omit the central node of the network -->
        <spider.omit-center value="false" synonymes="nocenter spider-omit-center"/>

    </spider_network>

    <random_network>
        <!-- Forces NETGEN to build a random network -->
        <rand value="false" synonymes="r random-net"/>

        <!-- Describes how many times an edge shall be added to the net -->
        <rand.iterations value="2000" synonymes="iterations rand-iterations"/>

        <!-- Defines the probability to build a reverse edge -->
        <rand.bidi-probability value="1" synonymes="bidi rand-bidi-probability"/>

        <!--  -->
        <rand.max-distance value="250" synonymes="max-dist rand-max-distance"/>

        <!--  -->
        <rand.min-distance value="100" synonymes="min-dist rand-min-distance"/>

        <!--  -->
        <rand.min-angle value="0.785398" synonymes="min-angle rand-min-anglee"/>

        <!--  -->
        <rand.num-tries value="50" synonymes="num-tries rand-num-tries"/>

        <!--  -->
        <rand.connectivity value="0.95" synonymes="connectivity rand-connectivity"/>

        <!--  -->
        <rand.neighbor-dist1 value="0" synonymes="dist1 rand-neighbor-dist1"/>

        <!--  -->
        <rand.neighbor-dist2 value="0" synonymes="dist2 rand-neighbor-dist2"/>

        <!--  -->
        <rand.neighbor-dist3 value="10" synonymes="dist3 rand-neighbor-dist3"/>

        <!--  -->
        <rand.neighbor-dist4 value="10" synonymes="dist4 rand-neighbor-dist4"/>

        <!--  -->
        <rand.neighbor-dist5 value="2" synonymes="dist5 rand-neighbor-dist5"/>

        <!--  -->
        <rand.neighbor-dist6 value="1" synonymes="dist6 rand-neighbor-dist6"/>

    </random_network>

    <output>
        <!-- The generated net will be written to FILE -->
        <output value="" synonymes="o output-file sumo-output"/>

        <!-- Prefix of files to write plain xml nodes, edges and connections to -->
        <plain-output-prefix value="" synonymes="plain-output"/>

        <!-- Writes joined edges information to FILE -->
        <map-output value="" synonymes="M"/>

        <!-- The generated net will be written to FILE using MATSIM format. -->
        <matsim-output value=""/>

    </output>

    <tls_building>
        <!-- Interprets STR as list of junctions to be controlled by TLS -->
        <tls.set value="" synonymes="explicite-tls"/>

        <!-- Interprets STR as list of junctions to be not controlled by TLS -->
        <tls.unset value="" synonymes="explicite-no-tls"/>

        <!-- Turns on TLS guessing -->
        <tls.guess value="false" synonymes="guess-tls"/>

        <!-- Includes node clusters into guess -->
        <tls-guess.joining value="false"/>

        <!-- Tries to cluster tls-controlled nodes -->
        <tls.join value="false" synonymes="try-join-tls"/>

        <!-- Use INT as green phase duration -->
        <tls.green.time value="31" synonymes="traffic-light-green"/>

        <!-- Defines smallest vehicle deceleration -->
        <tls.yellow.min-decel value="3" synonymes="D min-decel"/>

        <!-- Given yellow times are patched even if being too short -->
        <tls.yellow.patch-small value="false" synonymes="patch-small-tyellow"/>

        <!-- Set INT as fixed time for yellow phase durations -->
        <tls.yellow.time value="" synonymes="traffic-light-yellow"/>

        <!-- TLSs in STR will be shifted by half-phase -->
        <tls.half-offset value="" synonymes="tl-logics.half-offset"/>

        <!-- TLSs in STR will be shifted by quarter-phase -->
        <tls.quarter-offset value="" synonymes="tl-logics.quarter-offset"/>

    </tls_building>

    <edge_removal>
        <!-- Remove edges with speed < FLOAT -->
        <keep-edges.min-speed value="" synonymes="edges-min-speed"/>

        <!-- Remove edges in STR -->
        <remove-edges.explicit value="" synonymes="remove-edges"/>

        <!-- Remove edges not in STR -->
        <keep-edges.explicit value="" synonymes="keep-edges"/>

        <!-- Removed edges not in FILE -->
        <keep-edges.input-file value=""/>

        <!-- Remove edges after joining -->
        <keep-edges.postload value="false"/>

        <!-- Keeps edges which are located within the given boundary -->
        <keep-edges.in-boundary value=""/>

        <!-- Keep edges that allow any of the vclasss in STR -->
        <keep-edges.by-vclass value=""/>

        <!-- Remove edges where vclass def is not in STR -->
        <remove-edges.by-vclass value=""/>

    </edge_removal>

    <unregulated_nodes>
        <!-- All nodes will be not regulated -->
        <keep-unregulated value="false"/>

        <!-- Do not regulate nodes in STR -->
        <keep-unregulated.nodes value=""/>

        <!-- Do not regulate district nodes -->
        <keep-unregulated.district-nodes value="false"/>

    </unregulated_nodes>

    <processing>
        <!-- Removes vehicle class restrictions from imported edges. -->
        <dismiss-vclasses value="false"/>

        <!-- Removes geometry information from edges -->
        <remove-geometry value="false" synonymes="R"/>

        <!-- Removes isolated edges -->
        <remove-isolated value="false"/>

        <!-- Disables building turnarounds -->
        <no-turnarounds value="false"/>

        <!-- Disables building turnarounds at tls-controlled junctions -->
        <no-tls-turnarounds value="false"/>

        <!-- Omits internal links -->
        <no-internal-links value="false"/>

        <!-- Splits edges across geometry nodes -->
        <split-geometry value="false"/>

        <!-- Turn off normalizing node positions -->
        <offset.disable-normalization value="false" synonymes="disable-normalize-node-positions"/>

        <!-- Adds FLOAT to net x-positions -->
        <offset.x value="0" synonymes="x-offset-to-apply"/>

        <!-- Adds FLOAT to net y-positions -->
        <offset.y value="0" synonymes="y-offset-to-apply"/>

        <!-- Flips the y-coordinate along zero -->
        <flip-y-axis value="false" synonymes="flip-y"/>

        <!-- Enable roundabout-guessing -->
        <roundabouts.guess value="false" synonymes="guess-roundabouts"/>

        <!-- Assumes left-hand traffic on the network -->
        <lefthand value="false"/>

    </processing>

    <building_defaults>
        <!-- The default number of lanes in an edge -->
        <default.lanenumber value="1" synonymes="L lanenumber"/>

        <!-- The default speed on an edge (in m/s) -->
        <default.speed value="13.9" synonymes="S speed"/>

        <!-- The default priority of an edge -->
        <default.priority value="-1" synonymes="P priority"/>

        <!-- [traffic_light|priority|right_before_left] Determines the type of the build junctions -->
        <default-junction-type value="" synonymes="j junctions"/>

    </building_defaults>

    <report>
        <!-- Switches to verbose output -->
        <verbose value="false" synonymes="v"/>

        <!-- Prints option values before processing -->
        <print-options value="false" synonymes="p"/>

        <!-- Prints this screen -->
        <help value="false" synonymes="?"/>

        <!-- Prints the current version -->
        <version value="false" synonymes="V"/>

        <!-- Disables output of warnings -->
        <no-warnings value="false" synonymes="W suppress-warnings"/>

        <!-- Writes all messages to FILE -->
        <log value="" synonymes="l log-file"/>

        <!-- Writes all non-error messages to FILE -->
        <message-log value=""/>

        <!-- Writes all warnings and errors to FILE -->
        <error-log value=""/>

    </report>

    <random_number>
        <!-- Initialises the random number generator with the current system time -->
        <random value="false" synonymes="abs-rand"/>

        <!-- Initialises the random number generator with the given value -->
        <seed value="23423" synonymes="srand"/>

    </random_number>

</configuration>
