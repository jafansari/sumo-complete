#!/bin/bash
PREFIX=$1
export FILEPREFIX=$2
export SMTP_SERVER=$3
REMOTEDIR=$4
MAKELOG=$PREFIX/${FILEPREFIX}make.log
MAKEALLLOG=$PREFIX/${FILEPREFIX}makealloptions.log
STATUSLOG=$PREFIX/${FILEPREFIX}status.log
TESTLOG=$PREFIX/${FILEPREFIX}test.log
XMLLOG=$PREFIX/${FILEPREFIX}xml.log
export SUMO_BATCH_RESULT=$PREFIX/${FILEPREFIX}batch_result
export SUMO_REPORT=$PREFIX/${FILEPREFIX}report

rm -f $STATUSLOG
echo -n "$FILEPREFIX, " > $STATUSLOG
date >> $STATUSLOG
echo "--" >> $STATUSLOG
cd $PREFIX/sumo
make distclean &> /dev/null
make -f Makefile.cvs clean &> /dev/null
echo `basename $MAKELOG`.gz >> $STATUSLOG
svn up &> $MAKELOG || (echo "svn up failed" | tee -a $STATUSLOG; tail -10 $MAKELOG)
if test `wc -l < $MAKELOG` -le 5; then
#  echo "no changes since last run, skipping build and test"
  exit
fi
tools/build/checkSvnProps.py
make -f Makefile.cvs >> $MAKELOG 2>&1 || (echo "autoreconf failed" | tee -a $STATUSLOG; tail -10 $MAKELOG)
./configure --prefix=$PREFIX/sumo \
 --with-gtest=$PREFIX >> $MAKELOG 2>&1 || (echo "configure failed" | tee -a $STATUSLOG; tail -10 $MAKELOG)
if make >> $MAKELOG 2>&1; then
  $PREFIX/sumo/unittest/src/sumo-unittest >> $MAKELOG 2>&1 || (echo "unit tests failed" | tee -a $STATUSLOG; tail -10 $MAKELOG)
  if make install >> $MAKELOG 2>&1; then
    make distcheck >> $MAKELOG 2>&1 || (echo "make distcheck failed" | tee -a $STATUSLOG; tail -10 $MAKELOG)
    make dist-complete >> $MAKELOG 2>&1 || (echo "make dist-complete failed" | tee -a $STATUSLOG; tail -10 $MAKELOG)
  else
    echo "make install failed" | tee -a $STATUSLOG; tail -10 $MAKELOG
  fi
else
  echo "make failed" | tee -a $STATUSLOG; tail -20 $MAKELOG
fi
echo `grep -c warning $MAKELOG` warnings >> $STATUSLOG
gzip -f $MAKELOG
scp -q $MAKELOG.gz $REMOTEDIR

echo "--" >> $STATUSLOG
if test -e $PREFIX/sumo/bin/sumo -a $PREFIX/sumo/bin/sumo -nt $PREFIX/sumo/configure; then
  # run tests
  export PATH=$PREFIX/texttest/bin:$PATH
  export TEXTTEST_TMP=$PREFIX/texttesttmp
  find $SUMO_BATCH_RESULT -mtime +20 -type f | xargs -r rm
  rm -rf $SUMO_REPORT/* $TEXTTEST_TMP/*
  tests/runTests.sh $PREFIX/sumo/bin "texttest.py -b $FILEPREFIX" &> $TESTLOG
  if which Xvfb &>/dev/null; then
    tests/runTests.sh $PREFIX/sumo/bin "texttest.py -a sumo.gui -b $FILEPREFIX" >> $TESTLOG 2>&1
  fi
  tests/runTests.sh $PREFIX/sumo/bin "texttest.py -b $FILEPREFIX -coll" >> $TESTLOG 2>&1
  find $TEXTTEST_TMP -name batchreport."*" -exec echo -n '{} ' \; -exec head -1 '{}' \; | sort >> $STATUSLOG
  scp -qr $SUMO_REPORT $REMOTEDIR
fi

echo "--" >> $STATUSLOG
echo `basename $MAKEALLLOG`.gz >> $STATUSLOG
export CXXFLAGS="-Wall -W -pedantic -Wno-long-long"
./configure --program-suffix=D --prefix=$PREFIX/sumo \
  --disable-double-precision --disable-subsecond \
  --enable-debug --enable-memcheck --enable-messages &> $MAKEALLLOG || (echo "configure with all options failed" | tee -a $STATUSLOG; tail -10 $MAKEALLLOG)
if make >> $MAKEALLLOG 2>&1; then
  make install >> $MAKEALLLOG 2>&1 || (echo "make install with all options failed" | tee -a $STATUSLOG; tail -10 $MAKEALLLOG)
else
  echo "make with all options failed" | tee -a $STATUSLOG; tail -20 $MAKEALLLOG
fi
echo `grep -c warning $MAKEALLLOG` warnings >> $STATUSLOG
gzip -f $MAKEALLLOG
scp -q $MAKEALLLOG.gz $REMOTEDIR
echo "--" >> $STATUSLOG
tools/xml/schemaCheck.py tests &> $XMLLOG || echo "schema check failed"
scp -q $STATUSLOG $REMOTEDIR
